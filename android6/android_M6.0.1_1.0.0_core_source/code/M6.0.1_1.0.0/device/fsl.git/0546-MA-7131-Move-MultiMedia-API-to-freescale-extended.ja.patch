From 868ccb00cb3d2b681c6b3c9aedc0021aee1e6515 Mon Sep 17 00:00:00 2001
From: MJm <B55507@freescale.com>
Date: Tue, 20 Oct 2015 09:41:58 +0800
Subject: [PATCH 546/602] MA-7131 Move MultiMedia API to
 freescale-extended.jar

Add 2 java files, FslMediaPlayer.java & AudioEncoder.java

Signed-off-by: Ma Jiamin<b55507@freescale.com>
---
 common/extended/freescale-extended/README          |  4 ++
 .../java/com/freescale/media/AudioEncoder.java     | 20 +++++++++
 .../java/com/freescale/media/FslMediaPlayer.java   | 50 ++++++++++++++++++++++
 3 files changed, 74 insertions(+)
 create mode 100644 common/extended/freescale-extended/README
 create mode 100644 common/extended/freescale-extended/java/com/freescale/media/AudioEncoder.java
 create mode 100644 common/extended/freescale-extended/java/com/freescale/media/FslMediaPlayer.java

diff --git a/common/extended/freescale-extended/README b/common/extended/freescale-extended/README
new file mode 100644
index 0000000..6ef062d
--- /dev/null
+++ b/common/extended/freescale-extended/README
@@ -0,0 +1,4 @@
+How to use this extended shared library:
+1.Add LOCAL_JAVA_LIBRARIES := freescale-extended in Android.mk
+2.Add <uses-library android:name="freescale-extended"/> in AndroidManifest.xml
+
diff --git a/common/extended/freescale-extended/java/com/freescale/media/AudioEncoder.java b/common/extended/freescale-extended/java/com/freescale/media/AudioEncoder.java
new file mode 100644
index 0000000..93926ae
--- /dev/null
+++ b/common/extended/freescale-extended/java/com/freescale/media/AudioEncoder.java
@@ -0,0 +1,20 @@
+/*
+ * Copyright (C) 2015 Freescale Semiconductor, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.freescale.media;
+
+public final class AudioEncoder{
+	public static final int MP3 = 7;
+}
diff --git a/common/extended/freescale-extended/java/com/freescale/media/FslMediaPlayer.java b/common/extended/freescale-extended/java/com/freescale/media/FslMediaPlayer.java
new file mode 100644
index 0000000..043d854
--- /dev/null
+++ b/common/extended/freescale-extended/java/com/freescale/media/FslMediaPlayer.java
@@ -0,0 +1,50 @@
+/*
+ * Copyright (C) 2015 Freescale Semiconductor, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.freescale.media;
+
+import android.os.Parcel;
+import android.os.Parcelable;
+import android.media.MediaPlayer;
+
+public final class FslMediaPlayer extends MediaPlayer{
+
+	private final static String IMEDIA_PLAYER = "android.media.IMediaPlayer";
+	private static final int INVOKE_ID_SET_PLAY_SPEED = 8;	
+
+       /**
+        * Set play speed.
+        *
+        * @param Speed is normalized speed multiplied by 0x10000
+        * Range of normalized speed is:
+        *         [-16,-2] means rewind, [0.1, 16] means forward, step is 0.1
+        * When normalized speed is [0.1, 1.9] audio is outputted, otherwise audio
+        * is not outputted.
+        */
+	public void setPlaySpeed(int[] Speed){
+		Parcel request = Parcel.obtain();
+		Parcel reply = Parcel.obtain();
+		try{
+			request.writeInterfaceToken(IMEDIA_PLAYER);
+			request.writeInt(INVOKE_ID_SET_PLAY_SPEED);
+			request.writeInt(Speed[0]);
+			invoke(request, reply);
+			Speed[0] = reply.readInt();
+		}finally{
+			request.recycle();
+			reply.recycle();
+		}
+	}
+}
-- 
1.8.0

