From 715f10a633060a54eba49c7a6d538b93d05ff6ba Mon Sep 17 00:00:00 2001
From: Lin Fuzhen <fuzhen.lin@freescale.com>
Date: Thu, 14 Mar 2013 09:53:15 +0800
Subject: [PATCH 176/602] ENGR00254281:Introduce a simple way to build
 differnt images

Introduce a simple way to build ubifs image for nand devicei and ext4
images for eMMC/SD  base on Android build system.
For those boards support booting from both NAND and eMMC/SD, this patch
provide a way to build out nand images with just add a build option to
enable build ubifs or ext4.
e.g   make BUILD_TARGET_FS=ubifs will build image for NAND device
      make BUILD_TARGET_FS=ext4 will build image for eMMC/SD
if don't add BUILD_TARGET_FS when build, the build system will
build image according default config in BoardConfig.mk file.

Signed-off-by: Lin Fuzhen <fuzhen.lin@freescale.com>
---
 arm2_6dq/BoardConfig.mk            |  5 ++++-
 arm2_6sl/BoardConfig.mk            |  5 ++++-
 evk_6sl/BoardConfig.mk             |  4 +++-
 hdmidongle_6dq/BoardConfig.mk      | 13 ++++++++-----
 hdmidongle_6dq/recovery.fstab      | 15 +++++++++------
 hdmidongle_6dq/recovery_nand.fstab |  7 +++++++
 imx6/etc/fstab.freescale           |  5 -----
 imx6/etc/fstab_nand.freescale      | 10 ++++++++++
 imx6/imx6.mk                       |  4 ++--
 imx6/imx6_target_fs.mk             | 19 +++++++++++++++++++
 imx6/sabreauto_6q.mk               |  3 ++-
 sabreauto_6q/BoardConfig.mk        |  7 +++----
 sabreauto_6q/recovery.fstab        |  7 -------
 sabreauto_6q/recovery_nand.fstab   |  6 ++++++
 sabresd_6dq/BoardConfig.mk         |  5 ++++-
 15 files changed, 81 insertions(+), 34 deletions(-)
 create mode 100644 hdmidongle_6dq/recovery_nand.fstab
 create mode 100644 imx6/etc/fstab_nand.freescale
 create mode 100644 imx6/imx6_target_fs.mk
 create mode 100644 sabreauto_6q/recovery_nand.fstab

diff --git a/arm2_6dq/BoardConfig.mk b/arm2_6dq/BoardConfig.mk
index d6a1f04..1e2ac24 100755
--- a/arm2_6dq/BoardConfig.mk
+++ b/arm2_6dq/BoardConfig.mk
@@ -7,6 +7,10 @@ include device/fsl/arm2_6dq/build_id.mk
 include device/fsl-proprietary/gpu-viv/fsl-gpu.mk
 include device/fsl/imx6/BoardConfigCommon.mk
 
+# arm2_6dq default target for EXT4
+BUILD_TARGET_FS ?= ext4
+include device/fsl/imx6/imx6_target_fs.mk
+
 TARGET_BOOTLOADER_BOARD_NAME := ARM2
 
 BOARD_SOC_CLASS := IMX6
@@ -49,7 +53,6 @@ USE_QEMU_GPS_HARDWARE := false
 
 # for recovery service
 TARGET_SELECT_KEY := 28
-TARGET_USERIMAGES_USE_EXT4 := true
 # we don't support sparse image.
 TARGET_USERIMAGES_SPARSE_EXT_DISABLED := true
 
diff --git a/arm2_6sl/BoardConfig.mk b/arm2_6sl/BoardConfig.mk
index c5f318a..d12f9e7 100755
--- a/arm2_6sl/BoardConfig.mk
+++ b/arm2_6sl/BoardConfig.mk
@@ -7,6 +7,10 @@ include device/fsl/arm2_6sl/build_id.mk
 include device/fsl-proprietary/gpu-viv/fsl-gpu.mk
 include device/fsl/imx6/BoardConfigCommon.mk
 
+# arm2_sl default target for EXT4
+BUILD_TARGET_FS ?= ext4
+include device/fsl/imx6/imx6_target_fs.mk
+
 TARGET_BOOTLOADER_BOARD_NAME := ARM2
 
 BOARD_SOC_CLASS := IMX6
@@ -49,7 +53,6 @@ USE_QEMU_GPS_HARDWARE := false
 
 # for recovery service
 TARGET_SELECT_KEY := 28
-TARGET_USERIMAGES_USE_EXT4 := true
 # we don't support sparse image.
 TARGET_USERIMAGES_SPARSE_EXT_DISABLED := true
 
diff --git a/evk_6sl/BoardConfig.mk b/evk_6sl/BoardConfig.mk
index 2a3fd4a..ee7dcb2 100644
--- a/evk_6sl/BoardConfig.mk
+++ b/evk_6sl/BoardConfig.mk
@@ -5,6 +5,9 @@
 include device/fsl/imx6/soc/imx6sl.mk
 include device/fsl-proprietary/gpu-viv/fsl-gpu.mk
 include device/fsl/imx6/BoardConfigCommon.mk
+# evk_mx6sl default target for EXT4
+BUILD_TARGET_FS ?= ext4
+include device/fsl/imx6/imx6_target_fs.mk
 
 TARGET_BOOTLOADER_BOARD_NAME := EVK
 
@@ -45,7 +48,6 @@ USE_QEMU_GPS_HARDWARE := false
 
 # for recovery service
 TARGET_SELECT_KEY := 28
-TARGET_USERIMAGES_USE_EXT4 := true
 # we don't support sparse image.
 TARGET_USERIMAGES_SPARSE_EXT_DISABLED := true
 
diff --git a/hdmidongle_6dq/BoardConfig.mk b/hdmidongle_6dq/BoardConfig.mk
index f0bc64c..1a1bda8 100755
--- a/hdmidongle_6dq/BoardConfig.mk
+++ b/hdmidongle_6dq/BoardConfig.mk
@@ -6,12 +6,13 @@ include device/fsl/imx6/soc/imx6dq.mk
 include device/fsl/hdmidongle_6dq/build_id.mk
 include device/fsl/imx6/BoardConfigCommon.mk
 include device/fsl-proprietary/gpu-viv/fsl-gpu.mk
+# hdmidongle_6dq default built for NAND device
+BUILD_TARGET_FS ?= ubifs
+include device/fsl/imx6/imx6_target_fs.mk
 
 TARGET_BOOTLOADER_BOARD_NAME := HDMIDONGLE
 PRODUCT_MODEL := HDMIDONGLE-MX6DQ
 
-TARGET_USERIMAGES_USE_EXT4 := false
-TARGET_USERIMAGES_USE_UBIFS = true
 BOARD_WLAN_VENDOR 			 := NULL
 
 # Wifi
@@ -56,6 +57,9 @@ BOARD_HAS_SENSOR := false
 # for recovery service
 TARGET_SELECT_KEY := 28
 
+# BOARD_KERNEL_CMDLINE
+BOARD_KERNEL_CMDLINE := console=ttymxc3,115200 init=/init video=mxcfb0 video=mxcfb1:off video=mxcfb2:off fbmem=28M fb0base=0x27b00000 vmalloc=400M androidboot.console=ttymxc3 enable_wait_mode=off androidboot.hardware=freescale
+
 ifeq ($(TARGET_USERIMAGES_USE_UBIFS),true)
 UBI_ROOT_INI := device/fsl/hdmidongle_6dq/ubi/ubinize.ini
 # for Micron MT29F32G08CBACAWP
@@ -66,7 +70,8 @@ TARGET_UBIRAW_ARGS := -m 4096 -p 1024KiB $(UBI_ROOT_INI)
 #TARGET_UBIRAW_ARGS := -m 4096 -p 512KiB $(UBI_ROOT_INI)
 
 # Note: this NAND partition table must align with MFGTool's config.
-BOARD_KERNEL_CMDLINE +=  mtdparts=gpmi-nand:16m(bootloader),16m(bootimg),128m(recovery),-(root) ubi.mtd=3
+#BOARD_KERNEL_CMDLINE +=  mtdparts=gpmi-nand:16m(bootloader),16m(bootimg),128m(recovery),-(root) ubi.mtd=3
+BOARD_KERNEL_CMDLINE +=  mtdparts=gpmi-nand:20m(bootloader),20m(bootimg),20m(recovery),-(root) gpmi_debug_init ubi.mtd=3
 endif
 
 ifeq ($(TARGET_USERIMAGES_USE_UBIFS),true)
@@ -87,7 +92,5 @@ IMX_CAMERA_HAL_V2 := true
 # define frame buffer count
 NUM_FRAMEBUFFER_SURFACE_BUFFERS := 3
 
-#UBI boot command line.
-BOARD_KERNEL_CMDLINE := console=ttymxc3,115200 init=/init video=mxcfb0 video=mxcfb1:off video=mxcfb2:off fbmem=28M fb0base=0x27b00000 vmalloc=400M androidboot.console=ttymxc3  mtdparts=gpmi-nand:20m(bootloader),20m(bootimg),20m(recovery),-(root) gpmi_debug_init ubi.mtd=3 enable_wait_mode=off androidboot.hardware=freescale
 
 TARGET_BOOTLOADER_CONFIG := 6q:mx6q_hdmidongle_nand_android_config 6dl:mx6dl_hdmidongle_nand_android_config
diff --git a/hdmidongle_6dq/recovery.fstab b/hdmidongle_6dq/recovery.fstab
index 0e9e3ca..cc47236 100644
--- a/hdmidongle_6dq/recovery.fstab
+++ b/hdmidongle_6dq/recovery.fstab
@@ -1,7 +1,10 @@
-# Use below lines if you use NAND:
-/boot mtd /dev/mtd/mtd1
-/recovery mtd /dev/mtd/mtd2
-/system ubifs /dev/ubi0_0
-/data ubifs /dev/ubi0_2
-/cache ubifs /dev/ubi0_1
+# Use below lines if you use eMMC:
 /sdcard vfat /dev/block/mmcblk0p1
+/boot emmc /dev/block/mmcblk0p1
+/recovery emmc /dev/block/mmcblk0p2
+/system ext4 /dev/block/mmcblk0p5
+/cache ext4 /dev/block/mmcblk0p6
+/data ext4 /dev/block/mmcblk0p4
+/misc  emmc /dev/block/mmcblk0p8
+
+/sdcard vfat /dev/block/mmcblk1p1
diff --git a/hdmidongle_6dq/recovery_nand.fstab b/hdmidongle_6dq/recovery_nand.fstab
new file mode 100644
index 0000000..0e9e3ca
--- /dev/null
+++ b/hdmidongle_6dq/recovery_nand.fstab
@@ -0,0 +1,7 @@
+# Use below lines if you use NAND:
+/boot mtd /dev/mtd/mtd1
+/recovery mtd /dev/mtd/mtd2
+/system ubifs /dev/ubi0_0
+/data ubifs /dev/ubi0_2
+/cache ubifs /dev/ubi0_1
+/sdcard vfat /dev/block/mmcblk0p1
diff --git a/imx6/etc/fstab.freescale b/imx6/etc/fstab.freescale
index aed23a5..685b4ea 100644
--- a/imx6/etc/fstab.freescale
+++ b/imx6/etc/fstab.freescale
@@ -9,8 +9,3 @@
 /dev/block/mmcblk0p6    /cache   ext4    nosuid,nodev,nomblk_io_submit				                          wait
 /dev/block/mmcblk0p7    /device  ext4    ro,nosuid,nodev				                                  wait
 
-# below is for ubi support, uncomment to support ubifs(NAND)
-#ubi0:system	/system		ubifs 	ro					wait
-#ubi0:data       /data           ubifs   nosuid,nodev,nodiratime,noatime         wait
-#ubi0:cache      /cache          ubifs   nosuid,nodev                            wait
-#ubi0:device     /device         ubifs   nosuid,nodev                         wait
diff --git a/imx6/etc/fstab_nand.freescale b/imx6/etc/fstab_nand.freescale
new file mode 100644
index 0000000..55e65f6
--- /dev/null
+++ b/imx6/etc/fstab_nand.freescale
@@ -0,0 +1,10 @@
+# Android fstab file.
+#<src>                                                  <mnt_point>         <type>    <mnt_flags>                                                                         <fs_mgr_flags>
+# The filesystem that contains the filesystem checker binary (typically /system) cannot
+# specify MF_CHECK, and must come before any filesystems that do specify MF_CHECK
+
+# below is for ubi support, uncomment to support ubifs(NAND)
+ubi0:system	/system		ubifs 	ro					wait
+ubi0:data       /data           ubifs   nosuid,nodev,nodiratime,noatime         wait
+ubi0:cache      /cache          ubifs   nosuid,nodev                            wait
+ubi0:device     /device         ubifs   nosuid,nodev                         wait
diff --git a/imx6/imx6.mk b/imx6/imx6.mk
index c3d363b..2395edd 100644
--- a/imx6/imx6.mk
+++ b/imx6/imx6.mk
@@ -1,7 +1,8 @@
 $(call inherit-product, $(SRC_TARGET_DIR)/product/languages_full.mk)
 $(call inherit-product, $(SRC_TARGET_DIR)/product/generic.mk)
 $(call inherit-product, $(TOPDIR)frameworks/base/data/sounds/AllAudio.mk)
-
+$(shell touch device/fsl/imx6/etc/fstab_nand.freescale)
+$(shell touch device/fsl/imx6/etc/fstab.freescale)
 # overrides
 PRODUCT_BRAND := Freescale
 PRODUCT_MANUFACTURER := Freescale
@@ -295,7 +296,6 @@ PRODUCT_COPY_FILES +=	\
 	device/fsl/common/input/eGalax_Touch_Screen.idc:system/usr/idc/HannStar_P1003_Touchscreen.idc \
 	device/fsl/common/input/eGalax_Touch_Screen.idc:system/usr/idc/Novatek_NT11003_Touch_Screen.idc \
 	device/fsl/imx6/etc/init.rc:root/init.rc \
-	device/fsl/imx6/etc/fstab.freescale:root/fstab.freescale \
 	device/fsl/imx6/etc/apns-conf.xml:system/etc/apns-conf.xml \
 	device/fsl/imx6/etc/init.usb.rc:root/init.freescale.usb.rc \
 	device/fsl/imx6/etc/ueventd.freescale.rc:root/ueventd.freescale.rc \
diff --git a/imx6/imx6_target_fs.mk b/imx6/imx6_target_fs.mk
new file mode 100644
index 0000000..8d246a3
--- /dev/null
+++ b/imx6/imx6_target_fs.mk
@@ -0,0 +1,19 @@
+# BUILD_TARGET_FS is from BoardConfig or build environment
+# e.g make BUILD_TARGET_FS=ubifs for NAND device
+# e.g make BUILD_TARGET_FS=ext4 for eMMC/SD
+# sabreauto_6dq default target for EXT4
+#
+ifeq ($(BUILD_TARGET_FS),ubifs)
+# build ubifs for nand devices
+TARGET_USERIMAGES_USE_UBIFS := true
+TARGET_USERIMAGES_USE_EXT4 := false
+PRODUCT_COPY_FILES +=	\
+	device/fsl/imx6/etc/fstab_nand.freescale:root/fstab.freescale
+else
+# build for ext4
+TARGET_USERIMAGES_USE_EXT4 := true
+TARGET_USERIMAGES_USE_UBIFS := false
+PRODUCT_COPY_FILES +=	\
+	device/fsl/imx6/etc/fstab.freescale:root/fstab.freescale
+endif # BUILD_TARGET_FS
+
diff --git a/imx6/sabreauto_6q.mk b/imx6/sabreauto_6q.mk
index d208171..99fe546 100644
--- a/imx6/sabreauto_6q.mk
+++ b/imx6/sabreauto_6q.mk
@@ -7,10 +7,11 @@ $(call inherit-product, device/fsl/imx6/imx6.mk)
 PRODUCT_NAME := sabreauto_6q
 PRODUCT_DEVICE := sabreauto_6q
 
+
 PRODUCT_COPY_FILES += \
 	device/fsl/sabreauto_6q/required_hardware.xml:system/etc/permissions/required_hardware.xml \
 	device/fsl/sabreauto_6q/init.rc:root/init.freescale.rc \
-        device/fsl/sabreauto_6q/vold.fstab:system/etc/vold.fstab \
+    device/fsl/sabreauto_6q/vold.fstab:system/etc/vold.fstab \
 	device/fsl/sabreauto_6q/audio_policy.conf:system/etc/audio_policy.conf \
 	device/fsl/sabreauto_6q/audio_effects.conf:system/vendor/etc/audio_effects.conf
 
diff --git a/sabreauto_6q/BoardConfig.mk b/sabreauto_6q/BoardConfig.mk
index 045ccb4..b118ec5 100644
--- a/sabreauto_6q/BoardConfig.mk
+++ b/sabreauto_6q/BoardConfig.mk
@@ -6,6 +6,9 @@ include device/fsl/imx6/soc/imx6dq.mk
 include device/fsl/sabreauto_6q/build_id.mk
 include device/fsl/imx6/BoardConfigCommon.mk
 include device/fsl-proprietary/gpu-viv/fsl-gpu.mk
+# sabreauto_6dq default target for EXT4
+BUILD_TARGET_FS ?= ext4
+include device/fsl/imx6/imx6_target_fs.mk
 
 TARGET_BOOTLOADER_BOARD_NAME := SABREAUTO
 
@@ -60,7 +63,6 @@ SENSOR_MMA8451 := true
 
 # for recovery service
 TARGET_SELECT_KEY := 28
-TARGET_USERIMAGES_USE_EXT4 := true
 # we don't support sparse image.
 TARGET_USERIMAGES_SPARSE_EXT_DISABLED := true
 
@@ -80,9 +82,6 @@ USE_GPU_ALLOCATOR := true
 
 BOARD_KERNEL_CMDLINE := console=ttymxc3,115200 init=/init video=mxcfb0:dev=ldb,bpp=32 video=mxcfb1:off video=mxcfb2:off fbmem=10M vmalloc=400M androidboot.console=ttymxc3 androidboot.hardware=freescale
 
-# uncomment below lins if use NAND
-#TARGET_USERIMAGES_USE_UBIFS = true
-
 ifeq ($(TARGET_USERIMAGES_USE_UBIFS),true)
 #UBI boot command line.
 UBI_ROOT_INI := device/fsl/sabreauto_6q/ubi/ubinize.ini
diff --git a/sabreauto_6q/recovery.fstab b/sabreauto_6q/recovery.fstab
index 7fabe4f..7e44449 100644
--- a/sabreauto_6q/recovery.fstab
+++ b/sabreauto_6q/recovery.fstab
@@ -5,11 +5,4 @@
 /data ext4 /dev/block/mmcblk0p4
 /misc  emmc /dev/block/mmcblk0p8
 
-# UBI support is under below:
-#/boot mtd /dev/mtd/mtd1
-#/recovery mtd /dev/mtd/mtd2
-#/system ubifs /dev/ubi0_0
-#/data ubifs /dev/ubi0_3
-#/cache ubifs /dev/ubi0_1
-
 /sdcard vfat /dev/block/mmcblk1p1
diff --git a/sabreauto_6q/recovery_nand.fstab b/sabreauto_6q/recovery_nand.fstab
new file mode 100644
index 0000000..270041c
--- /dev/null
+++ b/sabreauto_6q/recovery_nand.fstab
@@ -0,0 +1,6 @@
+# UBI support is under below:
+/boot mtd /dev/mtd/mtd1
+/recovery mtd /dev/mtd/mtd2
+/system ubifs /dev/ubi0_0
+/data ubifs /dev/ubi0_3
+/cache ubifs /dev/ubi0_1
diff --git a/sabresd_6dq/BoardConfig.mk b/sabresd_6dq/BoardConfig.mk
index 9c8a32d..15f693a 100755
--- a/sabresd_6dq/BoardConfig.mk
+++ b/sabresd_6dq/BoardConfig.mk
@@ -6,6 +6,10 @@ include device/fsl/imx6/soc/imx6dq.mk
 include device/fsl/sabresd_6dq/build_id.mk
 include device/fsl/imx6/BoardConfigCommon.mk
 include device/fsl-proprietary/gpu-viv/fsl-gpu.mk
+# sabresd_6dq default target for EXT4
+BUILD_TARGET_FS ?= ext4
+include device/fsl/imx6/imx6_target_fs.mk
+
 
 TARGET_BOOTLOADER_BOARD_NAME := SABRESD
 PRODUCT_MODEL := SABRESD-MX6DQ
@@ -56,7 +60,6 @@ SENSOR_MMA8451 := true
 # for recovery service
 TARGET_SELECT_KEY := 28
 
-TARGET_USERIMAGES_USE_EXT4 := true
 # we don't support sparse image.
 TARGET_USERIMAGES_SPARSE_EXT_DISABLED := true
 
-- 
1.8.0

