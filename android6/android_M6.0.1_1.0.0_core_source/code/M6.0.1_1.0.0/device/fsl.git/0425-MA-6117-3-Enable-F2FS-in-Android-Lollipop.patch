From f8d853f49e72f0cc355994548dd5c830c44b7955 Mon Sep 17 00:00:00 2001
From: "guoyin.chen" <guoyin.chen@freescale.com>
Date: Thu, 15 Jan 2015 13:44:39 +0800
Subject: [PATCH 425/602] MA-6117-3 Enable F2FS in Android Lollipop

Rename VENDER partition to DEVICE partition to align release doc
Add DATAFOOTER partition to store data parition's encryption metadata
Add script to create f2fs data partitions on block device

Signed-off-by: guoyin.chen <guoyin.chen@freescale.com>
---
 common/tools/fsl-sdcard-partition-f2fs.sh | 159 ++++++++++++++++++++++++++++++
 common/tools/fsl-sdcard-partition.sh      |  37 +++----
 2 files changed, 170 insertions(+), 26 deletions(-)
 create mode 100755 common/tools/fsl-sdcard-partition-f2fs.sh

diff --git a/common/tools/fsl-sdcard-partition-f2fs.sh b/common/tools/fsl-sdcard-partition-f2fs.sh
new file mode 100755
index 0000000..b422269
--- /dev/null
+++ b/common/tools/fsl-sdcard-partition-f2fs.sh
@@ -0,0 +1,159 @@
+#!/bin/bash
+
+# partition size in MB
+BOOTLOAD_RESERVE=8
+BOOT_ROM_SIZE=8
+SYSTEM_ROM_SIZE=512
+CACHE_SIZE=512
+RECOVERY_ROM_SIZE=8
+DEVICE_SIZE=8
+MISC_SIZE=6
+DATAFOOTER_SIZE=2
+
+help() {
+
+bn=`basename $0`
+cat << EOF
+usage $bn <option> device_node
+
+options:
+  -h				displays this help message
+  -s				only get partition size
+  -np 				not partition.
+  -f soc_name			flash android image.
+EOF
+
+}
+
+# parse command line
+moreoptions=1
+node="na"
+soc_name=""
+cal_only=0
+flash_images=0
+not_partition=0
+not_format_fs=0
+bootloader_file="u-boot.imx"
+bootimage_file="boot.img"
+systemimage_file="system.img"
+recoveryimage_file="recovery.img"
+while [ "$moreoptions" = 1 -a $# -gt 0 ]; do
+	case $1 in
+	    -h) help; exit ;;
+	    -s) cal_only=1 ;;
+	    -f) flash_images=1 ; soc_name=$2; shift;;
+	    -np) not_partition=1 ;;
+	    -nf) not_format_fs=1 ;;
+	    *)  moreoptions=0; node=$1 ;;
+	esac
+	[ "$moreoptions" = 0 ] && [ $# -gt 1 ] && help && exit
+	[ "$moreoptions" = 1 ] && shift
+done
+
+if [ ! -e ${node} ]; then
+	help
+	exit
+fi
+
+
+# call sfdisk to create partition table
+# get total card size
+seprate=40
+total_size=`sfdisk -s ${node}`
+total_size=`expr ${total_size} / 1024`
+boot_rom_sizeb=`expr ${BOOT_ROM_SIZE} + ${BOOTLOAD_RESERVE}`
+extend_size=`expr ${SYSTEM_ROM_SIZE} + ${CACHE_SIZE} + ${DEVICE_SIZE} + ${MISC_SIZE} + ${DATAFOOTER_SIZE} + ${seprate}`
+data_size=`expr ${total_size} - ${boot_rom_sizeb} - ${RECOVERY_ROM_SIZE} - ${extend_size} + ${seprate}`
+
+# create partitions
+if [ "${cal_only}" -eq "1" ]; then
+cat << EOF
+BOOT   : ${boot_rom_sizeb}MB
+RECOVERY: ${RECOVERY_ROM_SIZE}MB
+SYSTEM : ${SYSTEM_ROM_SIZE}MB
+CACHE  : ${CACHE_SIZE}MB
+DATA   : ${data_size}MB
+MISC   : ${MISC_SIZE}MB
+DEVICE : ${DEVICE_SIZE}MB
+DATAFOOTER : ${DATAFOOTER_SIZE}MB
+EOF
+exit
+fi
+
+function format_android
+{
+    echo "formating android images"
+    mkfs.f2fs ${node}${part}4 -l data
+    mkfs.ext4 ${node}${part}5 -Lsystem
+    mkfs.ext4 ${node}${part}6 -Lcache
+    mkfs.ext4 ${node}${part}7 -Ldevice
+}
+
+function flash_android
+{
+    bootloader_file="u-boot-${soc_name}.imx"
+    bootimage_file="boot-${soc_name}.img"
+    recoveryimage_file="recovery-${soc_name}.img"
+if [ "${flash_images}" -eq "1" ]; then
+    echo "flashing android images..."    
+    echo "bootloader: ${bootloader_file}"
+    echo "boot image: ${bootimage_file}"
+    echo "recovery image: ${recoveryimage_file}"
+    echo "system image: ${systemimage_file}"
+    dd if=/dev/zero of=${node} bs=1k seek=384 count=129
+    dd if=${bootimage_file} of=${node}${part}1
+    dd if=${recoveryimage_file} of=${node}${part}2
+    dd if=${systemimage_file} of=${node}${part}5
+    dd if=${bootloader_file} of=${node} bs=1k seek=1
+    sync
+fi
+}
+
+if [[ "${not_partition}" -eq "1" && "${flash_images}" -eq "1" ]] ; then
+    flash_android
+    exit
+fi
+
+# destroy the partition table
+dd if=/dev/zero of=${node} bs=1024 count=1
+
+sfdisk --force -uM ${node} << EOF
+,${boot_rom_sizeb},83
+,${RECOVERY_ROM_SIZE},83
+,${extend_size},5
+,${data_size},83
+,${SYSTEM_ROM_SIZE},83
+,${CACHE_SIZE},83
+,${DEVICE_SIZE},83
+,${MISC_SIZE},83
+,${DATAFOOTER_SIZE},83
+EOF
+
+# adjust the partition reserve for bootloader.
+# if you don't put the uboot on same device, you can remove the BOOTLOADER_ERSERVE
+# to have 8M space.
+# the minimal sylinder for some card is 4M, maybe some was 8M
+# just 8M for some big eMMC 's sylinder
+sfdisk --force -uM ${node} -N1 << EOF
+${BOOTLOAD_RESERVE},${BOOT_ROM_SIZE},83
+EOF
+
+# format the SDCARD/DATA/CACHE partition
+part=""
+echo ${node} | grep mmcblk > /dev/null
+if [ "$?" -eq "0" ]; then
+	part="p"
+fi
+
+format_android
+flash_android
+
+
+# For MFGTool Notes:
+# MFGTool use mksdcard-android.tar store this script
+# if you want change it.
+# do following:
+#   tar xf mksdcard-android.sh.tar
+#   vi mksdcard-android.sh 
+#   [ edit want you want to change ]
+#   rm mksdcard-android.sh.tar; tar cf mksdcard-android.sh.tar mksdcard-android.sh
diff --git a/common/tools/fsl-sdcard-partition.sh b/common/tools/fsl-sdcard-partition.sh
index 7cd1bdc..e55b32b 100755
--- a/common/tools/fsl-sdcard-partition.sh
+++ b/common/tools/fsl-sdcard-partition.sh
@@ -6,8 +6,9 @@ BOOT_ROM_SIZE=8
 SYSTEM_ROM_SIZE=512
 CACHE_SIZE=512
 RECOVERY_ROM_SIZE=8
-VENDER_SIZE=8
-MISC_SIZE=8
+DEVICE_SIZE=8
+MISC_SIZE=6
+DATAFOOTER_SIZE=2
 
 help() {
 
@@ -24,14 +25,6 @@ EOF
 
 }
 
-# check the if root?
-userid=`id -u`
-if [ $userid -ne "0" ]; then
-	echo "you're not root?"
-	exit
-fi
-
-
 # parse command line
 moreoptions=1
 node="na"
@@ -69,7 +62,7 @@ seprate=40
 total_size=`sfdisk -s ${node}`
 total_size=`expr ${total_size} / 1024`
 boot_rom_sizeb=`expr ${BOOT_ROM_SIZE} + ${BOOTLOAD_RESERVE}`
-extend_size=`expr ${SYSTEM_ROM_SIZE} + ${CACHE_SIZE} + ${VENDER_SIZE} + ${MISC_SIZE} + ${seprate}`
+extend_size=`expr ${SYSTEM_ROM_SIZE} + ${CACHE_SIZE} + ${DEVICE_SIZE} + ${MISC_SIZE} + ${DATAFOOTER_SIZE} + ${seprate}`
 data_size=`expr ${total_size} - ${boot_rom_sizeb} - ${RECOVERY_ROM_SIZE} - ${extend_size} + ${seprate}`
 
 # create partitions
@@ -81,6 +74,8 @@ SYSTEM : ${SYSTEM_ROM_SIZE}MB
 CACHE  : ${CACHE_SIZE}MB
 DATA   : ${data_size}MB
 MISC   : ${MISC_SIZE}MB
+DEVICE : ${DEVICE_SIZE}MB
+DATAFOOTER : ${DATAFOOTER_SIZE}MB
 EOF
 exit
 fi
@@ -88,22 +83,10 @@ fi
 function format_android
 {
     echo "formating android images"
-    mkfs.ext4 ${node}${part}4 -Ldata
+    mkfs.ext4 ${node}${part}4 -L data
     mkfs.ext4 ${node}${part}5 -Lsystem
     mkfs.ext4 ${node}${part}6 -Lcache
-    mkfs.ext4 ${node}${part}7 -Lvender
-    mkdir /media/tmp
-    mount ${node}${part}4 /media/tmp
-    amount=$(df -k | grep ${node}${part}4 | awk '{print $2}')
-    stag=$amount
-    stag=$((stag-32))
-    kilo=K
-    amountkilo=$stag$kilo
-    sleep 1s
-    umount /media/tmp
-    rm -rf /media/tmp
-    e2fsck -f ${node}${part}4
-    resize2fs ${node}${part}4 $amountkilo
+    mkfs.ext4 ${node}${part}7 -Ldevice
 }
 
 function flash_android
@@ -122,6 +105,7 @@ if [ "${flash_images}" -eq "1" ]; then
     dd if=${bootimage_file} of=${node}${part}1
     dd if=${recoveryimage_file} of=${node}${part}2
     dd if=${systemimage_file} of=${node}${part}5
+    sync
 fi
 }
 
@@ -140,8 +124,9 @@ sfdisk --force -uM ${node} << EOF
 ,${data_size},83
 ,${SYSTEM_ROM_SIZE},83
 ,${CACHE_SIZE},83
-,${VENDER_SIZE},83
+,${DEVICE_SIZE},83
 ,${MISC_SIZE},83
+,${DATAFOOTER_SIZE},83
 EOF
 
 # adjust the partition reserve for bootloader.
-- 
1.8.0

