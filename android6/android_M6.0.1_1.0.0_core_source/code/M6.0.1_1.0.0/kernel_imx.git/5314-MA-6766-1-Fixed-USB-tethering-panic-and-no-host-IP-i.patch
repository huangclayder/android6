From b0b75046605c1b27a172d8f090d3922e6dfaec70 Mon Sep 17 00:00:00 2001
From: Haoran Wang <b50027@freescale.com>
Date: Tue, 9 Jun 2015 13:02:46 +0800
Subject: [PATCH] MA-6766-1 Fixed USB tethering panic and no host IP issue

Modify bind rndis function for adding the usb interface
functions which will enable the rndis0 be ethernet-usb port.

Use rndis_unbind instead of rndis_old_unbind for the resource
free to avoid the panic issue.

Signed-off-by: Haoran Wang <b50027@freescale.com>
---
 drivers/usb/gadget/f_rndis.c | 34 +++++++++++++++++++++++++---------
 1 file changed, 25 insertions(+), 9 deletions(-)

diff --git a/drivers/usb/gadget/f_rndis.c b/drivers/usb/gadget/f_rndis.c
index 47389f7..f02ede2 100644
--- a/drivers/usb/gadget/f_rndis.c
+++ b/drivers/usb/gadget/f_rndis.c
@@ -849,6 +849,15 @@ rndis_old_unbind(struct usb_configuration *c, struct usb_function *f)
 	kfree(rndis);
 }
 
+static void rndis_unbind(struct usb_configuration *c, struct usb_function *f)
+{
+	struct f_rndis		*rndis = func_to_rndis(f);
+
+	usb_free_all_descriptors(f);
+
+	kfree(rndis->notify_req->buf);
+	usb_ep_free_request(rndis->notify, rndis->notify_req);
+}
 int
 rndis_bind_config_vendor_func(struct usb_configuration *c, u8 ethaddr[ETH_ALEN],
 		u32 vendorID, const char *manufacturer, struct eth_dev *dev,
@@ -860,6 +869,22 @@ rndis_bind_config_vendor_func(struct usb_configuration *c, u8 ethaddr[ETH_ALEN],
 	memcpy(rndis->ethaddr, ethaddr, ETH_ALEN);
 	rndis->vendorID = vendorID;
 	rndis->manufacturer = manufacturer;
+	rndis->port.ioport = dev;
+	/* RNDIS activates when the host changes this filter */
+	rndis->port.cdc_filter = 0;
+
+	/* RNDIS has special (and complex) framing */
+	rndis->port.header_len = sizeof(struct rndis_packet_msg_type);
+	rndis->port.wrap = rndis_add_header;
+	rndis->port.unwrap = rndis_rm_hdr;
+
+	rndis->port.func.name = "rndis";
+	/* descriptors are per-instance copies */
+	rndis->port.func.bind = rndis_bind;
+	rndis->port.func.unbind = rndis_unbind;
+	rndis->port.func.set_alt = rndis_set_alt;
+	rndis->port.func.setup = rndis_setup;
+	rndis->port.func.disable = rndis_disable;
 	status = usb_add_function(c, f);
 	return status;
 }
@@ -1004,15 +1029,6 @@ static void rndis_free(struct usb_function *f)
 	mutex_unlock(&opts->lock);
 }
 
-static void rndis_unbind(struct usb_configuration *c, struct usb_function *f)
-{
-	struct f_rndis		*rndis = func_to_rndis(f);
-
-	usb_free_all_descriptors(f);
-
-	kfree(rndis->notify_req->buf);
-	usb_ep_free_request(rndis->notify, rndis->notify_req);
-}
 
 static struct usb_function *rndis_alloc(struct usb_function_instance *fi)
 {
-- 
1.8.0

