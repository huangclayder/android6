From 3d9bcd1f45c07ddc1012108b08ffc7943fa45f2a Mon Sep 17 00:00:00 2001
From: Jon Medhurst <tixy@linaro.org>
Date: Mon, 2 Sep 2013 18:34:54 +0100
Subject: [PATCH] ARM: vexpress: Fixup PSCI for Linux 13.12

This builds but the system hangs just after earlyprint log shows:
  cpuidle: using governor ladder
  cpuidle: using governor menu

Signed-off-by: Jon Medhurst <tixy@linaro.org>
(cherry picked from commit ccdd0ae65221b592b61e64d9db22da20803ae7d6)
Signed-off-by: Alex Shi <alex.shi@linaro.org>
---
 arch/arm/mach-vexpress/tc2_pm.c      |  7 +++++++
 arch/arm/mach-vexpress/tc2_pm_psci.c | 16 ++++++++--------
 2 files changed, 15 insertions(+), 8 deletions(-)

diff --git a/arch/arm/mach-vexpress/tc2_pm.c b/arch/arm/mach-vexpress/tc2_pm.c
index 29e7785..a32a179 100644
--- a/arch/arm/mach-vexpress/tc2_pm.c
+++ b/arch/arm/mach-vexpress/tc2_pm.c
@@ -27,6 +27,7 @@
 #include <asm/cacheflush.h>
 #include <asm/cputype.h>
 #include <asm/cp15.h>
+#include <asm/psci.h>
 
 #include <linux/arm-cci.h>
 
@@ -329,6 +330,12 @@ static int __init tc2_pm_init(void)
 	u32 a15_cluster_id, a7_cluster_id, sys_info;
 	struct device_node *np;
 
+	ret = psci_probe();
+	if (!ret) {
+		pr_debug("psci found. Aborting native init\n");
+		return -ENODEV;
+	}
+
 	/*
 	 * The power management-related features are hidden behind
 	 * SCC registers. We need to extract runtime information like
diff --git a/arch/arm/mach-vexpress/tc2_pm_psci.c b/arch/arm/mach-vexpress/tc2_pm_psci.c
index c2fdc22..7cb2148 100644
--- a/arch/arm/mach-vexpress/tc2_pm_psci.c
+++ b/arch/arm/mach-vexpress/tc2_pm_psci.c
@@ -14,6 +14,7 @@
 
 #include <linux/init.h>
 #include <linux/kernel.h>
+#include <linux/of.h>
 #include <linux/spinlock.h>
 #include <linux/errno.h>
 
@@ -26,7 +27,6 @@
 #include <asm/cp15.h>
 
 #include <mach/motherboard.h>
-#include <mach/tc2.h>
 
 #include <linux/vexpress.h>
 
@@ -36,7 +36,10 @@
  */
 #define PSCI_POWER_STATE_ID           0
 
-static atomic_t tc2_pm_use_count[TC2_MAX_CPUS][TC2_MAX_CLUSTERS];
+#define TC2_CLUSTERS			2
+#define TC2_MAX_CPUS_PER_CLUSTER	3
+
+static atomic_t tc2_pm_use_count[TC2_MAX_CPUS_PER_CLUSTER][TC2_CLUSTERS];
 
 static int tc2_pm_psci_power_up(unsigned int cpu, unsigned int cluster)
 {
@@ -139,8 +142,7 @@ static void __init tc2_pm_usage_count_init(void)
 	cluster = MPIDR_AFFINITY_LEVEL(mpidr, 1);
 
 	pr_debug("%s: cpu %u cluster %u\n", __func__, cpu, cluster);
-	BUG_ON(cluster >= TC2_MAX_CLUSTERS ||
-	       cpu >= vexpress_spc_get_nb_cpus(cluster));
+	BUG_ON(cluster >= TC2_CLUSTERS || cpu >= TC2_MAX_CPUS_PER_CLUSTER);
 
 	atomic_set(&tc2_pm_use_count[cpu][cluster], 1);
 }
@@ -155,10 +157,8 @@ static int __init tc2_pm_psci_init(void)
 		return -ENODEV;
 	}
 
-	if (!vexpress_spc_check_loaded()) {
-		pr_debug("spc not found. Aborting psci init\n");
+	if (!of_machine_is_compatible("arm,vexpress,v2p-ca15_a7"))
 		return -ENODEV;
-	}
 
 	tc2_pm_usage_count_init();
 
@@ -166,7 +166,7 @@ static int __init tc2_pm_psci_init(void)
 	if (!ret)
 		ret = mcpm_sync_init(NULL);
 	if (!ret)
-		pr_info("TC2 power management initialized\n");
+		pr_info("TC2 power management using PSCI initialized\n");
 	return ret;
 }
 
-- 
1.8.0

