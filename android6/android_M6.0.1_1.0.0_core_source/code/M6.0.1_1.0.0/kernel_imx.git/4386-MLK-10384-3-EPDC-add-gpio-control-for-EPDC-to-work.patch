From 47fbcea7bf6df20799b4b5754a0801b4dd38ff2e Mon Sep 17 00:00:00 2001
From: Robby Cai <r63905@freescale.com>
Date: Thu, 19 Mar 2015 13:14:17 +0800
Subject: [PATCH] MLK-10384-3 EPDC: add gpio control for EPDC to work

To make EPDC work, need set ENET_RST_B (Q5 of 74LV595PW) to LOW thus make
ENET_EN_B HIGH to isolate the EPDC signals and ENET2 signals.
Add the handling in EPDC driver.

Signed-off-by: Robby Cai <r63905@freescale.com>
---
 drivers/video/mxc/mxc_epdc_v2_fb.c | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/drivers/video/mxc/mxc_epdc_v2_fb.c b/drivers/video/mxc/mxc_epdc_v2_fb.c
index a44b302..ba28321 100644
--- a/drivers/video/mxc/mxc_epdc_v2_fb.c
+++ b/drivers/video/mxc/mxc_epdc_v2_fb.c
@@ -4869,6 +4869,7 @@ static int mxc_epdc_fb_probe(struct platform_device *pdev)
 	struct device_node *node;
 	phandle phandle;
 	u32 out_val[3];
+	int enable_gpio;
 
 	if (!np)
 		return -EINVAL;
@@ -4906,6 +4907,29 @@ static int mxc_epdc_fb_probe(struct platform_device *pdev)
 			1 << fb_data->req_bit, 0);
 	}
 
+	if (of_find_property(np, "en-gpios", NULL)) {
+		enable_gpio = of_get_named_gpio(np, "en-gpios", 0);
+		if (enable_gpio == -EPROBE_DEFER) {
+			dev_info(&pdev->dev, "GPIO requested is not"
+				"here yet, deferring the probe\n");
+			return -EPROBE_DEFER;
+		}
+		if (!gpio_is_valid(enable_gpio)) {
+			dev_warn(&pdev->dev, "No dt property: en-gpios\n");
+		} else {
+
+			ret = devm_gpio_request_one(&pdev->dev,
+						    enable_gpio,
+						    GPIOF_OUT_INIT_LOW,
+						    "en_pins");
+			if (ret) {
+				dev_err(&pdev->dev, "failed to request gpio"
+					" %d: %d\n", enable_gpio, ret);
+				return -EINVAL;
+			}
+		}
+	}
+
 	/* Get platform data and check validity */
 	fb_data->pdata = &epdc_data;
 	if ((fb_data->pdata == NULL) || (fb_data->pdata->num_modes < 1)
-- 
1.8.0

