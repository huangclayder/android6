From 9d5dbb19fabc9535822e89ca37b5ae04be354ac2 Mon Sep 17 00:00:00 2001
From: "guoyin.chen" <guoyin.chen@freescale.com>
Date: Thu, 26 Jul 2012 13:09:27 +0800
Subject: [PATCH 27/43] ENGR00218427 Add workaround to AT+COPS error stringg
 for 770W

Handle the string return as 'COPS: 0,0,"FFFFFFFFFFFFFFFF",2'
to get the operator name

Signed-off-by: guoyin.chen <guoyin.chen@freescale.com>
---
 reference-ril/reference-ril.c | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

diff --git a/reference-ril/reference-ril.c b/reference-ril/reference-ril.c
index c7299f5..c38e25b 100755
--- a/reference-ril/reference-ril.c
+++ b/reference-ril/reference-ril.c
@@ -1704,6 +1704,35 @@ static void requestOperator(void *data __unused, size_t datalen __unused, RIL_To
         goto error;
     }
 
+    //Workaround for 770w with below response
+    //+COPS: 0,0,"FFFFFFFFFFFFFFFF",2
+    //+COPS: 0,1,"FFFFFFFFFFFFFFFF",2
+    //+COPS: 0,2,"46001",2
+    //"China Unicom","UNICOM","46001"
+    //"China Mobile Com","CMCC","46000"
+    //"China Mobile Com","CMCC","46002"
+    //"China Mobile Com","CMCC","46007"
+    char *invalid_operator = "FFFFFFFFFFFFFFFF";
+    if (response[0] && response[2] &&
+        !strncmp(response[0], invalid_operator, strlen(invalid_operator))) {
+        //Set the long operator name based on mcc/mnc
+        if (!strncmp(response[2], "46001", 5))
+            strcpy(response[0], "China Unicom");
+        if (!strncmp(response[2], "46000", 5)||
+           !strncmp(response[2], "46002", 5)||
+           !strncmp(response[2], "46007", 5))
+            strcpy(response[0], "China Mobile Com");
+    }
+    if (response[1] && response[2] &&
+        !strncmp(response[1], invalid_operator, strlen(invalid_operator))) {
+        //Set the long operator name based on mcc/mnc
+        if (!strncmp(response[2], "46001", 5))
+            strcpy(response[1], "UNICOM");
+        if (!strncmp(response[2], "46000", 5)||
+           !strncmp(response[2], "46002", 5)||
+           !strncmp(response[2], "46007", 5))
+            strcpy(response[1], "CMCC");
+    }
     RIL_onRequestComplete(t, RIL_E_SUCCESS, response, sizeof(response));
     at_response_free(p_response);
 
-- 
1.8.0

