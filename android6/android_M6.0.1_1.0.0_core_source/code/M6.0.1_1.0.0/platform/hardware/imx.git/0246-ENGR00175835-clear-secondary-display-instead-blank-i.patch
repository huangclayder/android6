From 0624a356297fc9769f9343cb452579c459117e18 Mon Sep 17 00:00:00 2001
From: Xiaowen Liu <b37945@freescale.com>
Date: Thu, 1 Mar 2012 14:54:13 +0800
Subject: [PATCH 246/635] ENGR00175835 clear secondary display instead blank
 it.

clear secondary display when disable it instead blank it
because the driver still has some problems when blanc and
unblank between switching different kind mode.

Signed-off-by: Xiaowen Liu <b37945@freescale.com>
---
 mx6/libgralloc_wrapper/framebuffer.cpp | 20 +-------------------
 1 file changed, 1 insertion(+), 19 deletions(-)

diff --git a/mx6/libgralloc_wrapper/framebuffer.cpp b/mx6/libgralloc_wrapper/framebuffer.cpp
index e3be749..2598435 100755
--- a/mx6/libgralloc_wrapper/framebuffer.cpp
+++ b/mx6/libgralloc_wrapper/framebuffer.cpp
@@ -292,13 +292,6 @@ static int mapFrameBufferWithParamLocked(struct private_module_t* module, struct
         return -errno;
     }
 
-    if(param != NULL) {
-        int blank = FB_BLANK_UNBLANK;
-        if(ioctl(fd, FBIOBLANK, blank) < 0) {
-            LOGE("<%s, %d> ioctl FBIOBLANK failed", __FUNCTION__, __LINE__);
-        }
-    }
-
     struct fb_fix_screeninfo finfo;
     if (ioctl(fd, FBIOGET_FSCREENINFO, &finfo) == -1) {
         LOGE("<%s,%d> FBIOGET_FSCREENINFO failed", __FUNCTION__, __LINE__);
@@ -535,25 +528,14 @@ static int unMapFrameBuffer(fb_context_t* ctx, struct private_module_t* module)
 {
     int err = 0;
     pthread_mutex_lock(&module->lock);
-
     size_t fbSize = module->framebuffer->size;
     int fd = module->framebuffer->fd;
     void* addr = (void*)(module->framebuffer->base);
+    memset(addr, 0, fbSize);
     munmap(addr, fbSize);
     delete (module->framebuffer);
     module->framebuffer = NULL;
 
-    int blank = 1;
-    if(ioctl(fd, FBIOBLANK, blank) < 0) {
-        LOGE("<%s, %d> ioctl FBIOBLANK failed", __FUNCTION__, __LINE__);
-    }
-
-    if(ctx->mainDisp_fd > 0) {
-        blank = FB_BLANK_UNBLANK;
-        if(ioctl(ctx->mainDisp_fd, FBIOBLANK, blank) < 0) {
-            LOGE("<%s, %d> ioctl FBIOBLANK failed", __FUNCTION__, __LINE__);
-        }
-    }
     close(fd);
     pthread_mutex_unlock(&module->lock);
 
-- 
1.8.0

