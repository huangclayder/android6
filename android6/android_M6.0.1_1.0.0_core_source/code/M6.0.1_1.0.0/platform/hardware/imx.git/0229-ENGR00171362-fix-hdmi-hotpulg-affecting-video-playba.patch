From d30be4491570d140d82e594267e629b5e6587450 Mon Sep 17 00:00:00 2001
From: Xiaowen Liu <b37945@freescale.com>
Date: Thu, 12 Jan 2012 15:26:16 +0800
Subject: [PATCH 229/635] ENGR00171362 fix hdmi hotpulg affecting video
 playback and ui in mx6q.

fix hdmi hotpulg affecting video playback and ui in mx6q.

Signed-off-by: Xiaowen Liu <b37945@freescale.com>
---
 mx6/libgralloc/framebuffer.cpp | 165 -----------------------------------------
 1 file changed, 165 deletions(-)

diff --git a/mx6/libgralloc/framebuffer.cpp b/mx6/libgralloc/framebuffer.cpp
index 8ae7ce1..d9d4910 100755
--- a/mx6/libgralloc/framebuffer.cpp
+++ b/mx6/libgralloc/framebuffer.cpp
@@ -453,84 +453,6 @@ static int fb_post(struct framebuffer_device_t* dev, buffer_handle_t buffer)
                 ctx->sec_disp_base = 0;
                 //DeInit the second display
                 if(ctx->sec_fp) {
-                    int fp_property = open("/sys/class/graphics/fb2/fsl_disp_property",O_RDWR, 0); 
-                    if(fp_property >= 0) {
-                        char overlayStr[32];
-                        int blank;
-                        int fb2_fp;
-                        struct fb_var_screeninfo fb0_var;
-
-                        blank = 1;
-
-                        fb2_fp = open("/dev/graphics/fb2",O_RDWR, 0);
-                        if (fb2_fp < 0){
-                            LOGE("Error!Cannot open the /dev/graphics/fb2");
-                        }
-                        else{
-                            if(ioctl(fb2_fp, FBIOBLANK, blank) < 0) {
-                        		LOGI("Error!BLANK FB2 failed!\n");
-                        	}
-                            close(fb2_fp);
-                        }
-
-                    	if(ioctl(ctx->sec_fp, FBIOBLANK, blank) < 0) {
-                            LOGI("Error!BLANK FB2 failed!\n");
-                    	}
-                    
-                        if(ioctl(m->framebuffer->fd, FBIOBLANK, blank) < 0) {
-                    		LOGI("Error!BLANK FB0 failed!\n");
-                    	}
-
-                        memset(overlayStr, 0 ,32);
-                        strcpy(overlayStr, "1-layer-fb\n");
-                        LOGI("WRITE 1-layer-fb to fb2/fsl_disp_property");
-                        write(fp_property, overlayStr, strlen(overlayStr)+1);
-                        close(fp_property);
-
-                        blank = FB_BLANK_POWERDOWN;
-                    	if(ioctl(ctx->sec_fp, FBIOBLANK, blank) < 0) {
-                            LOGI("Error!BLANK FB2 failed!\n");
-                    	}
-                        blank = FB_BLANK_UNBLANK;
-                    	if(ioctl(m->framebuffer->fd, FBIOBLANK, blank) < 0) {
-                    		LOGI("Error!UNBLANK FB0 failed!\n");
-                    	}
-
-			if (ioctl(m->framebuffer->fd, FBIOGET_VSCREENINFO,
-				  &fb0_var) < 0) {
-                            LOGE("Error!Cannot get var info for fb0");
-			}
-
-			if (fb0_var.bits_per_pixel == 32) {
-				struct mxcfb_loc_alpha l_alpha;
-
-				l_alpha.enable = true;
-				l_alpha.alpha_in_pixel = true;
-				if (ioctl(m->framebuffer->fd, MXCFB_SET_LOC_ALPHA,
-				            &l_alpha) < 0) {
-				    LOGE("Error!MXCFB_SET_LOC_ALPHA failed!");
-				}
-			} else {
-				struct mxcfb_gbl_alpha gbl_alpha;
-	                        struct mxcfb_color_key key;
-
-				gbl_alpha.alpha = 255;
-				gbl_alpha.enable = 1;
-				if (ioctl(m->framebuffer->fd, MXCFB_SET_GBL_ALPHA,
-					  &gbl_alpha) < 0) {
-				    LOGE("Error!MXCFB_SET_GBL_ALPHA failed!");
-				}
-
-	                        key.enable = 1;
-	                        key.color_key = 0x00000000; // Black
-	                        LOGI("MXCFB_SET_CLR_KEY");
-	                        if( ioctl(m->framebuffer->fd, MXCFB_SET_CLR_KEY,
-					  &key) < 0)
-	                        {
-	                            LOGE("Error!MXCFB_SET_CLR_KEY for fb0");
-	                        }
-			}
-                    }
                     close(ctx->sec_fp);
                     ctx->sec_fp = 0;
                 }
@@ -1139,8 +1061,6 @@ static int mapSecFrameBuffer(fb_context_t* ctx)
     void* vaddr = NULL;
     struct mxcfb_gbl_alpha gbl_alpha;
     struct mxcfb_color_key key; 
-    char overlayStr[32];
-    int fb2_fp;
     private_module_t* m = reinterpret_cast<private_module_t*>(
             ctx->device.common.module);
 
@@ -1152,55 +1072,6 @@ static int mapSecFrameBuffer(fb_context_t* ctx)
         goto disp_init_error;
     }
 
-    //Switch overlay to second display after ipu deinit
-    //echo 1-layer-fb >  /sys/class/graphics/fb0/fsl_disp_property 
-    blank = 1;
-
-    fb2_fp = open("/dev/graphics/fb2",O_RDWR, 0);
-    if (fb2_fp < 0){
-        LOGE("Error!Cannot open the /dev/graphics/fb2");
-        goto disp_init_error;
-    }
-    if(ioctl(fb2_fp, FBIOBLANK, blank) < 0) {
-		LOGI("Error!BLANK FB0 failed!\n");
-        goto disp_init_error;
-	}
-    close(fb2_fp);
-
-	if(ioctl(sec_fp, FBIOBLANK, blank) < 0) {
-		LOGI("Error!BLANK FB2 failed!\n");
-        goto disp_init_error;
-	}
-
-    if(ioctl(m->framebuffer->fd, FBIOBLANK, blank) < 0) {
-		LOGI("Error!BLANK FB0 failed!\n");
-        goto disp_init_error;
-	}
-    
-    LOGI("Open fb0/fsl_disp_property");
-    fp_property = open("/sys/class/graphics/fb0/fsl_disp_property",O_RDWR, 0); 
-    if(fp_property < 0) {
-         LOGI("Error!Cannot switch the overlay to second disp");
-         goto disp_init_error;
-    }
-    
-    memset(overlayStr, 0 ,32);
-    strcpy(overlayStr, "1-layer-fb\n");
-    LOGI("WRITE 1-layer-fb to fb0/fsl_disp_property");
-    write(fp_property, overlayStr, strlen(overlayStr)+1);
-    close(fp_property);
-
-    blank = FB_BLANK_UNBLANK;
-	if(ioctl(sec_fp, FBIOBLANK, blank) < 0) {
-		LOGI("Error!UNBLANK FB2 failed!\n");
-        goto disp_init_error;
-	}
-
-	if(ioctl(m->framebuffer->fd, FBIOBLANK, blank) < 0) {
-		LOGI("Error!UNBLANK FB0 failed!\n");
-        goto disp_init_error;
-	}
-
     struct fb_fix_screeninfo finfo;
     if (ioctl(sec_fp, FBIOGET_FSCREENINFO, &finfo) == -1)
        goto disp_init_error;
@@ -1289,42 +1160,6 @@ static int mapSecFrameBuffer(fb_context_t* ctx)
     ctx->sec_disp_next_buf = ((info.yoffset * nr_framebuffers / info.yres_virtual) + 1) % nr_framebuffers;
     ctx->sec_info = info;
     ctx->sec_finfo = finfo;
-#if 0
-    struct fb_fix_screeninfo fb0_finfo;
-    if (ioctl(m->framebuffer->fd, FBIOGET_FSCREENINFO, &fb0_finfo) == -1)
-       goto disp_init_error;
-                
-    struct fb_var_screeninfo fb0_info;
-    if (ioctl(m->framebuffer->fd, FBIOGET_VSCREENINFO, &fb0_info) == -1)
-        goto disp_init_error;
-                
-    LOGI("fb0_info display: xres %d,yres %d, xres_virtual %d, yres_virtual %d",
-         fb0_info.xres,fb0_info.xres_virtual,
-         fb0_info.yres,fb0_info.yres_virtual);
-
-    fb0_info.reserved[0] = 0;
-    fb0_info.reserved[1] = 0;
-    fb0_info.reserved[2] = 0;
-    fb0_info.xoffset = 0;
-    fb0_info.yoffset = 0;
-    fb0_info.activate = FB_ACTIVATE_NOW;
-                
-    /*
-    * Explicitly request 5/6/5
-    */
-    fb0_info.bits_per_pixel = 16;
-    fb0_info.nonstd = 0;
-    fb0_info.red.offset     = 11;
-    fb0_info.red.length     = 5;
-    fb0_info.green.offset   = 5;
-    fb0_info.green.length   = 6;
-    fb0_info.blue.offset    = 0;
-    fb0_info.blue.length    = 5;
-    fb0_info.transp.offset  = 0;
-    fb0_info.transp.length  = 0;
-    fb0_info.yres_virtual = ALIGN_PIXEL_128(fb0_info.yres) * nr_framebuffers;
-	fb0_info.xres_virtual = fb0_info.xres;
-#endif
     if (ioctl(m->framebuffer->fd, FBIOPUT_VSCREENINFO, &m->info) == -1) {
         LOGE("Error!Second display FBIOPUT_VSCREENINFO");
         goto disp_init_error;
-- 
1.8.0

