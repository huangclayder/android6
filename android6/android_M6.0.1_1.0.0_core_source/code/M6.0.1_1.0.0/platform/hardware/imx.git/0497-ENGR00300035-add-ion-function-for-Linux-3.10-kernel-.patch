From 51919fde170d4f685138310a9f3353ba166526ce Mon Sep 17 00:00:00 2001
From: Liu Xiaowen <b37945@freescale.com>
Date: Mon, 24 Feb 2014 10:06:48 +0800
Subject: [PATCH 497/635] ENGR00300035 add ion function for Linux 3.10 kernel
 upgrade.

add ion function for Linux 3.10 kernel upgrade.

Signed-off-by: Liu Xiaowen <b37945@freescale.com>
---
 mx6/libcamera/PhysMemAdapter.cpp       | 10 +++++-----
 mx6/libcamera2/PhysMemAdapter.cpp      | 10 +++++-----
 mx6/libgralloc_wrapper/fsl_gralloc.cpp |  4 ++--
 3 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/mx6/libcamera/PhysMemAdapter.cpp b/mx6/libcamera/PhysMemAdapter.cpp
index 84767fd..4b23366 100644
--- a/mx6/libcamera/PhysMemAdapter.cpp
+++ b/mx6/libcamera/PhysMemAdapter.cpp
@@ -78,13 +78,13 @@ int PhysMemAdapter::allocatePictureBuffer(int width,
     unsigned char *ptr = NULL;
     int sharedFd;
     int phyAddr;
-    ion_user_handle_t *ionHandle;
+    ion_user_handle_t ionHandle;
     size = (size + PAGE_SIZE - 1) & (~(PAGE_SIZE - 1));
 
     FLOGI("allocateBufferFromIon buffer num:%d", numBufs);
     for (int i = 0; i < numBufs; i++) {
-        ionHandle = NULL;
-        int err = ion_alloc(mIonFd, size, 8, 1, &ionHandle);
+        ionHandle = -1;
+        int err = ion_alloc(mIonFd, size, 8, 1, 0, &ionHandle);
         if (err) {
             FLOGE("ion_alloc failed.");
             return BAD_VALUE;
@@ -144,8 +144,8 @@ int PhysMemAdapter::freeBuffer()
 
     FLOGI("freeBufferToIon buffer num:%d", mBufferCount);
     for (int i = 0; i < mBufferCount; i++) {
-        ion_user_handle_t *ionHandle =
-            (ion_user_handle_t *)mCameraBuffer[i].mBufHandle;
+        ion_user_handle_t ionHandle =
+            (ion_user_handle_t )mCameraBuffer[i].mBufHandle;
         ion_free(mIonFd, ionHandle);
         munmap(mCameraBuffer[i].mVirtAddr, mCameraBuffer[i].mSize);
     }
diff --git a/mx6/libcamera2/PhysMemAdapter.cpp b/mx6/libcamera2/PhysMemAdapter.cpp
index cc6f44d..31bfb16 100755
--- a/mx6/libcamera2/PhysMemAdapter.cpp
+++ b/mx6/libcamera2/PhysMemAdapter.cpp
@@ -67,13 +67,13 @@ int PhysMemAdapter::allocateBuffers(int width,int height,
     unsigned char *ptr = NULL;
     int sharedFd;
     int phyAddr;
-    ion_user_handle_t *ionHandle;
+    ion_user_handle_t ionHandle;
     size = (size + PAGE_SIZE) & (~(PAGE_SIZE - 1));
 
     FLOGI("allocateBufferFromIon buffer num:%d", numBufs);
     for (int i = 0; i < numBufs; i++) {
-        ionHandle = NULL;
-        int err = ion_alloc(mIonFd, size, 8, 1, &ionHandle);
+        ionHandle = -1;
+        int err = ion_alloc(mIonFd, size, 8, 1, 0, &ionHandle);
         if (err) {
             FLOGE("ion_alloc failed.");
             return BAD_VALUE;
@@ -133,8 +133,8 @@ int PhysMemAdapter::freeBuffers()
 
     FLOGI("freeBufferToIon buffer num:%d", mBufferCount);
     for (int i = 0; i < mBufferCount; i++) {
-        ion_user_handle_t *ionHandle =
-            (ion_user_handle_t *)mCameraBuffer[i].mBufHandle;
+        ion_user_handle_t ionHandle =
+            (ion_user_handle_t)mCameraBuffer[i].mBufHandle;
         ion_free(mIonFd, ionHandle);
         munmap(mCameraBuffer[i].mVirtAddr, mCameraBuffer[i].mSize);
     }
diff --git a/mx6/libgralloc_wrapper/fsl_gralloc.cpp b/mx6/libgralloc_wrapper/fsl_gralloc.cpp
index 9f13d54..60133c4 100644
--- a/mx6/libgralloc_wrapper/fsl_gralloc.cpp
+++ b/mx6/libgralloc_wrapper/fsl_gralloc.cpp
@@ -116,11 +116,11 @@ static int fsl_gralloc_alloc_buffer(alloc_device_t* dev,
     unsigned char *ptr = NULL;
     int sharedFd;
     int phyAddr;
-    ion_user_handle_t *ion_hnd = NULL;
+    ion_user_handle_t ion_hnd = -1;
     size = (size + PAGE_SIZE) & (~(PAGE_SIZE - 1));
 
     private_module_t* m = reinterpret_cast<private_module_t*>(dev->common.module);
-    int err = ion_alloc(m->ion_fd, size, 8, 1, &ion_hnd);
+    int err = ion_alloc(m->ion_fd, size, 8, 1, 0, &ion_hnd);
     if (err) {
         ALOGE("ion_alloc failed");
         return err;
-- 
1.8.0

