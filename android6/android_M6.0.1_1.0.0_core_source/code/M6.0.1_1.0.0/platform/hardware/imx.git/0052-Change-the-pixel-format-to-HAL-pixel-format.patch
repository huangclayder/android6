From 9cf25fc9eb0e8de3b002d4df1fcb7a266e3b14ec Mon Sep 17 00:00:00 2001
From: "guoyin.chen" <guoyin.chen@freescale.com>
Date: Fri, 16 Jul 2010 14:53:26 +0800
Subject: [PATCH 052/635] Change the pixel format to HAL pixel format
 Signed-off-by: guoyin.chen
 <guoyin.chen@freescale.com>

---
 liboverlay/overlay.cpp       | 26 +++++++++++++-------------
 liboverlay/overlay_thread.h  | 12 ++++++------
 liboverlay/overlays_test.cpp |  8 ++++----
 3 files changed, 23 insertions(+), 23 deletions(-)

diff --git a/liboverlay/overlay.cpp b/liboverlay/overlay.cpp
index 2e69951..bb44312 100755
--- a/liboverlay/overlay.cpp
+++ b/liboverlay/overlay.cpp
@@ -503,19 +503,19 @@ static int bits_per_pixel(int32_t format)
 {
     int bits = 0;
     switch (format) {
-        case PIXEL_FORMAT_RGB_888:
+        case HAL_PIXEL_FORMAT_RGB_888:
             bits = 24;
             break;
-        case PIXEL_FORMAT_YCbCr_422_SP:
-        case PIXEL_FORMAT_YCbCr_422_I:
-        case PIXEL_FORMAT_RGB_565:
+        case HAL_PIXEL_FORMAT_YCbCr_422_SP:
+        case HAL_PIXEL_FORMAT_YCbCr_422_I:
+        case HAL_PIXEL_FORMAT_RGB_565:
             bits = 16;
             break;
-        case PIXEL_FORMAT_RGBA_8888:
+        case HAL_PIXEL_FORMAT_RGBA_8888:
             bits = 32;
             break;
-        case PIXEL_FORMAT_YCbCr_420_SP:
-        case PIXEL_FORMAT_YCbCr_420_I:
+        case HAL_PIXEL_FORMAT_YCbCr_420_SP:
+        case HAL_PIXEL_FORMAT_YCbCr_420_I:
             bits = 12;
             break;
         default:
@@ -918,16 +918,16 @@ static overlay_t* overlay_createOverlay(struct overlay_control_device_t *dev,
     }
     /* check the input params, reject if not supported or invalid */
     switch (format) {
-        case PIXEL_FORMAT_RGB_888:
-        case PIXEL_FORMAT_RGBA_8888:
-        case PIXEL_FORMAT_YCbCr_422_SP:
+        case HAL_PIXEL_FORMAT_RGB_888:
+        case HAL_PIXEL_FORMAT_RGBA_8888:
+        case HAL_PIXEL_FORMAT_YCbCr_422_SP:
             OVERLAY_LOG_ERR("Error!Not a valid format for overlay");
             return NULL;
-        case PIXEL_FORMAT_RGB_565:
+        case HAL_PIXEL_FORMAT_RGB_565:
             break;
-        case PIXEL_FORMAT_YCbCr_420_SP:
+        case HAL_PIXEL_FORMAT_YCbCr_420_SP:
             break;
-        case PIXEL_FORMAT_YCbCr_420_I:
+        case HAL_PIXEL_FORMAT_YCbCr_420_I:
             break;
         default:
             OVERLAY_LOG_ERR("Error!Not a valid format for overlay");
diff --git a/liboverlay/overlay_thread.h b/liboverlay/overlay_thread.h
index 496bf2d..6da05c8 100755
--- a/liboverlay/overlay_thread.h
+++ b/liboverlay/overlay_thread.h
@@ -308,13 +308,13 @@ class OverlayThread: public Thread {
                 mIPUInputParam.input_crop_win.win_w = crop_w0;
                 mIPUInputParam.input_crop_win.win_h = crop_h0;
 
-                if(overlayObj0->mHandle.format == PIXEL_FORMAT_YCbCr_420_SP) {
+                if(overlayObj0->mHandle.format == HAL_PIXEL_FORMAT_YCbCr_420_SP) {
                     mIPUInputParam.fmt = v4l2_fourcc('I', '4', '2', '0');
                 }
-                else if(overlayObj0->mHandle.format == PIXEL_FORMAT_YCbCr_420_I) {
+                else if(overlayObj0->mHandle.format == HAL_PIXEL_FORMAT_YCbCr_420_I) {
                     mIPUInputParam.fmt = v4l2_fourcc('N', 'Y', '1', '2');
                 }
-                else if(overlayObj0->mHandle.format == PIXEL_FORMAT_RGB_565) {
+                else if(overlayObj0->mHandle.format == HAL_PIXEL_FORMAT_RGB_565) {
                     mIPUInputParam.fmt = v4l2_fourcc('R', 'G', 'B', 'P');
                 }else{
                     OVERLAY_LOG_ERR("Error!Not supported input format %d",overlayObj0->mHandle.format);
@@ -382,13 +382,13 @@ class OverlayThread: public Thread {
                 mIPUInputParam.input_crop_win.win_h = crop_h1;
 
 
-                if(overlayObj1->mHandle.format == PIXEL_FORMAT_YCbCr_420_SP) {
+                if(overlayObj1->mHandle.format == HAL_PIXEL_FORMAT_YCbCr_420_SP) {
                     mIPUInputParam.fmt = v4l2_fourcc('I', '4', '2', '0');
                 }
-                else if(overlayObj1->mHandle.format == PIXEL_FORMAT_YCbCr_420_I) {
+                else if(overlayObj1->mHandle.format == HAL_PIXEL_FORMAT_YCbCr_420_I) {
                     mIPUInputParam.fmt = v4l2_fourcc('N', 'Y', '1', '2');
                 }
-                else if(overlayObj0->mHandle.format == PIXEL_FORMAT_RGB_565) {
+                else if(overlayObj0->mHandle.format == HAL_PIXEL_FORMAT_RGB_565) {
                     mIPUInputParam.fmt = v4l2_fourcc('R', 'G', 'B', 'P');
                 }else{
                     OVERLAY_LOG_ERR("Error!Obj1 Not supported input format %d",overlayObj1->mHandle.format);
diff --git a/liboverlay/overlays_test.cpp b/liboverlay/overlays_test.cpp
index 6c53cc3..1f0efff 100755
--- a/liboverlay/overlays_test.cpp
+++ b/liboverlay/overlays_test.cpp
@@ -139,10 +139,10 @@ void gen_fill_pattern_yuv(char * buf, int in_width, int in_height,int h_step, in
 
 void gen_fill_pattern(char * buf, int in_width, int in_height,int h_step, int w_step,int32_t format)
 {
-    if(format == PIXEL_FORMAT_RGB_565) {
+    if(format == HAL_PIXEL_FORMAT_RGB_565) {
         gen_fill_pattern_rgb(buf,in_width,in_height,h_step,w_step);
     }
-    else if(format == PIXEL_FORMAT_YCbCr_420_SP) {
+    else if(format == HAL_PIXEL_FORMAT_YCbCr_420_SP) {
         gen_fill_pattern_yuv(buf,in_width,in_height,h_step,w_step);
     }
 }
@@ -220,7 +220,7 @@ int main(int argc, char** argv)
 
     overlay_param0.w = 720;
     overlay_param0.h = 576;
-    overlay_param0.format = PIXEL_FORMAT_YCbCr_420_SP;
+    overlay_param0.format = HAL_PIXEL_FORMAT_YCbCr_420_SP;
     overlay_param0.frame_num = 8;
     overlay_param0.crop_x = 0;
     overlay_param0.crop_y = 0;
@@ -236,7 +236,7 @@ int main(int argc, char** argv)
 
     overlay_param1.w = 320;
     overlay_param1.h = 240;
-    overlay_param1.format = PIXEL_FORMAT_YCbCr_420_SP;
+    overlay_param1.format = HAL_PIXEL_FORMAT_YCbCr_420_SP;
     overlay_param1.frame_num = 6;
     overlay_param1.crop_x = 0;
     overlay_param1.crop_y = 0;
-- 
1.8.0

