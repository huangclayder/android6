From 3c6f6c1ae62e0d931068f8717a016eddc59905cc Mon Sep 17 00:00:00 2001
From: b02247 <b02247@freescale.com>
Date: Mon, 1 Apr 2013 16:34:10 +0800
Subject: [PATCH 439/635] ENGR00255697 Audio output is abnormal for
 passthrough output.

Some AV recevier only support 2 channel, then directoutput will be
failed when opening, because there is a constraint in the audio HAL.
It only support 6,8 channels. remove this constraint in HAL.

Change-Id: Ib35c6f877e5b640655de4b9548029d9e00ddd9a2
Signed-off-by: b02247 <b02247@freescale.com>
---
 alsa/tinyalsa_hal.c | 9 ++-------
 1 file changed, 2 insertions(+), 7 deletions(-)

diff --git a/alsa/tinyalsa_hal.c b/alsa/tinyalsa_hal.c
index f05d750..03643e9 100644
--- a/alsa/tinyalsa_hal.c
+++ b/alsa/tinyalsa_hal.c
@@ -2455,7 +2455,6 @@ static int out_read_hdmi_channel_masks(struct imx_audio_device *adev, struct imx
     int i = 0;
     int j = 0;
     struct mixer *mixer_hdmi = NULL;
-    bool no_multi_channel = true;
 
     for (i = 0; i < MAX_AUDIO_CARD_NUM; i ++) {
          if(!strcmp(adev->card_list[i]->driver_name, hdmi_card.driver_name)) {
@@ -2473,14 +2472,10 @@ static int out_read_hdmi_channel_masks(struct imx_audio_device *adev, struct imx
             for(i = 0; i < count; i ++) {
                 sup_channels[i] = mixer_ctl_get_value(ctl, i);
                 ALOGW("out_read_hdmi_channel_masks() card %d got %d sup channels", card, sup_channels[i]);
-		if(sup_channels[i] >= 6) no_multi_channel = false;
             }
         }
     }
 
-    if (no_multi_channel)
-        return -ENOSYS;
-
     /*when channel is 6, the mask is 5.1,when channel is 8, the mask is 7.1*/
     for(i = 0; i < count; i++ ) {
        if(sup_channels[i] == 2) {
@@ -2496,6 +2491,8 @@ static int out_read_hdmi_channel_masks(struct imx_audio_device *adev, struct imx
           j++;
        }
     }
+    /*if HDMI device does not support 2,6,8 channels, then return error*/
+    if (j == 0) return -ENOSYS;
 
     return 0;
 }
@@ -2684,8 +2681,6 @@ static void adev_close_output_stream(struct audio_hw_device *dev,
     if (out->resampler)
         release_resampler(out->resampler);
     free(stream);
-
-    ALOGW("adev_close_output_stream...%d end",(int)out);
 }
 
 static int adev_set_parameters(struct audio_hw_device *dev, const char *kvpairs)
-- 
1.8.0

