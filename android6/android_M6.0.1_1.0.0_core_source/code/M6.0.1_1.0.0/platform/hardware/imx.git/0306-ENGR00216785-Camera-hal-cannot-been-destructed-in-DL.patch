From 4f10809fde79aa0be3f72dc4ed3f8d7f8b21f978 Mon Sep 17 00:00:00 2001
From: "guoyin.chen" <guoyin.chen@freescale.com>
Date: Wed, 11 Jul 2012 13:02:57 +0800
Subject: [PATCH 306/635] ENGR00216785 Camera hal cannot been destructed in DL
 cts test

capture thread may not been started yet when camerahal's destructor
been scheduled, since thread's start may take sometime
Post quit message for preview thread and encoder thread to make sure
there have chance for those thread to quit

Signed-off-by: guoyin.chen <guoyin.chen@freescale.com>
---
 mx6/libcamera/CameraHal.cpp | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/mx6/libcamera/CameraHal.cpp b/mx6/libcamera/CameraHal.cpp
index 50867df..db5e016 100755
--- a/mx6/libcamera/CameraHal.cpp
+++ b/mx6/libcamera/CameraHal.cpp
@@ -280,7 +280,12 @@ namespace android {
         //Make sure all thread been exit, in case they still
         //access the message queue
         mCaptureFrameThread->requestExitAndWait();
+
+        //Post Quite message to make sure the thread can be exited
+        //In case mCaptureFrameThread not been started yet in CTS test
+        mPreviewThreadQueue.postQuitMessage();
         mPreviewShowFrameThread->requestExitAndWait();
+        mEncodeThreadQueue.postQuitMessage();
         mEncodeFrameThread->requestExitAndWait();
         mTakePicThread->requestExitAndWait();
         pthread_mutex_destroy(&mPPIOParamMutex);
@@ -2018,7 +2023,6 @@ Pic_out:
 
         switch(msg->what) {
             case CMESSAGE_TYPE_NORMAL:
-
                 ret = mCaptureDevice->DevDequeue(&bufIndex);
                 //handle the error return.
                 if(ret < 0) {
@@ -2050,6 +2054,7 @@ Pic_out:
                 break;
             case CMESSAGE_TYPE_QUITE:
                 mExitCaptureThread = 1;
+                CAMERA_LOG_INFO("%s: receive QUITE message", __FUNCTION__);
                 if (mExitPreviewThread == 0)
                     mPreviewThreadQueue.postQuitMessage();
                 if (mExitEncodeThread == 0)
@@ -2300,6 +2305,7 @@ Pic_out:
                 break;
             case CMESSAGE_TYPE_QUITE:
                 mExitPreviewThread = 1;
+                CAMERA_LOG_INFO("%s: receive QUIT message", __FUNCTION__);
                 break;
             default:
                 CAMERA_LOG_ERR("%s: wrong msg type %d", __FUNCTION__, msg->what);
-- 
1.8.0

