From e13361abc1fb2e7489fa960812b8f1eb809fcada Mon Sep 17 00:00:00 2001
From: "guoyin.chen" <guoyin.chen@freescale.com>
Date: Wed, 6 Mar 2013 13:53:02 +0800
Subject: [PATCH 424/635] ENGR00252404 Make camera selection to be one of many

The selection can be as below setting in init.freescale.rc, which
will make the uvc as first priority:
setprop front_camera_name uvc,ov5642_camera,ov5640_camera

Signed-off-by: guoyin.chen <guoyin.chen@freescale.com>
---
 mx6/libcamera2/CameraModule.cpp | 68 +++++++++++++++++++++++++----------------
 1 file changed, 42 insertions(+), 26 deletions(-)

diff --git a/mx6/libcamera2/CameraModule.cpp b/mx6/libcamera2/CameraModule.cpp
index ef73280..2e12d99 100755
--- a/mx6/libcamera2/CameraModule.cpp
+++ b/mx6/libcamera2/CameraModule.cpp
@@ -525,40 +525,56 @@ int camera_get_number_of_cameras()
                          &back_orient,
                          &front_orient);
         if (name_back[0] != DEFAULT_ERROR_NAME) {
-            strncpy(sCameraInfo[gCameraNum].name,
-                    name_back,
-                    CAMERA_SENSOR_LENGTH);
-            sCameraInfo[gCameraNum].facing      = CAMERA_FACING_BACK;
-            sCameraInfo[gCameraNum].orientation = back_orient;
-            memset(sCameraInfo[gCameraNum].devPath, 0, CAMAERA_FILENAME_LENGTH);
-            GetDevPath(sCameraInfo[gCameraNum].name,
-                       sCameraInfo[gCameraNum].devPath,
-                       CAMAERA_FILENAME_LENGTH);
-            ALOGI("Camera ID %d: name %s, Facing %d, orientation %d, dev path %s",
-                    gCameraNum,
-                    sCameraInfo[gCameraNum].name,
-                    sCameraInfo[gCameraNum].facing,
-                    sCameraInfo[gCameraNum].orientation,
-                    sCameraInfo[gCameraNum].devPath);
-            gCameraNum++;
+            char *pCameraName = strtok(name_back, ",");
+            while (pCameraName != NULL) {
+                ALOGI("Checking the camera %s", pCameraName);
+                strncpy(sCameraInfo[gCameraNum].name,
+                        pCameraName,
+                        CAMERA_SENSOR_LENGTH);
+                sCameraInfo[gCameraNum].facing      = CAMERA_FACING_BACK;
+                sCameraInfo[gCameraNum].orientation = back_orient;
+                memset(sCameraInfo[gCameraNum].devPath, 0, CAMAERA_FILENAME_LENGTH);
+                if (GetDevPath(sCameraInfo[gCameraNum].name,
+                           sCameraInfo[gCameraNum].devPath,
+                           CAMAERA_FILENAME_LENGTH) == -1){
+                    pCameraName = strtok(NULL, ",");
+                    continue;
+                }
+                ALOGI("Camera ID %d: name %s, Facing %d, orientation %d, dev path %s",
+                        gCameraNum,
+                        sCameraInfo[gCameraNum].name,
+                        sCameraInfo[gCameraNum].facing,
+                        sCameraInfo[gCameraNum].orientation,
+                        sCameraInfo[gCameraNum].devPath);
+                gCameraNum++;
+                break;
+            }
         }
         if (name_front[0] != DEFAULT_ERROR_NAME) {
-            strncpy(sCameraInfo[gCameraNum].name,
-                    name_front,
-                    CAMERA_SENSOR_LENGTH);
-            sCameraInfo[gCameraNum].facing      = CAMERA_FACING_FRONT;
-            sCameraInfo[gCameraNum].orientation = front_orient;
-            memset(sCameraInfo[gCameraNum].devPath, 0, CAMAERA_FILENAME_LENGTH);
-            GetDevPath(sCameraInfo[gCameraNum].name,
+            char *pCameraName = strtok(name_front, ",");
+            while (pCameraName != NULL) {
+                ALOGI("Checking the camera %s", pCameraName);
+                strncpy(sCameraInfo[gCameraNum].name,
+                        pCameraName,
+                        CAMERA_SENSOR_LENGTH);
+                sCameraInfo[gCameraNum].facing      = CAMERA_FACING_FRONT;
+                sCameraInfo[gCameraNum].orientation = front_orient;
+                memset(sCameraInfo[gCameraNum].devPath, 0, CAMAERA_FILENAME_LENGTH);
+                if (GetDevPath(sCameraInfo[gCameraNum].name,
                        sCameraInfo[gCameraNum].devPath,
-                       CAMAERA_FILENAME_LENGTH);
-            ALOGI("Camera ID %d: name %s, Facing %d, orientation %d, dev path %s",
+                       CAMAERA_FILENAME_LENGTH) == -1) {
+                    pCameraName = strtok(NULL, ",");
+                    continue;
+                }
+                ALOGI("Camera ID %d: name %s, Facing %d, orientation %d, dev path %s",
                     gCameraNum,
                     sCameraInfo[gCameraNum].name,
                     sCameraInfo[gCameraNum].facing,
                     sCameraInfo[gCameraNum].orientation,
                     sCameraInfo[gCameraNum].devPath);
-            gCameraNum++;
+                gCameraNum++;
+                break;
+            }
         }
     }
     return gCameraNum;
-- 
1.8.0

