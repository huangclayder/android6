From 78268af963672f9411ed2f4e6b53aa871552e3f7 Mon Sep 17 00:00:00 2001
From: Yaoming Qin <b10945@freescale.com>
Date: Tue, 7 Sep 2010 14:15:09 +0800
Subject: [PATCH 073/635] Make the input and crop width and height 8-byte
 alligned. Signed-off-by: Yaoming
 Qin<B10945@freescale.com>

---
 libcamera/CameraHal.cpp |  6 +++---
 liboverlay/overlay.cpp  | 16 ++++++++--------
 2 files changed, 11 insertions(+), 11 deletions(-)
 mode change 100644 => 100755 libcamera/CameraHal.cpp

diff --git a/libcamera/CameraHal.cpp b/libcamera/CameraHal.cpp
old mode 100644
new mode 100755
index 9b1bd7e..5cfad48
--- a/libcamera/CameraHal.cpp
+++ b/libcamera/CameraHal.cpp
@@ -45,7 +45,7 @@ JPEG_ENC_UINT8 *CameraHal::g_JpegData = NULL;//Buffer to hold jpeg data
 wp<CameraHardwareInterface> CameraHal::singleton;
 
 const char CameraHal::supportedPictureSizes [] = "2048x1536,1600x1200,1024x768,640x480";
-const char CameraHal::supportedPreviewSizes [] = "1280x720,720x576,640x480,320x240";
+const char CameraHal::supportedPreviewSizes [] = "720x576,640x480,320x240";
 const char CameraHal::supportedFPS [] = "30,15,10";
 const char CameraHal::supprotedThumbnailSizes []= "80x60";
 const char CameraHal::PARAMS_DELIMITER []= ",";
@@ -442,8 +442,8 @@ int CameraHal::cameraPreviewConfig()
 
     fmt.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
     fmt.fmt.pix.pixelformat = mRecordFormat;
-    fmt.fmt.pix.width = mRecordWidth;
-    fmt.fmt.pix.height = mRecordHeight;
+    fmt.fmt.pix.width = mRecordWidth&0xFFFFFFF8;
+    fmt.fmt.pix.height = mRecordHeight&0xFFFFFFF8;
     if (mRecordFormat == V4L2_PIX_FMT_YUV420)
         fmt.fmt.pix.bytesperline = mRecordWidth;
     else if (mRecordFormat == V4L2_PIX_FMT_YUYV)
diff --git a/liboverlay/overlay.cpp b/liboverlay/overlay.cpp
index ecdb988..0aff876 100755
--- a/liboverlay/overlay.cpp
+++ b/liboverlay/overlay.cpp
@@ -251,8 +251,8 @@ public:
         //init the crop setting
         mDataShared->crop_x = 0;
         mDataShared->crop_y = 0;
-        mDataShared->crop_w = mHandle.width;
-        mDataShared->crop_h = mHandle.height;
+        mDataShared->crop_w = mHandle.width&0xFFFFFFF8;
+        mDataShared->crop_h = mHandle.height&0xFFFFFFF8;
         mDataShared->num_buffer = mHandle.num_buffer;
         OVERLAY_LOG_INFO("num_buffer %d width %d,height %d,format %d,buf_size %d",
          mHandle.num_buffer,mHandle.width,mHandle.height,
@@ -1056,8 +1056,8 @@ static int overlay_setPosition(struct overlay_control_device_t *dev,
         //output area changed
         obj->out_changed = 1;
     }
-    obj->outX = x;
-    obj->outY = y;
+    obj->outX = x&0xfffffff8;
+    obj->outY = y&0xfffffff8;
     obj->outW = w&0xfffffff8;//output width should be 8 pixel alignment
     obj->outH = h&0xfffffff8;//output height should be 8 pixel alignment
     OVERLAY_LOG_INFO("Overlay pos set: x %d,y %d,w %d,h %d",x,y,w,h);
@@ -1611,10 +1611,10 @@ int overlay_data_setCrop(struct overlay_data_device_t *dev,
                      data_shared->instance_id,x,y,w,h);
     pthread_mutex_lock(&data_shared->obj_lock);
     //Set the  crop setting for the overlay instance
-    data_shared->crop_x = x;
-    data_shared->crop_y = y;
-    data_shared->crop_w = w;
-    data_shared->crop_h = h;
+    data_shared->crop_x = x&0xFFFFFFF8;
+    data_shared->crop_y = y&0xFFFFFFF8;
+    data_shared->crop_w = w&0xFFFFFFF8;
+    data_shared->crop_h = h&0xFFFFFFF8;
     pthread_mutex_unlock(&data_shared->obj_lock);
     return 0;
 }
-- 
1.8.0

