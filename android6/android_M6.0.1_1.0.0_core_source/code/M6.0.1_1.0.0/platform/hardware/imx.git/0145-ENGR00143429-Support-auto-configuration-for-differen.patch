From 4cb8c9b8d845c19ea40c9e56511095b55d75f25c Mon Sep 17 00:00:00 2001
From: b07117 <b07117@freescale.com>
Date: Sun, 15 May 2011 00:00:50 +0800
Subject: [PATCH 145/635] ENGR00143429, Support auto configuration for
 different display panel

Single HDMI with 'di0_primary', XGA+HDMI dual display with 'di1_primary'

Signed-off-by: xianzhong <b07117@freescale.com>
---
 libgralloc/framebuffer.cpp | 59 ++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 59 insertions(+)

diff --git a/libgralloc/framebuffer.cpp b/libgralloc/framebuffer.cpp
index 37d0a41..933dc2c 100755
--- a/libgralloc/framebuffer.cpp
+++ b/libgralloc/framebuffer.cpp
@@ -530,6 +530,61 @@ static int fb_compositionComplete(struct framebuffer_device_t* dev)
 }
 
 /*****************************************************************************/
+static int set_graphics_fb_mode(int fb)
+{
+    int i=0;
+    int size=0;
+    int fp_mode=0;
+    int fp_modes=0;
+    char fb_mode[256];
+    char fb_modes[256];
+    char temp_name[256];
+
+    sprintf(temp_name, "/sys/class/graphics/fb%d/modes", fb);
+    fp_modes = open(temp_name,O_RDONLY, 0);
+    if(fp_modes < 0) {
+        LOGI("Error! Cannot open %s", temp_name);
+        goto set_graphics_fb_mode_error;
+    }
+
+    memset(fb_modes, 0, sizeof(fb_modes));
+    size = read(fp_modes, fb_modes, sizeof(fb_modes));
+    while(i < size && fb_modes[i] != '\n' && fb_modes[i] != ' ')i++;
+
+    fb_modes[i+1] = 0;
+
+    LOGI("read fb%d first modes %s", fb,fb_modes);
+
+    close(fp_modes);
+
+    sprintf(temp_name, "/sys/class/graphics/fb%d/mode", fb);
+    fp_mode = open(temp_name,O_RDWR, 0);
+    if(fp_mode < 0) {
+        LOGI("Error! Cannot open %s", temp_name);
+        goto set_graphics_fb_mode_error;
+    }
+
+    memset(fb_mode, 0, sizeof(fb_mode));
+    size = read(fp_mode, fb_mode, sizeof(fb_mode));
+
+    if(strcmp(fb_mode, fb_modes))
+    {
+        i = write(fp_mode, fb_modes, strlen(fb_modes)+1);
+        LOGI("write %s return %d", fb_modes, i);
+    }
+
+    close(fp_mode);
+
+    return 0;
+
+set_graphics_fb_mode_error:
+
+    if(fp_modes > 0) close(fp_modes);
+    if(fp_mode > 0) close(fp_mode);
+
+    return -1;
+
+}
 
 int mapFrameBufferLocked(struct private_module_t* module)
 {
@@ -550,6 +605,7 @@ int mapFrameBufferLocked(struct private_module_t* module)
     char value[PROPERTY_VALUE_MAX];
     property_get("ro.UI_TVOUT_DISPLAY", value, "");
     if (strcmp(value, "1") != 0) {
+        set_graphics_fb_mode(0);
         while ((fd==-1) && device_template[i]) {
             snprintf(name, 64, device_template[i], 0);
             fd = open(name, O_RDWR, 0);
@@ -557,6 +613,7 @@ int mapFrameBufferLocked(struct private_module_t* module)
         }
     }
     else{
+        set_graphics_fb_mode(1);
         while ((fd==-1) && device_template[i]) {
             snprintf(name, 64, device_template[i], 1);
             fd = open(name, O_RDWR, 0);
@@ -818,6 +875,8 @@ static int mapSecFrameBuffer(fb_context_t* ctx)
     private_module_t* m = reinterpret_cast<private_module_t*>(
             ctx->device.common.module);
 
+    set_graphics_fb_mode(1);
+
     sec_fp = open("/dev/graphics/fb1",O_RDWR, 0);
     if (sec_fp < 0){
         LOGE("Error!Cannot open the /dev/graphics/fb1 for second display");
-- 
1.8.0

