From 50d1d45e0d6543aef9dc128a51e66b9dd8ed3971 Mon Sep 17 00:00:00 2001
From: Nitin Garg <nitin.garg@freescale.com>
Date: Fri, 8 Jun 2012 08:57:17 -0500
Subject: [PATCH 288/635] ENGR00211366: GPS cannot work, log display
 "athr_init error"

Added a check to ensure the Atheros GPS ing service is running
before opening the ttya. Also increased the delay to 500ms
between open retries.

Signed-off-by: Nitin Garg <nitin.garg@freescale.com>
---
 libgps/athr_gps.c | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/libgps/athr_gps.c b/libgps/athr_gps.c
index b467081..50b799b 100755
--- a/libgps/athr_gps.c
+++ b/libgps/athr_gps.c
@@ -1438,7 +1438,7 @@ gps_state_init( GpsState*  state )
      {
         retry_count++;
         state->fd = open( device, O_RDWR | O_NOCTTY | O_NONBLOCK);
-	usleep (100000);
+	usleep (500000);
      } while ((retry_count < 100) && state->fd < 0 && ((errno == EIO) || (errno == EINTR)));
 
     if (state->fd < 0)
@@ -1503,6 +1503,9 @@ Fail:
 static int athr_gps_init(GpsCallbacks* callbacks)
 {
     GpsState*  s = _gps_state;
+    int    retry_count = 200;
+    const char *desired_status = "running";
+    char value[PROPERTY_VALUE_MAX] = {'\0'};
 
     s->callbacks = *callbacks;
     if (property_set("ctl.start", "ing") < 0) {
@@ -1510,6 +1513,18 @@ static int athr_gps_init(GpsCallbacks* callbacks)
         return -1;
     }
 
+    while (retry_count-- > 0) {
+        usleep(200000);
+        if (property_get("init.svc.ing", value, NULL)) {
+            if (strcmp(value, desired_status) == 0) {
+                LOGE("ing service is running\r\n");
+                break;
+            }
+            else
+                LOGE("ing service is not running\r\n");
+        }
+    }
+
     gps_state_init(s);
 
     if (s->fd < 0)
-- 
1.8.0

