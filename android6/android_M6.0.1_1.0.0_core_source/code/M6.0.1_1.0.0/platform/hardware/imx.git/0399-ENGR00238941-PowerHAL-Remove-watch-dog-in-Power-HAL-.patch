From 5d03b2f54d10a51c9e86c926eb72089926c06908 Mon Sep 17 00:00:00 2001
From: Lin Fuzhen <fuzhen.lin@freescale.com>
Date: Sat, 5 Jan 2013 12:47:31 +0800
Subject: [PATCH 399/635] ENGR00238941 PowerHAL: Remove watch dog in Power HAL
 for JB4.2

JB4.2 has implement watch dog, so remove watch dog implementation in
Power HAL.

Signed-off-by: Lin Fuzhen <fuzhen.lin@freescale.com>
---
 mx6/power/Android.mk   |  2 +-
 mx6/power/power.cpp    |  6 +----
 mx6/power/watchdog.cpp | 63 --------------------------------------------------
 mx6/power/watchdog.h   | 44 -----------------------------------
 4 files changed, 2 insertions(+), 113 deletions(-)
 delete mode 100644 mx6/power/watchdog.cpp
 delete mode 100644 mx6/power/watchdog.h

diff --git a/mx6/power/Android.mk b/mx6/power/Android.mk
index de2a2ac..35e4b03 100644
--- a/mx6/power/Android.mk
+++ b/mx6/power/Android.mk
@@ -22,7 +22,7 @@ include $(CLEAR_VARS)
 
 LOCAL_MODULE_PATH := $(TARGET_OUT_SHARED_LIBRARIES)/hw
 LOCAL_SHARED_LIBRARIES := liblog libcutils libutils
-LOCAL_SRC_FILES := power.cpp watchdog.cpp switchprofile.cpp messageQueue.cpp
+LOCAL_SRC_FILES := power.cpp switchprofile.cpp messageQueue.cpp
 LOCAL_MODULE := power.$(TARGET_BOARD_PLATFORM)
 LOCAL_MODULE_TAGS := optional
 include $(BUILD_SHARED_LIBRARY)
diff --git a/mx6/power/power.cpp b/mx6/power/power.cpp
index 1885c1a..5db7217 100644
--- a/mx6/power/power.cpp
+++ b/mx6/power/power.cpp
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2012 The Android Open Source Project
- * Copyright (C) 2012 Freescale Semiconductor, Inc.
+ * Copyright (C) 2013 Freescale Semiconductor, Inc.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -27,7 +27,6 @@
 #include <hardware/power.h>
 #include <utils/StrongPointer.h>
 
-#include "watchdog.h"
 #include "switchprofile.h"
 
 #define BOOST_PATH      "/sys/devices/system/cpu/cpufreq/interactive/boost"
@@ -35,7 +34,6 @@
 #define CONSER "conservative"
 static int boost_fd = -1;
 static int boost_warned;
-static sp<WatchdogThread> wdThread;
 static sp<SwitchprofileThread> switchprofile;
 
 static void getcpu_gov(char *s, int size)
@@ -83,8 +81,6 @@ static void fsl_power_init(struct power_module *module)
     //create power profile switch thread
     switchprofile = new SwitchprofileThread();
     switchprofile->do_setproperty(PROP_CPUFREQGOV, PROP_VAL);
-    // create and run the watchdog thread
-    wdThread = new WatchdogThread();
 }
 
 static void fsl_power_set_interactive(struct power_module *module, int on)
diff --git a/mx6/power/watchdog.cpp b/mx6/power/watchdog.cpp
deleted file mode 100644
index aac3b49..0000000
--- a/mx6/power/watchdog.cpp
+++ /dev/null
@@ -1,63 +0,0 @@
-/*
- * Copyright (C) 2012 Freescale Semiconductor, Inc. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-#define LOG_TAG "WDT"
-#include <cutils/log.h>
-
-#include "watchdog.h"
-
-using namespace android;
-
-WatchdogThread::WatchdogThread()
-    : Thread(false)
-{
-}
-
-void WatchdogThread::onFirstRef()
-{
-    run("watchdogThread", PRIORITY_URGENT_DISPLAY);
-}
-
-status_t WatchdogThread::readyToRun()
-{
-    // open the watchdog device
-    mFd = open(getPath(), O_WRONLY);
-    if (mFd <= 0) {
-        ALOGE("Could not open the watchdog device:%s", getPath());
-	return NO_INIT;
-    }
-
-    int stout = WDT_TIMEOUT, tout = 0;
-    // set the watchdog timeout
-    ioctl(mFd, WDIOC_SETTIMEOUT, &stout);
-    ALOGD("Setup the watchdog timeout:%d", stout);
-    ioctl(mFd, WDIOC_GETTIMEOUT, &tout);
-    if (stout != tout) {
-        ALOGE("Failed to set the watchdog timeout:%d", tout);
-        return BAD_VALUE;
-    }
-    return NO_ERROR;
-}
-
-bool WatchdogThread::threadLoop()
-{
-    // feed the watchdog
-    ioctl(mFd, WDIOC_KEEPALIVE, 0);
-    // Sleep 2 secs shorter than feed time, cause the watchdog
-    // timer accuracy is 0.5s and we cannot schedule here after
-    // 2s, it's gonna be problem to reboot.
-    sleep(WDT_TIMEOUT-2);
-    return true;
-}
diff --git a/mx6/power/watchdog.h b/mx6/power/watchdog.h
deleted file mode 100644
index 05521ac..0000000
--- a/mx6/power/watchdog.h
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Copyright (C) 2012 Freescale Semiconductor, Inc. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-#ifndef WATCHDOG_H_
-#define WATCHDOG_H_
-
-#include <fcntl.h>
-#include <errno.h>
-
-#include <utils/threads.h>
-#include <linux/watchdog.h>
-
-// set timeout to 30s to make sure system server
-// can restarted within enough time when dalvik crash
-#define WDT_TIMEOUT	30
-
-using namespace android;
-
-class WatchdogThread : public Thread
-{
-public:
-    WatchdogThread();
-
-private:
-    virtual status_t readyToRun();
-    virtual void onFirstRef();
-    virtual bool threadLoop();
-    static char const* getPath() { return "/dev/watchdog"; }
-    int mFd;
-};
-
-#endif
-- 
1.8.0

