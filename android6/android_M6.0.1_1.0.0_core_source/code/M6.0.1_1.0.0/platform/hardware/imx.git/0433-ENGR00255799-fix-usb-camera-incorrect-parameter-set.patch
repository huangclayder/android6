From fef8d6d30181b246fdc8164e986290573563047b Mon Sep 17 00:00:00 2001
From: Xiaowen Liu <b37945@freescale.com>
Date: Tue, 26 Mar 2013 13:23:46 +0800
Subject: [PATCH 433/635] ENGR00255799 fix usb camera incorrect parameter set.

USB Camera: Gallery force stop and can't open Camera again
if switch front&back Camera.
The root cause is array not zero and accessing array is not
limited to the specified size.

add focal length and sensitive element size for usb camera.
The value is a reference and should be changed according to
the specified usb camera.

Signed-off-by: Xiaowen Liu <b37945@freescale.com>
---
 mx6/libcamera2/UvcDevice.cpp | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/mx6/libcamera2/UvcDevice.cpp b/mx6/libcamera2/UvcDevice.cpp
index 492e3ec..e80ae9b 100644
--- a/mx6/libcamera2/UvcDevice.cpp
+++ b/mx6/libcamera2/UvcDevice.cpp
@@ -34,7 +34,7 @@ void UvcDevice::adjustSensorFormats(int *src, int len)
     mDefaultFormat = 0;
     memset(mSensorFormats, 0, sizeof(mSensorFormats));
     int k = 0;
-    for (int i=0; i<len && i<MAX_SENSOR_FORMAT; i++) {
+    for (int i=0; i<len && i<MAX_SENSOR_FORMAT && k<MAX_SENSOR_FORMAT; i++) {
         switch (src[i]) {
             case v4l2_fourcc('N', 'V', '1', '2'):
                 mSensorFormats[k++] = HAL_PIXEL_FORMAT_YCbCr_420_SP;
@@ -140,7 +140,8 @@ void UvcDevice::setPreviewPixelFormat()
     if (mPreviewNeedCsc) {
         mAvailableFormats[n++] = HAL_PIXEL_FORMAT_YCbCr_420_SP;
     }
-    for (int i=0; i<MAX_SENSOR_FORMAT && (mSensorFormats[i] != 0); i++) {
+    for (int i=0; i < MAX_SENSOR_FORMAT && (mSensorFormats[i] != 0) &&
+                  n < MAX_SENSOR_FORMAT; i++) {
         mAvailableFormats[n++] = mSensorFormats[i];
     }
     mAvailableFormatCount = n;
@@ -170,6 +171,8 @@ status_t UvcDevice::initSensorInfo(const CameraInfo& info)
     int sensorFormats[MAX_SENSOR_FORMAT];
     memset(mAvailableFormats, 0, sizeof(mAvailableFormats));
     memset(sensorFormats, 0, sizeof(sensorFormats));
+    memset(mPreviewResolutions, 0, sizeof(mPreviewResolutions));
+    memset(mPictureResolutions, 0, sizeof(mPictureResolutions));
 
     struct v4l2_fmtdesc vid_fmtdesc;
     while (ret == 0) {
@@ -264,7 +267,9 @@ status_t UvcDevice::initSensorInfo(const CameraInfo& info)
 
     setMaxPictureResolutions();
     FLOGI("mMaxWidth:%d, mMaxHeight:%d", mMaxWidth, mMaxHeight);
-    mFocalLength = 10.001;
+    mFocalLength = 3.42f;
+    mPhysicalWidth = 3.673f;
+    mPhysicalHeight = 2.738f;
 
     return NO_ERROR;
 }
-- 
1.8.0

