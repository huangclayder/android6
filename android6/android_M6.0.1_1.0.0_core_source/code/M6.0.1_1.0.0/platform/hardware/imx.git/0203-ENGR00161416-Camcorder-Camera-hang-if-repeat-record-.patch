From 4a51c8e4a57d1ee842e1dd5e79cce5acb37e5258 Mon Sep 17 00:00:00 2001
From: Liu Xiaowen <b37945@freescale.com>
Date: Mon, 7 Nov 2011 17:37:13 +0800
Subject: [PATCH 203/635] ENGR00161416 Camcorder: Camera hang if repeat
 record/stop.

when call stopRecording, directInput is set false,then
call releaseRecorderFrame, the buffer is not released.

Signed-off-by: Liu Xiaowen <b37945@freescale.com>
---
 mx5x/libcamera/CameraHal.cpp     | 5 ++++-
 mx5x/libcamera/V4l2CsiDevice.cpp | 8 +++++---
 2 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/mx5x/libcamera/CameraHal.cpp b/mx5x/libcamera/CameraHal.cpp
index 491fe61..4c37c8f 100755
--- a/mx5x/libcamera/CameraHal.cpp
+++ b/mx5x/libcamera/CameraHal.cpp
@@ -692,6 +692,7 @@ namespace android {
 
             if((handle->phys == 0) || (handle->base == 0) || (handle->size == 0)) {
                  CAMERA_HAL_ERR("%s: dequeue invalide Buffer, phys=%x, base=%x, size=%d", __FUNCTION__, handle->phys, handle->base, handle->size);
+                 mNativeWindow->cancelBuffer(mNativeWindow.get(), buf);
                  break;
             }
 
@@ -830,7 +831,7 @@ namespace android {
         CAMERA_HAL_LOG_FUNC;
         mRecordRunning = false;
 		if (bDerectInput == true) 
-			bDerectInput = false;
+			//bDerectInput = false;
 			sem_post(&avab_enc_frame_finish);
 		}
 
@@ -1850,6 +1851,7 @@ Pic_out:
             if(queue_back_index < mCaptureBufNum) {
                 if(mCaptureDevice->DevQueue(queue_back_index) <0){
                     CAMERA_HAL_ERR("The Capture device queue buf error !!!!");
+                    mNativeWindow->cancelBuffer(mNativeWindow.get(), buf);
                     return INVALID_OPERATION;
                 }
                 mCaptureBuffers[queue_back_index].buf_state = WINDOW_BUFS_DEQUEUED;
@@ -1857,6 +1859,7 @@ Pic_out:
                 mEnqueuedBufs --;
                 sem_post(&avab_dequeue_frame);
             }else {
+                mNativeWindow->cancelBuffer(mNativeWindow.get(), buf);
                 CAMERA_HAL_ERR("dequeue invalide buffer!!!!");
                 return INVALID_OPERATION;
             }
diff --git a/mx5x/libcamera/V4l2CsiDevice.cpp b/mx5x/libcamera/V4l2CsiDevice.cpp
index 09eed12..af3c119 100755
--- a/mx5x/libcamera/V4l2CsiDevice.cpp
+++ b/mx5x/libcamera/V4l2CsiDevice.cpp
@@ -202,11 +202,11 @@ namespace android{
         }
         CAMERA_HAL_LOG_RUNTIME("the fps is %d", pCapcfg->tv.denominator);
 
-        parm.parm.capture.timeperframe.numerator = pCapcfg->tv.numerator;
-        parm.parm.capture.timeperframe.denominator = pCapcfg->tv.denominator;
         ret = V4l2GetCaptureMode(pCapcfg, &(parm.parm.capture.capturemode));
         if (ret != CAPTURE_DEVICE_ERR_NONE)
             return ret;
+        parm.parm.capture.timeperframe.numerator = pCapcfg->tv.numerator;
+        parm.parm.capture.timeperframe.denominator = pCapcfg->tv.denominator;
 
         if (ioctl(mCameraDevice, VIDIOC_S_PARM, &parm) < 0) {
             parm.parm.capture.timeperframe.numerator = 1;
@@ -289,8 +289,10 @@ namespace android{
                 capturemode = 5;	/* 1080P mode */
             }
             else if (capturewidth == 2592 && captureheight == 1944) {
-                pic_waite_buf_num = 5;
+                pic_waite_buf_num = 3;
                 capturemode = 6;	/* 2592x1944 mode */
+                pCapcfg->tv.denominator = 15;
+                pCapcfg->tv.numerator = 1;
             }
             else if (capturewidth == 176 && captureheight == 144) {
                 capturemode = 7;       /* QCIF mode */
-- 
1.8.0

