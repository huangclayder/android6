From 10bc562c5d726aa4920832afca1f6cfe91ec702b Mon Sep 17 00:00:00 2001
From: b02247 <b02247@freescale.com>
Date: Fri, 27 Jul 2012 09:48:30 +0800
Subject: [PATCH 321/635] ENGR00219177 fix the issue when plug in usb audio
 device

because only support 2 sound card, so when there is 3 card
there will be issue in audio hal.

Signed-off-by: b02247 <b02247@freescale.com>
---
 alsa/audio_hardware.h  | 22 +++++++++++++++++++++-
 alsa/config_hdmi.h     |  1 +
 alsa/config_nullcard.h |  1 +
 alsa/config_wm8958.h   |  1 +
 alsa/config_wm8962.h   |  1 +
 alsa/tinyalsa_hal.c    | 25 +++++++++++++++----------
 6 files changed, 40 insertions(+), 11 deletions(-)

diff --git a/alsa/audio_hardware.h b/alsa/audio_hardware.h
index 3a52c5c..fe260e2 100644
--- a/alsa/audio_hardware.h
+++ b/alsa/audio_hardware.h
@@ -55,9 +55,11 @@ struct audio_card{
     struct route_setting *mm_hs_mic_input;
     struct route_setting *vx_bt_mic_input;
     struct route_setting *mm_bt_mic_input;
+    int  card;
 };
 
-#define MAX_AUDIO_CARD_NUM 2
+#define MAX_AUDIO_CARD_NUM  2
+#define MAX_AUDIO_CARD_SCAN 3
 
 struct imx_audio_device {
     struct audio_hw_device hw_device;
@@ -133,5 +135,23 @@ struct imx_stream_in {
     struct imx_audio_device *dev;
 };
 
+#define SUPPORTED_DEVICE_IN_MODULE               \
+          ( AUDIO_DEVICE_OUT_EARPIECE |          \
+            AUDIO_DEVICE_OUT_SPEAKER |           \
+            AUDIO_DEVICE_OUT_WIRED_HEADSET |     \
+            AUDIO_DEVICE_OUT_WIRED_HEADPHONE |   \
+            AUDIO_DEVICE_OUT_AUX_DIGITAL |       \
+            AUDIO_DEVICE_OUT_ANLG_DOCK_HEADSET | \
+            AUDIO_DEVICE_OUT_DGTL_DOCK_HEADSET | \
+            AUDIO_DEVICE_OUT_ALL_SCO |           \
+            AUDIO_DEVICE_OUT_DEFAULT |           \
+            AUDIO_DEVICE_IN_COMMUNICATION |      \
+            AUDIO_DEVICE_IN_AMBIENT |            \
+            AUDIO_DEVICE_IN_BUILTIN_MIC |        \
+            AUDIO_DEVICE_IN_WIRED_HEADSET |      \
+            AUDIO_DEVICE_IN_AUX_DIGITAL |        \
+            AUDIO_DEVICE_IN_BACK_MIC |           \
+            AUDIO_DEVICE_IN_ALL_SCO |            \
+            AUDIO_DEVICE_IN_DEFAULT )
 
 #endif  /* ANDROID_INCLUDE_IMX_AUDIO_HARDWARE_H */
diff --git a/alsa/config_hdmi.h b/alsa/config_hdmi.h
index 9791bff..095c8a0 100644
--- a/alsa/config_hdmi.h
+++ b/alsa/config_hdmi.h
@@ -35,6 +35,7 @@ static struct audio_card  hdmi_card = {
     .mm_hs_mic_input     = NULL,
     .vx_bt_mic_input     = NULL,
     .mm_bt_mic_input     = NULL,
+    .card                = 0,
 };
 
 #endif  /* ANDROID_INCLUDE_IMX_CONFIG_HDMI_H */
diff --git a/alsa/config_nullcard.h b/alsa/config_nullcard.h
index 6d3f43a..9fad927 100644
--- a/alsa/config_nullcard.h
+++ b/alsa/config_nullcard.h
@@ -35,6 +35,7 @@ static struct audio_card  null_card = {
     .mm_hs_mic_input     = NULL,
     .vx_bt_mic_input     = NULL,
     .mm_bt_mic_input     = NULL,
+    .card                = -1,
 };
 
 #endif  /* ANDROID_INCLUDE_IMX_CONFIG_NULLCARD_H */
diff --git a/alsa/config_wm8958.h b/alsa/config_wm8958.h
index 50d6341..a5e360b 100644
--- a/alsa/config_wm8958.h
+++ b/alsa/config_wm8958.h
@@ -500,6 +500,7 @@ static struct audio_card  wm8958_card = {
     .mm_hs_mic_input     = mm_hs_mic_input_wm8958,
     .vx_bt_mic_input     = vx_bt_mic_input_wm8958,
     .mm_bt_mic_input     = mm_bt_mic_input_wm8958,
+    .card                = 0,
 };
 
 #endif  /* ANDROID_INCLUDE_IMX_CONFIG_WM8958_H */
diff --git a/alsa/config_wm8962.h b/alsa/config_wm8962.h
index 9efd9ea..12d2745 100644
--- a/alsa/config_wm8962.h
+++ b/alsa/config_wm8962.h
@@ -222,6 +222,7 @@ static struct audio_card  wm8962_card = {
     .mm_hs_mic_input     = mm_hs_mic_input_wm8962,
     .vx_bt_mic_input     = vx_bt_mic_input_wm8962,
     .mm_bt_mic_input     = mm_bt_mic_input_wm8962,
+    .card                = 0,
 };
 
 #endif  /* ANDROID_INCLUDE_IMX_CONFIG_WM8962_H */
diff --git a/alsa/tinyalsa_hal.c b/alsa/tinyalsa_hal.c
index c5b0d85..a837ff2 100644
--- a/alsa/tinyalsa_hal.c
+++ b/alsa/tinyalsa_hal.c
@@ -391,7 +391,7 @@ static int start_output_stream(struct imx_stream_out *out)
      * devices, this will cause use of S/PDIF or HDMI only */
     for(i = 0; i < MAX_AUDIO_CARD_NUM; i++) {
         if((out->device & AUDIO_DEVICE_OUT_ALL) & adev->card_list[i]->supported_devices) {
-            card = i;
+            card = adev->card_list[i]->card;
             port = 0;
             break;
         }
@@ -903,7 +903,7 @@ static int start_input_stream(struct imx_stream_in *in)
 
     for(i = 0; i < MAX_AUDIO_CARD_NUM; i++) {
         if((adev->devices & AUDIO_DEVICE_IN_ALL) & adev->card_list[i]->supported_devices) {
-            card = i;
+            card = adev->card_list[i]->card;
             port = 0;
             break;
         }
@@ -1881,7 +1881,7 @@ static int adev_open(const hw_module_t* module, const char* name,
     struct imx_audio_device *adev;
     int ret;
     struct control *imx_control;
-    int i,j;
+    int i,j,k;
     bool found;
 
     if (strcmp(name, AUDIO_HARDWARE_INTERFACE) != 0)
@@ -1915,7 +1915,8 @@ static int adev_open(const hw_module_t* module, const char* name,
     /* open the mixer for main sound card, main sound cara is like sgtl5000, wm8958, cs428888*/
     /* note: some platform do not have main sound card, only have auxiliary card.*/
     /* max num of supported card is 2 */
-    for(i = 0; i < MAX_AUDIO_CARD_NUM; i++) {
+    k = 0;
+    for (i = 0; i < MAX_AUDIO_CARD_SCAN ; i ++) {
         found = false;
         imx_control = control_open(i);
         if(!imx_control)
@@ -1923,13 +1924,15 @@ static int adev_open(const hw_module_t* module, const char* name,
         LOGW("card %d, id %s , name %s", i, control_card_info_get_id(imx_control), control_card_info_get_name(imx_control));
         for(j = 0; j < SUPPORT_CARD_NUM; j++) {
             if(!strcmp(control_card_info_get_name(imx_control), audio_card_list[j]->name)){
-                adev->card_list[i]  = audio_card_list[j];
-                adev->mixer[i] = mixer_open(i);
-                if (!adev->mixer[i]) {
+                adev->card_list[k]  = audio_card_list[j];
+                adev->mixer[k] = mixer_open(i);
+                adev->card_list[k]->card = i;
+                if (!adev->mixer[k]) {
                     free(adev);
                     LOGE("Unable to open the mixer, aborting.");
                     return -EINVAL;
                 }
+                k ++;
                 found = true;
             }
         }
@@ -1937,20 +1940,22 @@ static int adev_open(const hw_module_t* module, const char* name,
         control_close(imx_control);
         if(!found){
             LOGW("unrecognized card found.");
-            return -EINVAL;
+        }
+        if(k >= MAX_AUDIO_CARD_NUM) {
+             break;
         }
     }
     /*must have one card*/
     if(!adev->card_list[0]) {
         free(adev);
-        LOGE("no sound card found, aborting.");
+        LOGE("no supported sound card found, aborting.");
         return  -EINVAL;
     }
     /*second card maybe null*/
     if(!adev->card_list[1]) {
         adev->card_list[1]  = audio_card_list[SUPPORT_CARD_NUM-1];
         /*FIXME:This is workaround for some board which only have one card, whose supported device only is not full*/
-        adev->card_list[1]->supported_devices  = (AUDIO_DEVICE_OUT_ALL | AUDIO_DEVICE_IN_ALL) &
+        adev->card_list[1]->supported_devices  = (SUPPORTED_DEVICE_IN_MODULE) &
                                                  (~adev->card_list[0]->supported_devices);
     }
 
-- 
1.8.0

