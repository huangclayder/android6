From a03b7236b84f7e2d112cadb7d02eda8fbe4873a6 Mon Sep 17 00:00:00 2001
From: "guoyin.chen" <guoyin.chen@freescale.com>
Date: Mon, 9 Apr 2012 19:16:27 +0800
Subject: [PATCH 259/635] ENGR00179205 [MX6D/Q CTS]CameraTest#testTakePicture
 failed

Add handling for  RAW image msg type

Signed-off-by: guoyin.chen <guoyin.chen@freescale.com>
---
 mx6/libcamera/CameraHal.cpp | 31 ++++++++++++++++++++++++++++++-
 1 file changed, 30 insertions(+), 1 deletion(-)

diff --git a/mx6/libcamera/CameraHal.cpp b/mx6/libcamera/CameraHal.cpp
index 5651b9e..fc9825b 100755
--- a/mx6/libcamera/CameraHal.cpp
+++ b/mx6/libcamera/CameraHal.cpp
@@ -1090,6 +1090,8 @@ namespace android {
         struct jpeg_encoding_conf JpegEncConf;
         DMA_BUFFER *Buf_input, Buf_output;
         camera_memory_t* JpegMemBase = NULL;
+        camera_memory_t *RawMemBase = NULL;
+
         int  max_fps, min_fps;
 
         if (mJpegEncoder == NULL){
@@ -1179,13 +1181,40 @@ namespace android {
         }
 
         Buf_output.virt_start = (unsigned char *)(JpegMemBase->data);
-        CAMERA_HAL_LOG_INFO("Generated a picture");
+        CAMERA_HAL_LOG_INFO("Generated a picture with mMsgEnabled 0x%x", mMsgEnabled);
 
         if (mMsgEnabled & CAMERA_MSG_SHUTTER) {
             CAMERA_HAL_LOG_INFO("CAMERA_MSG_SHUTTER");
             mNotifyCb(CAMERA_MSG_SHUTTER, 0, 0, mCallbackCookie);
         }
 
+        if (mMsgEnabled & CAMERA_MSG_RAW_IMAGE) {
+            CAMERA_HAL_LOG_INFO("CAMERA_MSG_RAW_IMAGE");
+            RawMemBase = mRequestMemory(-1, mCaptureFrameSize, 1, NULL);
+
+            if ( NULL == RawMemBase ) {
+                CAMERA_HAL_LOG_INFO("Raw buffer allocation failed!");
+                ret = UNKNOWN_ERROR;
+                goto Pic_out;
+            }
+            void *dest = RawMemBase->data;
+
+            if (NULL != dest) {
+                void *src = &mCaptureBuffers[DeQueBufIdx];
+                memcpy(dest, src, mCaptureFrameSize);
+            }
+ 
+            mDataCb(CAMERA_MSG_RAW_IMAGE, RawMemBase, 0, NULL, mCallbackCookie);
+
+            RawMemBase->release(RawMemBase);
+        }
+
+        if ( mMsgEnabled & CAMERA_MSG_RAW_IMAGE_NOTIFY ) {
+            CAMERA_HAL_LOG_INFO("CAMERA_MSG_RAW_IMAGE_NOTIFY");
+            if(mNotifyCb)
+                mNotifyCb(CAMERA_MSG_RAW_IMAGE_NOTIFY, 0, 0, mCallbackCookie);
+        }
+ 
         if (mJpegEncoder->DoEncode(Buf_input,&Buf_output,&JpegEncConf) < 0){
             ret = UNKNOWN_ERROR;
             goto Pic_out;
-- 
1.8.0

