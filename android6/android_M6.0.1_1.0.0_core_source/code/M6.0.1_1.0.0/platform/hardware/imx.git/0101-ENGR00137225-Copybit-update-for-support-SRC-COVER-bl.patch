From 2392ec3029f4ffa0dcc33faad30f5935756bdc9f Mon Sep 17 00:00:00 2001
From: Richard Liu <r66033@freescale.com>
Date: Wed, 22 Dec 2010 08:45:00 +0800
Subject: [PATCH 101/635] ENGR00137225 Copybit update for support SRC COVER
 blit mode

Copybit support SRC COVER blit mode for pixel alpha overlay request

Signed-off-by: Richard Liu <r66033@freescale.com>
---
 libcopybit/copybit.cpp | 21 ++++++++++++++++++---
 1 file changed, 18 insertions(+), 3 deletions(-)

diff --git a/libcopybit/copybit.cpp b/libcopybit/copybit.cpp
index a5bf50f..9ee78c5 100755
--- a/libcopybit/copybit.cpp
+++ b/libcopybit/copybit.cpp
@@ -53,6 +53,8 @@ enum {
     C2D_FLIP_V    = HAL_TRANSFORM_FLIP_V,
     /* enable or disable dithering */
     C2D_DITHER = 0x4,
+    /* enable or disable alpha blend */
+    C2D_ALPHA_BLEND = 0x8,
 };
 
 /** State information for each device instance */
@@ -407,9 +409,10 @@ static int stretch_copybit(
         c2dSetSrcSurface(ctx->c2dctx, srcSurface);
         c2dSetDstSurface(ctx->c2dctx, dstSurface); 
         c2dSetSrcRotate(ctx->c2dctx, ctx->mRotate);
+        
 
         //if (hasAlpha(src->format) || hasAlpha(dst->format))
-        if (hasAlpha(src->format))
+        if (hasAlpha(src->format) && (ctx->mFlags & C2D_ALPHA_BLEND))
                 c2dSetBlendMode(ctx->c2dctx, C2D_ALPHA_BLEND_SRCOVER);
         else
                 c2dSetBlendMode(ctx->c2dctx, C2D_ALPHA_BLEND_NONE);
@@ -450,15 +453,27 @@ static int stretch_copybit(
 }
 
 /** Perform a blit type operation */
+/* Pay attention, from now on blit_copybit will only work on C2D_ALPHA_BLEND_NONE mode,
+ if need C2D_ALPHA_BLEND_SRCOVER mode pls use stretch_copybit */
 static int blit_copybit(
         struct copybit_device_t *dev,
         struct copybit_image_t const *dst,
         struct copybit_image_t const *src,
         struct copybit_region_t const *region) 
 {
+    struct copybit_context_t* ctx = (struct copybit_context_t*)dev;
     struct copybit_rect_t dr = { 0, 0, dst->w, dst->h };
     struct copybit_rect_t sr = { 0, 0, src->w, src->h };
-    return stretch_copybit(dev, dst, src, &dr, &sr, region);
+    if (ctx->mFlags & C2D_ALPHA_BLEND)
+    {
+        int status = 0;
+        ctx->mFlags &= ~C2D_ALPHA_BLEND;
+        status = stretch_copybit(dev, dst, src, &dr, &sr, region);
+        ctx->mFlags |= C2D_ALPHA_BLEND;
+        return status;
+    }
+    else
+        return stretch_copybit(dev, dst, src, &dr, &sr, region);
 }
 
 /*****************************************************************************/
@@ -495,7 +510,7 @@ static int open_copybit(const struct hw_module_t* module, const char* name,
     ctx->device.blit = blit_copybit;
     ctx->device.stretch = stretch_copybit;
     ctx->mAlpha = MDP_ALPHA_NOP;
-    ctx->mFlags = 0;
+    ctx->mFlags |= C2D_ALPHA_BLEND;
     ctx->mCache = open("/dev/fsl_cache", O_RDWR); 
      
 	status = 0;
-- 
1.8.0

