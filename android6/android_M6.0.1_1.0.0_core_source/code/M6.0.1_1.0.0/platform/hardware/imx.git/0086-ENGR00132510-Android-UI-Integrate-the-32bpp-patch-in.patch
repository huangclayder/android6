From df34acfabda8e13de1cc4181cc7f05e4da3dae43 Mon Sep 17 00:00:00 2001
From: b07211 <b07211@freescale.com>
Date: Tue, 12 Oct 2010 19:46:18 -0400
Subject: [PATCH 086/635] ENGR00132510 [Android UI]Integrate the 32bpp patch
 into Android release

Change the Framebuffer setting based on the bpp read
Signed-off-by: b07211 <b07211@freescale.com>
---
 libcopybit/copybit.cpp     |  3 ++-
 libgralloc/framebuffer.cpp | 51 ++++++++++++++++++++++++++++++++++------------
 2 files changed, 40 insertions(+), 14 deletions(-)

diff --git a/libcopybit/copybit.cpp b/libcopybit/copybit.cpp
index a6b4c03..a5bf50f 100755
--- a/libcopybit/copybit.cpp
+++ b/libcopybit/copybit.cpp
@@ -408,7 +408,8 @@ static int stretch_copybit(
         c2dSetDstSurface(ctx->c2dctx, dstSurface); 
         c2dSetSrcRotate(ctx->c2dctx, ctx->mRotate);
 
-        if (hasAlpha(src->format) || hasAlpha(dst->format))
+        //if (hasAlpha(src->format) || hasAlpha(dst->format))
+        if (hasAlpha(src->format))
                 c2dSetBlendMode(ctx->c2dctx, C2D_ALPHA_BLEND_SRCOVER);
         else
                 c2dSetBlendMode(ctx->c2dctx, C2D_ALPHA_BLEND_NONE);
diff --git a/libgralloc/framebuffer.cpp b/libgralloc/framebuffer.cpp
index efcf5d3..144e39b 100755
--- a/libgralloc/framebuffer.cpp
+++ b/libgralloc/framebuffer.cpp
@@ -450,6 +450,8 @@ int mapFrameBufferLocked(struct private_module_t* module)
     if (ioctl(fd, FBIOGET_VSCREENINFO, &info) == -1)
         return -errno;
 
+
+
     info.reserved[0] = 0;
     info.reserved[1] = 0;
     info.reserved[2] = 0;
@@ -457,18 +459,36 @@ int mapFrameBufferLocked(struct private_module_t* module)
     info.yoffset = 0;
     info.activate = FB_ACTIVATE_NOW;
 
-    /*
-     * Explicitly request 5/6/5
-     */
-    info.bits_per_pixel = 16;
-    info.red.offset     = 11;
-    info.red.length     = 5;
-    info.green.offset   = 5;
-    info.green.length   = 6;
-    info.blue.offset    = 0;
-    info.blue.length    = 5;
-    info.transp.offset  = 0;
-    info.transp.length  = 0;
+    if(info.bits_per_pixel == 32){
+        LOGW("32bpp setting of Framebuffer catched!");
+        /*
+         * Explicitly request BGRA 8/8/8
+         */
+        info.bits_per_pixel = 32;
+        info.red.offset     = 8;
+        info.red.length     = 8;
+        info.green.offset   = 16;
+        info.green.length   = 8;
+        info.blue.offset    = 24;
+        info.blue.length    = 8;
+        info.transp.offset  = 0;
+        info.transp.length  = 0;
+    }
+    else{
+        /*
+         * Explicitly request 5/6/5
+         */
+        info.bits_per_pixel = 16;
+        info.red.offset     = 11;
+        info.red.length     = 5;
+        info.green.offset   = 5;
+        info.green.length   = 6;
+        info.blue.offset    = 0;
+        info.blue.length    = 5;
+        info.transp.offset  = 0;
+        info.transp.length  = 0;
+    }
+
 
     /*
      * Request NUM_BUFFERS screens (at lest 2 for page flipping)
@@ -952,7 +972,12 @@ int fb_device_open(hw_module_t const* module, const char* name,
             const_cast<uint32_t&>(dev->device.width) = m->info.xres;
             const_cast<uint32_t&>(dev->device.height) = m->info.yres;
             const_cast<int&>(dev->device.stride) = stride;
-            const_cast<int&>(dev->device.format) = HAL_PIXEL_FORMAT_RGB_565;
+            if(m->info.bits_per_pixel != 32) {
+                const_cast<int&>(dev->device.format) = HAL_PIXEL_FORMAT_RGB_565;
+            }
+            else{
+                const_cast<int&>(dev->device.format) = HAL_PIXEL_FORMAT_BGRA_8888;
+            }
             const_cast<float&>(dev->device.xdpi) = m->xdpi;
             const_cast<float&>(dev->device.ydpi) = m->ydpi;
             const_cast<float&>(dev->device.fps) = m->fps;
-- 
1.8.0

