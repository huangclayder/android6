From 9be6f70ba5cd1373598263fef45150542a276bd6 Mon Sep 17 00:00:00 2001
From: Xinyu Chen <xinyu.chen@freescale.com>
Date: Thu, 22 Jul 2010 15:56:08 +0800
Subject: [PATCH 055/635] Use macro and env path instead of hard code for the
 shm mutex open share memory file.

---
 libcopybit/copybit.cpp | 27 ++++++++++++++++++++++++---
 1 file changed, 24 insertions(+), 3 deletions(-)

diff --git a/libcopybit/copybit.cpp b/libcopybit/copybit.cpp
index 2ecd41d..9b54ae0 100755
--- a/libcopybit/copybit.cpp
+++ b/libcopybit/copybit.cpp
@@ -28,6 +28,7 @@
 #include <stdint.h>
 #include <string.h>
 #include <unistd.h>
+#include <stdlib.h>
 #include <errno.h>
 #include <fcntl.h>
 
@@ -43,6 +44,7 @@
 /******************************************************************************/
 #define MAX_SCALE_FACTOR    (8)
 #define MDP_ALPHA_NOP 0xff
+#define SHM_FILE "/copybit.shm"
 /******************************************************************************/
 
 /* mFlags bit define */
@@ -472,13 +474,22 @@ static int close_copybit(struct hw_device_t *dev)
     struct copybit_context_t* ctx = (struct copybit_context_t*)dev;
     if (ctx) {
         int fd;
+        char *shm_path, shm_file[256];
         copybit_instance_t *ptr;
         C2D_STATUS c2dstatus;
         if (ctx->c2dctx != NULL)
         	c2dstatus = c2dDestroyContext(ctx->c2dctx);
         free(ctx);
 
-        fd = open("/sqlite_stmt_journals/copybit.shm", O_RDWR, 0666);
+        shm_path = getenv("SHM_MOUNTPOINT");
+        if (shm_path == NULL) {
+            LOGE("Failed to get shm mount point\n");
+            return 0;
+        }
+        strcpy(shm_file, shm_path);
+        strcat(shm_file, SHM_FILE);
+
+        fd = open(shm_file, O_RDWR, 0666);
         if (fd >= 0) {
                 ftruncate(fd, sizeof(copybit_instance_t));
                 ptr = (copybit_instance_t *) mmap(NULL, sizeof(copybit_instance_t), PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);
@@ -497,11 +508,21 @@ static int open_copybit(const struct hw_module_t* module, const char* name,
     int status = -EINVAL;
     
     int fd;
+    char *shm_path, shm_file[256];
+
+    shm_path = getenv("SHM_MOUNTPOINT");
+    if (shm_path == NULL) {
+        LOGE("Failed to get shm mount point\n");
+        return status;
+    }
+    strcpy(shm_file, shm_path);
+    strcat(shm_file, SHM_FILE);
+
     copybit_instance_t *ptr;
-    fd = open("/sqlite_stmt_journals/copybit.shm", O_RDWR, 0666);
+    fd = open(shm_file, O_RDWR, 0666);
     if (fd < 0) { 
         /* create copybit.shm if no this file */
-       fd = open("/sqlite_stmt_journals/copybit.shm", O_RDWR | O_CREAT | O_EXCL, 0666);
+       fd = open(shm_file, O_RDWR | O_CREAT | O_EXCL, 0666);
        if(fd < 0)
        {
              LOGE("Copybit create copybit.shm file fail");
-- 
1.8.0

