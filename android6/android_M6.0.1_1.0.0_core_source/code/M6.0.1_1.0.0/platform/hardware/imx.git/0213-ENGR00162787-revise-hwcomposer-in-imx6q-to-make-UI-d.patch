From cc81bbc939cc8f33e98ef7cb35162c75fd78fd30 Mon Sep 17 00:00:00 2001
From: Liu Xiaowen <b37945@freescale.com>
Date: Tue, 22 Nov 2011 10:09:58 +0800
Subject: [PATCH 213/635] ENGR00162787 revise hwcomposer in imx6q to make UI
 display for android ics

android ics can not display UI right now. because surface flinger has a
little different, and the commit which make UI and video refresh
independently can not be applied. now, make UI refresh always.

Signed-off-by: Liu Xiaowen <b37945@freescale.com>
---
 mx6/hwcomposer/hwcomposer.cpp | 81 ++++++++++++++++---------------------------
 1 file changed, 29 insertions(+), 52 deletions(-)

diff --git a/mx6/hwcomposer/hwcomposer.cpp b/mx6/hwcomposer/hwcomposer.cpp
index 051c3b8..62c476c 100755
--- a/mx6/hwcomposer/hwcomposer.cpp
+++ b/mx6/hwcomposer/hwcomposer.cpp
@@ -331,19 +331,12 @@ static int open_outputDevice(struct hwc_context_t *ctx, const char *dev_name, ou
 }
 
 static int hwc_prepare(hwc_composer_device_t *dev, hwc_layer_list_t* list) {
-//#if 1
-		//HWCOMPOSER_LOG_RUNTIME("<<<<<<<<<<<<<<<hwc_prepare---1>>>>>>>>>>>>>>>>>\n");
-		char out_using[MAX_OUTPUT_DISPLAY] = {0};
-//		for(int i = 0; i < MAX_OUTPUT_DISPLAY; i++) {
-//				out_using[i] = m_using[i];
-//		}
-
-		struct hwc_context_t *ctx = (struct hwc_context_t *)dev;
-#if 1
-		if(ctx) {
-			hwc_check_property(ctx);
-		}
-#endif
+    char out_using[MAX_OUTPUT_DISPLAY] = {0};
+
+    struct hwc_context_t *ctx = (struct hwc_context_t *)dev;
+    if(ctx) {
+	hwc_check_property(ctx);
+    } 
     if (list && dev) {
         for (size_t i=0 ; i<list->numHwLayers ; i++) {
             //dump_layer(&list->hwLayers[i]);
@@ -355,24 +348,21 @@ static int hwc_prepare(hwc_composer_device_t *dev, hwc_layer_list_t* list) {
             if(!layer->handle || ((private_handle_t *)layer->handle)->magic != private_handle_t::sMagic) {
                 continue;//skip NULL pointer and other magic handler
             }
-		    if (private_handle_t::validate(layer->handle) < 0) {
-	    		//HWCOMPOSER_LOG_ERR("it is not a valide buffer handle\n");
-	    		continue;
-		    }
-		    //HWCOMPOSER_LOG_RUNTIME("<<<<<<<<<<<<<<<hwc_prepare---2>>>>>>>>>>>>>>>>>\n");
+	    if (private_handle_t::validate(layer->handle) < 0) {
+		//HWCOMPOSER_LOG_ERR("it is not a valide buffer handle\n");
+		continue;
+	    }
+	    //HWCOMPOSER_LOG_RUNTIME("<<<<<<<<<<<<<<<hwc_prepare---2>>>>>>>>>>>>>>>>>\n");
             private_handle_t *handle = (private_handle_t *)(layer->handle);
             if(!(handle->usage & GRALLOC_USAGE_HWC_OVERLAY)) {
                 //HWCOMPOSER_LOG_ERR("<<<<<<<<<<<<<<<hwc_prepare---usage=%x>>phy=%x>>>>>>>>>>>>>>>\n", handle->usage, handle->phys);
             	continue;
             }
             HWCOMPOSER_LOG_RUNTIME("<<<<<<<<<<<<<<<hwc_prepare---3>usage=%x, phy=%x>>>>>>>>>>>>>>>>\n", handle->usage, handle->phys);
-#if 1
-        	layer->compositionType = HWC_OVERLAY;
-    		//if(handle->usage & GRALLOC_USAGE_HWC_DISP1)
-    		//handle the display frame position for tv out.
-#endif
-#if 1
-        	hwc_modify_property(ctx, handle);
+	    layer->compositionType = HWC_OVERLAY;
+	    //if(handle->usage & GRALLOC_USAGE_HWC_DISP1)
+	    //handle the display frame position for tv out.
+	    hwc_modify_property(ctx, handle);
 
             if(!validate_displayFrame(layer)) {
                 HWCOMPOSER_LOG_INFO("<<<<<<<<<<<<<<<hwc_prepare---3-2>>>>>>>>>>>>>>>>\n");
@@ -387,16 +377,16 @@ static int hwc_prepare(hwc_composer_device_t *dev, hwc_layer_list_t* list) {
             //HWCOMPOSER_LOG_ERR("<<<<<<<<<<<<<<<hwc_prepare---3-3>>>>>usage=%x>>>i_usage=%x>>>>>>>>\n", handle->usage, i_usage);
             retv = checkOutputDevice(ctx, out_using, i_usage, &m_usage);
             while(retv && m_usage) {
-		        int ruse = 0;
-		        char *dev_name = NULL;
-				dev_name = getDeviceName(m_usage, &ruse);
+		    int ruse = 0;
+		    char *dev_name = NULL;
+		    dev_name = getDeviceName(m_usage, &ruse);
 	            m_usage &= ~ruse;
 	            HWCOMPOSER_LOG_RUNTIME("<<<<<<<<<<<<<<<hwc_prepare---4>>>>>>>>>>>>>>>>>\n");
 	            if(dev_name == NULL) {
-					HWCOMPOSER_LOG_INFO("****Warnning: layer buffer usage(%x) does not support!", handle->usage);
-					HWCOMPOSER_LOG_INFO("****Warnning:  the layer buffer will be handled in surfaceflinger");
-					layer->compositionType = HWC_FRAMEBUFFER;
-					continue;
+			HWCOMPOSER_LOG_INFO("****Warnning: layer buffer usage(%x) does not support!", handle->usage);
+			HWCOMPOSER_LOG_INFO("****Warnning:  the layer buffer will be handled in surfaceflinger");
+			layer->compositionType = HWC_FRAMEBUFFER;
+			continue;
 	            }//end else
 
 	            index = findEmpytIndex(ctx);
@@ -417,19 +407,15 @@ static int hwc_prepare(hwc_composer_device_t *dev, hwc_layer_list_t* list) {
 		        //setLayerFrame(layer, ctx->m_out[index], ruse);
             }//end while
             checkDisplayFrame(ctx, layer, i_usage);
-#endif
         }//end for
-#if 1
-	    for(int i = 0; i < MAX_OUTPUT_DISPLAY; i++) {
-			if(!out_using[i] && ctx->m_using[i]) {
-				ctx->m_using[i] = 0;
-				deleteEmtpyIndex(ctx);
-			}
-			//ctx->m_using[i] = out_using[i];
+        for(int i = 0; i < MAX_OUTPUT_DISPLAY; i++) {
+		if(!out_using[i] && ctx->m_using[i]) {
+			ctx->m_using[i] = 0;
+			deleteEmtpyIndex(ctx);
 		}
-#endif
+		//ctx->m_using[i] = out_using[i];
+	}
     }//end if
-//#endif
     return 0;
 }
 
@@ -479,7 +465,6 @@ static int hwc_set(hwc_composer_device_t *dev,
     //}
     //hwc_buffer *outBuff[MAX_OUTPUT_DISPLAY];
     //when displayhardware do releas function, it will come here.
-#if 1
     if(ctx && (dpy == NULL) && (sur == NULL) && (list == NULL)) {
 		//close the output device.
 		releaseAllOutput(ctx);
@@ -487,16 +472,14 @@ static int hwc_set(hwc_composer_device_t *dev,
 
 		return 0;
     }
-#endif
 		//HWCOMPOSER_LOG_RUNTIME("==============hwc_set=2==============\n");
-#if 1 
+    ctx->ui_refresh = 1; 
     if((ctx == NULL) || (ctx && ctx->ui_refresh)) {
         EGLBoolean sucess = eglSwapBuffers((EGLDisplay)dpy, (EGLSurface)sur);
         if (!sucess) {
             return HWC_EGL_ERROR;
         }
     }
-#endif
     if(list == NULL || dev == NULL || !ctx->vd_refresh) {
     	return 0;
     }
@@ -508,12 +491,6 @@ static int hwc_set(hwc_composer_device_t *dev,
     char bufs_state[MAX_OUTPUT_DISPLAY];
     memset(bufs_state, 0, sizeof(bufs_state));
 	memset(out_buffer, 0, sizeof(out_buffer));
-#if 0    
-	for(int i = 0; i < MAX_OUTPUT_DISPLAY; i++) {
-		if(ctx->m_using[i] && ctx->m_out[i])
-			status = ctx->m_out[i]->fetch(&out_buffer[i]);
-    }
-#endif
     blit_device *bltdev = ctx->blit;
     for (size_t i=0 ; i<list->numHwLayers ; i++){
 		hwc_layer_t *layer = &list->hwLayers[i];
-- 
1.8.0

