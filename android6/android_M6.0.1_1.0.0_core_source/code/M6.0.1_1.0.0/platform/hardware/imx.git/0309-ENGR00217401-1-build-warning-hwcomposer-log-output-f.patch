From ad14145a2bfb7e782ce1e850ec1f0833ca3993aa Mon Sep 17 00:00:00 2001
From: Xinyu Chen <xinyu.chen@freescale.com>
Date: Wed, 18 Jul 2012 10:08:23 +0800
Subject: [PATCH 309/635] ENGR00217401-1 build warning: hwcomposer log output
 format

Remove unused the flag characters.
Fix the coding style issue.

Signed-off-by: Xinyu Chen <xinyu.chen@freescale.com>
---
 mx6/hwcomposer/hwcomposer.cpp | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/mx6/hwcomposer/hwcomposer.cpp b/mx6/hwcomposer/hwcomposer.cpp
index 7d8755f..00ceea5 100755
--- a/mx6/hwcomposer/hwcomposer.cpp
+++ b/mx6/hwcomposer/hwcomposer.cpp
@@ -1,4 +1,6 @@
 /*
+ * Copyright (C) 2009-2012 Freescale Semiconductor, Inc. All Rights Reserved.
+ *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
@@ -12,7 +14,6 @@
  * limitations under the License.
  */
 
-/*Copyright 2009-2011 Freescale Semiconductor, Inc. All Rights Reserved.*/
 
 #include <hardware/hardware.h>
 
@@ -118,7 +119,7 @@ static void addRecord(hwc_context_t *dev, hwc_layer_list_t* list)
             }
 
             if(rec_index >= LAYER_RECORD_NUM) {
-                HWCOMPOSER_LOG_ERR("******************Error:%s, too many video layers");
+                HWCOMPOSER_LOG_ERR("******************Error: too many video layers");
                 return;
             }
             dev->records[rec_index].handle = (void*)(layer->handle);
@@ -176,7 +177,7 @@ static int hwc_check_property(hwc_context_t *dev)
        dev->display_mode |= DISPLAY_MODE_OVERLAY_DISP2;
        dev->second_display = 1;
        return 0;
-    } 
+    }
     else if (strcmp(value, "0") == 0)
     {
        dev->second_display = 0;
@@ -408,7 +409,7 @@ static void checkDisplayFrame(struct hwc_context_t *ctx, hwc_layer_t *layer, int
 
 }
 
-static int open_outputDevice(struct hwc_context_t *ctx, const char *dev_name, output_device **device, int flag) 
+static int open_outputDevice(struct hwc_context_t *ctx, const char *dev_name, output_device **device, int flag)
 {
     int usage;
     output_device *out;
@@ -434,7 +435,7 @@ static int hwc_prepare(hwc_composer_device_t *dev, hwc_layer_list_t* list) {
         if(ctx->viv_hwc)
             ctx->viv_hwc->prepare(ctx->viv_hwc, list);
 	//hwc_check_property(ctx);
-    } 
+    }
     if (list && dev) {
         for (size_t i=0 ; i<list->numHwLayers ; i++) {
             //dump_layer(&list->hwLayers[i]);
@@ -614,7 +615,7 @@ static int hwc_set(hwc_composer_device_t *dev,
         HWCOMPOSER_LOG_RUNTIME("%s,%d", __FUNCTION__, __LINE__);
 
         //when GM do seek, it always queue the same buffer.
-        //so, we can not judge the reduplicated buffer by buffer handle now. 
+        //so, we can not judge the reduplicated buffer by buffer handle now.
         if(isInRecord(ctx, layer)) {
             HWCOMPOSER_LOG_RUNTIME("%s,%d, lost frames", __FUNCTION__, __LINE__);
             //continue;
@@ -636,7 +637,7 @@ static int hwc_set(hwc_composer_device_t *dev,
                 }else {
                     break;
                 }
-                
+
     		if(outdev != NULL) {
 			if(!bufs_state[index] && ctx->m_using[index]) {
 				outdev->fetch(&out_buffer[index]);
-- 
1.8.0

