From 13b4ed8f39872b10bab39a81896e9ccf661c0939 Mon Sep 17 00:00:00 2001
From: Xiaowen Liu <b37945@freescale.com>
Date: Wed, 30 Jan 2013 14:54:05 +0800
Subject: [PATCH 412/635] ENGR00242246 fix Gallery stopped if shoot a picture
 during 1080p recording.

jpeg encoder algorithm access buffer exceed its size.
refine the algorithm to limit the buffer access.

Signed-off-by: Xiaowen Liu <b37945@freescale.com>
---
 mx6/libcamera2/YuvToJpegEncoder.cpp | 12 +++++++++---
 mx6/libcamera2/YuvToJpegEncoder.h   |  3 ++-
 2 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/mx6/libcamera2/YuvToJpegEncoder.cpp b/mx6/libcamera2/YuvToJpegEncoder.cpp
index dae3389..1950bcb 100755
--- a/mx6/libcamera2/YuvToJpegEncoder.cpp
+++ b/mx6/libcamera2/YuvToJpegEncoder.cpp
@@ -49,6 +49,7 @@ int YuvToJpegEncoder::encode(void *inYuv,
     uint8_t *resize_src = NULL;
     jpegBuilder_destination_mgr dest_mgr((uint8_t *)outBuf, outSize);
 
+    memset(&cinfo, 0, sizeof(cinfo));
     if ((inWidth != outWidth) || (inHeight != outHeight)) {
         resize_src = (uint8_t *)malloc(outSize);
         yuvResize((uint8_t *)inYuv,
@@ -123,7 +124,7 @@ void Yuv420SpToJpegEncoder::compress(jpeg_compress_struct *cinfo,
     // process 16 lines of Y and 8 lines of U/V each time.
     while (cinfo->next_scanline < cinfo->image_height) {
         // deitnerleave u and v
-        deinterleave(vuPlanar, uRows, vRows, cinfo->next_scanline, width);
+        deinterleave(vuPlanar, uRows, vRows, cinfo->next_scanline, width, height);
 
         for (int i = 0; i < 16; i++) {
             // y row
@@ -147,9 +148,14 @@ void Yuv420SpToJpegEncoder::deinterleave(uint8_t *vuPlanar,
                                          uint8_t *uRows,
                                          uint8_t *vRows,
                                          int      rowIndex,
-                                         int      width) {
+                                         int      width,
+                                         int      height) {
     for (int row = 0; row < 8; ++row) {
-        int offset  = ((rowIndex >> 1) + row) * width;
+        int hoff = (rowIndex >> 1) + row;
+        if (hoff >= (height >> 1)) {
+            return;
+        }
+        int offset  = hoff * width;
         uint8_t *vu = vuPlanar + offset;
         for (int i = 0; i < (width >> 1); ++i) {
             int index = row * (width >> 1) + i;
diff --git a/mx6/libcamera2/YuvToJpegEncoder.h b/mx6/libcamera2/YuvToJpegEncoder.h
index ad1e7f6..29833dc 100755
--- a/mx6/libcamera2/YuvToJpegEncoder.h
+++ b/mx6/libcamera2/YuvToJpegEncoder.h
@@ -93,7 +93,8 @@ private:
                       uint8_t *uRows,
                       uint8_t *vRows,
                       int      rowIndex,
-                      int      width);
+                      int      width,
+                      int      height);
     void        compress(jpeg_compress_struct *cinfo,
                          uint8_t              *yuv);
     virtual int yuvResize(uint8_t *srcBuf,
-- 
1.8.0

