From 6ce95e58c80bb41af8e5b15e632ca3cca4f319be Mon Sep 17 00:00:00 2001
From: b02247 <b02247@freescale.com>
Date: Thu, 30 Sep 2010 15:25:21 +0800
Subject: [PATCH 087/635] ENGR00131913  clean up the current modes definition
 and add some new ones

update the framebuffer for eink api change

Signed-off-by: b02247 <b02247@freescale.com>
---
 libgralloc/framebuffer.cpp | 88 ++++++++++++++++++++++++++++++++--------------
 1 file changed, 62 insertions(+), 26 deletions(-)

diff --git a/libgralloc/framebuffer.cpp b/libgralloc/framebuffer.cpp
index 144e39b..5ba636a 100755
--- a/libgralloc/framebuffer.cpp
+++ b/libgralloc/framebuffer.cpp
@@ -103,10 +103,33 @@ static int resizeToSecFrameBuffer(int base,int phys,fb_context_t* ctx);
 //#define WAVEFORM_MODE_AUTO                    257  // defined in mxcfb.h
 
 
-#define EINK_UPDATE_MODE_MASK                   0x000F
-#define EINK_WAVEFORM_MODE_MASK                 0x00F0
-#define EINK_WAIT_MODE_MASK                     0x0F00
-#define EINK_AUTO_MODE_MASK                     0xF000
+#define EINK_WAVEFORM_MODE_INIT      0x00000000
+#define EINK_WAVEFORM_MODE_DU        0x00000001
+#define EINK_WAVEFORM_MODE_GC16      0x00000002
+#define EINK_WAVEFORM_MODE_GC4       0x00000003
+#define EINK_WAVEFORM_MODE_AUTO      0x00000004
+#define EINK_WAVEFORM_MODE_MASK      0x0000000F
+#define EINK_AUTO_MODE_REGIONAL      0x00000000
+#define EINK_AUTO_MODE_AUTOMATIC     0x00000010
+#define EINK_AUTO_MODE_MASK          0x00000010
+#define EINK_UPDATE_MODE_PARTIAL     0x00000000
+#define EINK_UPDATE_MODE_FULL        0x00000020
+#define EINK_UPDATE_MODE_MASK        0x00000020
+#define EINK_WAIT_MODE_NOWAIT        0x00000000
+#define EINK_WAIT_MODE_WAIT          0x00000040
+#define EINK_WAIT_MODE_MASK          0x00000040
+#define EINK_COMBINE_MODE_NOCOMBINE  0x00000000
+#define EINK_COMBINE_MODE_COMBINE    0x00000080
+#define EINK_COMBINE_MODE_MASK       0x00000080
+#define EINK_DITHER_MODE_NODITHER    0x00000000
+#define EINK_DITHER_MODE_DITHER      0x00000100
+#define EINK_DITHER_MODE_MASK        0x00000100
+#define EINK_INVERT_MODE_NOINVERT    0x00000000
+#define EINK_INVERT_MODE_INVERT      0x00000200
+#define EINK_INVERT_MODE_MASK        0x00000200
+#define EINK_CONVERT_MODE_NOCONVERT  0x00000000
+#define EINK_CONVERT_MODE_CONVERT    0x00000400
+#define EINK_CONVERT_MODE_MASK       0x00000400
 
 
 
@@ -119,40 +142,54 @@ static void update_to_display(int left, int top, int width, int height, int upda
 	int auto_update_mode = AUTO_UPDATE_MODE_REGION_MODE;
 	memset(&upd_data, 0, sizeof(mxcfb_update_data));
 
-    if((updatemode & EINK_UPDATE_MODE_MASK) == 0)
-        upd_data.update_mode = UPDATE_MODE_PARTIAL;
-    else if((updatemode & EINK_UPDATE_MODE_MASK) == 1)    
-        upd_data.update_mode = UPDATE_MODE_FULL;
-    else 
-        LOGI("update_mode  wrong\n");
-        
-        
-    if((updatemode & EINK_WAVEFORM_MODE_MASK) == 0x10)
+//    LOGI("left=%d, top=%d, width=%d, height=%d updatemode=%d\n", left, top, width, height,updatemode);
+
+
+    if((updatemode & EINK_WAVEFORM_MODE_MASK) == EINK_WAVEFORM_MODE_DU)
 	   upd_data.waveform_mode = WAVEFORM_MODE_DU;
-	else if((updatemode & EINK_WAVEFORM_MODE_MASK) == 0x20)
+	else if((updatemode & EINK_WAVEFORM_MODE_MASK) == EINK_WAVEFORM_MODE_GC4)
 	   upd_data.waveform_mode = WAVEFORM_MODE_GC4;
-	else if((updatemode & EINK_WAVEFORM_MODE_MASK) == 0x40)
+	else if((updatemode & EINK_WAVEFORM_MODE_MASK) == EINK_WAVEFORM_MODE_GC16)
 	   upd_data.waveform_mode = WAVEFORM_MODE_GC16;
-	else if((updatemode & EINK_WAVEFORM_MODE_MASK) == 0x80)
+	else if((updatemode & EINK_WAVEFORM_MODE_MASK) == EINK_WAVEFORM_MODE_AUTO)
 	   upd_data.waveform_mode = WAVEFORM_MODE_AUTO;
 	else 
         LOGI("waveform_mode  wrong\n");
 	   
-    if((updatemode & EINK_WAIT_MODE_MASK) == 0x100)
-        wait_for_complete = false;
-    else if((updatemode & EINK_WAIT_MODE_MASK) == 0x200)    
-        wait_for_complete = true;
+    if((updatemode & EINK_AUTO_MODE_MASK) == EINK_AUTO_MODE_REGIONAL)
+        auto_update_mode = AUTO_UPDATE_MODE_REGION_MODE;
+    else if((updatemode & EINK_AUTO_MODE_MASK) == EINK_AUTO_MODE_AUTOMATIC)
+        auto_update_mode = AUTO_UPDATE_MODE_AUTOMATIC_MODE;
     else 
         LOGI("wait_for_complete  wrong\n");
         
-        
-    if((updatemode & EINK_AUTO_MODE_MASK) == 0x0000)
-        auto_update_mode = AUTO_UPDATE_MODE_REGION_MODE;
-    else if((updatemode & EINK_AUTO_MODE_MASK) == 0x1000)    
-        auto_update_mode = AUTO_UPDATE_MODE_AUTOMATIC_MODE;
+    if((updatemode & EINK_UPDATE_MODE_MASK) == EINK_UPDATE_MODE_PARTIAL)
+        upd_data.update_mode = UPDATE_MODE_PARTIAL;
+    else if((updatemode & EINK_UPDATE_MODE_MASK) == EINK_UPDATE_MODE_FULL)
+        upd_data.update_mode = UPDATE_MODE_FULL;
+    else
+        LOGI("update_mode  wrong\n");
+
+    if((updatemode & EINK_WAIT_MODE_MASK) == EINK_WAIT_MODE_NOWAIT)
+        wait_for_complete = false;
+    else if((updatemode & EINK_WAIT_MODE_MASK) == EINK_WAIT_MODE_WAIT)
+        wait_for_complete = true;
     else 
         LOGI("wait_for_complete  wrong\n");
+
+    struct fb_var_screeninfo info;
+    if (ioctl(fb_dev, FBIOGET_VSCREENINFO, &info) == -1)
+        LOGE("Error!FBIOGET_VSCREENINFO failed");
         
+    if((updatemode & EINK_INVERT_MODE_MASK) == EINK_INVERT_MODE_NOINVERT)
+	   info.grayscale = 0;
+	else if((updatemode & EINK_INVERT_MODE_MASK) == EINK_INVERT_MODE_INVERT)
+	   info.grayscale = 2;
+    else
+        LOGI("invert mode wrong\n");
+    if (ioctl(fb_dev, FBIOPUT_VSCREENINFO, &info) == -1) {
+        LOGE("Error!FBIOPUT_VSCREENINFO failed");
+    }
 
 	retval = ioctl(fb_dev, MXCFB_SET_AUTO_UPDATE_MODE, &auto_update_mode);
 	if (retval < 0) {
@@ -160,7 +197,6 @@ static void update_to_display(int left, int top, int width, int height, int upda
 	}    
     
     upd_data.temp = 24; //the temperature is get from linux team
-            
 	upd_data.update_region.left = left;
 	upd_data.update_region.width = width;
 	upd_data.update_region.top = top;
-- 
1.8.0

