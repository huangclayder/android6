From 833ca5d9855923c0f14ea8d86d436675c0527c6a Mon Sep 17 00:00:00 2001
From: Lin Fuzhen <fuzhen.lin@freescale.com>
Date: Mon, 15 Oct 2012 16:11:27 +0800
Subject: [PATCH 351/635] ENGR00226300 imx5/imx6: Add FSL power HAL for
 JellyBean

Implement Power HAL defined by JellyBean for FSL i.MX 5x/6x

Signed-off-by: Lin Fuzhen <fuzhen.lin@freescale.com>
---
 Android.mk       |   2 +-
 power/Android.mk |  28 +++++++++++++
 power/power.c    | 117 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 146 insertions(+), 1 deletion(-)
 create mode 100644 power/Android.mk
 create mode 100644 power/power.c

diff --git a/Android.mk b/Android.mk
index 1ec56a7..54825e7 100644
--- a/Android.mk
+++ b/Android.mk
@@ -1,4 +1,4 @@
-common_imx_dirs := libsensors alsa libgps lights wlan
+common_imx_dirs := libsensors alsa libgps lights wlan power
 mx5x_dirs := $(common_imx_dirs) mx5x/libcopybit mx5x/libgralloc  mx5x/hwcomposer mx5x/libcamera
 mx6_dirs := $(common_imx_dirs) mx6/libgralloc_wrapper mx6/hwcomposer mx6/libcamera
 
diff --git a/power/Android.mk b/power/Android.mk
new file mode 100644
index 0000000..f86b50a
--- /dev/null
+++ b/power/Android.mk
@@ -0,0 +1,28 @@
+# Copyright (C) 2012 The Android Open Source Project
+# Copyright (C) 2012 Freescale Semiconductor, Inc.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+
+LOCAL_PATH := $(call my-dir)
+
+# HAL module implemenation stored in
+# hw/<POWERS_HARDWARE_MODULE_ID>.<ro.hardware>.so
+include $(CLEAR_VARS)
+
+LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR_SHARED_LIBRARIES)/hw
+LOCAL_SHARED_LIBRARIES := liblog libcutils
+LOCAL_SRC_FILES := power.c
+LOCAL_MODULE := power.$(TARGET_BOARD_PLATFORM)
+LOCAL_MODULE_TAGS := optional
+include $(BUILD_SHARED_LIBRARY)
diff --git a/power/power.c b/power/power.c
new file mode 100644
index 0000000..4f18cc3
--- /dev/null
+++ b/power/power.c
@@ -0,0 +1,117 @@
+/*
+ * Copyright (C) 2012 The Android Open Source Project
+ * Copyright (C) 2012 Freescale Semiconductor, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+#include <errno.h>
+#include <string.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <fcntl.h>
+
+#define LOG_TAG "i.MX PowerHAL"
+#include <utils/Log.h>
+
+#include <hardware/hardware.h>
+#include <hardware/power.h>
+
+#define BOOST_PATH      "/sys/devices/system/cpu/cpufreq/interactive/boost"
+static int boost_fd = -1;
+static int boost_warned;
+
+static void sysfs_write(char *path, char *s)
+{
+    int len;
+    int fd = open(path, O_WRONLY);
+
+    if (fd < 0) {
+        ALOGE("Error opening %s: %s\n", path, strerror(errno));
+        return;
+    }
+
+    len = write(fd, s, strlen(s));
+    if (len < 0) {
+        ALOGE("Error writing to %s: %s\n", path, strerror(errno));
+    }
+
+    close(fd);
+}
+
+static void fsl_power_init(struct power_module *module)
+{
+    /*
+     * cpufreq interactive governor: timer 20ms, min sample 60ms,
+     * hispeed at cpufreq MAX point at load 40%
+     */
+
+    sysfs_write("/sys/devices/system/cpu/cpufreq/interactive/timer_rate",
+                "20000");
+    sysfs_write("/sys/devices/system/cpu/cpufreq/interactive/min_sample_time",
+                "60000");
+    /*
+     * use cpufreq max freq default, the high speed also can be specified by
+     * wrriten a value to hispeed like below set high speed to 800MHz:
+     * sysfs_write("/sys/devices/system/cpu/cpufreq/interactive/hispeed_freq",
+                "792000");
+     */
+
+    sysfs_write("/sys/devices/system/cpu/cpufreq/interactive/go_hispeed_load",
+                "40");
+    sysfs_write("/sys/devices/system/cpu/cpufreq/interactive/input_boost",
+		"1");
+}
+
+static void fsl_power_set_interactive(struct power_module *module, int on)
+{
+	sysfs_write("/sys/devices/system/cpu/cpufreq/interactive/input_boost",
+			on ? "1" : "0");
+}
+
+static void fsl_power_hint(struct power_module *module, power_hint_t hint,
+                            void *data)
+{
+    char buf[80];
+    int len;
+
+    switch (hint) {
+    case POWER_HINT_VSYNC:
+        break;
+    case POWER_HINT_INTERACTION:
+	sysfs_write(BOOST_PATH, "1");
+	break;
+
+    default:
+            break;
+    }
+}
+
+static struct hw_module_methods_t power_module_methods = {
+    .open = NULL,
+};
+
+struct power_module HAL_MODULE_INFO_SYM = {
+    .common = {
+        .tag = HARDWARE_MODULE_TAG,
+        .module_api_version = POWER_MODULE_API_VERSION_0_2,
+        .hal_api_version = HARDWARE_HAL_API_VERSION,
+        .id = POWER_HARDWARE_MODULE_ID,
+        .name = "FSL i.MX Power HAL",
+        .author = "Freescale Semiconductor, Inc.",
+        .methods = &power_module_methods,
+    },
+
+    .init = fsl_power_init,
+    .setInteractive = fsl_power_set_interactive,
+    .powerHint = fsl_power_hint,
+};
-- 
1.8.0

