From 74ff2a659ea099321180664300e46a7f2177557d Mon Sep 17 00:00:00 2001
From: Richard Liu <r66033@freescale.com>
Date: Fri, 1 Jan 2010 02:56:00 +0800
Subject: [PATCH 013/635] add dither effect support in copybit

---
 libcopybit/copybit.cpp | 36 +++++++++++++++++++++++++++++-------
 1 file changed, 29 insertions(+), 7 deletions(-)

diff --git a/libcopybit/copybit.cpp b/libcopybit/copybit.cpp
index e7e6123..8727a46 100755
--- a/libcopybit/copybit.cpp
+++ b/libcopybit/copybit.cpp
@@ -55,9 +55,9 @@ struct copybit_context_t {
     struct copybit_device_t device;
     C2D_CONTEXT c2dctx;
     int     mCache;
-    uint8_t mAlpha;
-    uint8_t mRotate;    
-    uint8_t mFlags;
+    uint32_t mAlpha;
+    uint32_t mRotate;    
+    uint32_t mFlags;
 };
 
 /**
@@ -160,7 +160,7 @@ static int set_parameter_copybit(
                 ctx->mRotate = 90;
                 break;
             case COPYBIT_TRANSFORM_ROT_180:
-                ctx->mRotate = 90;
+                ctx->mRotate = 180;
                 break;
             case COPYBIT_TRANSFORM_ROT_270:
                 ctx->mRotate = 270;
@@ -174,7 +174,7 @@ static int set_parameter_copybit(
                 ctx->mFlags |= C2D_FLIP_V;
                 break;
             default:
-                LOGE("Invalid value for COPYBIT_ROTATION liuxg");
+                LOGE("Invalid value for COPYBIT_ROTATION");
                 status = -EINVAL;
                 break;
             }
@@ -228,8 +228,13 @@ static C2D_COLORFORMAT get_format(int format) {
     case COPYBIT_FORMAT_RGB_565:       return C2D_COLOR_0565;
     case COPYBIT_FORMAT_RGBA_5551:     return C2D_COLOR_5551_RGBA;
     case COPYBIT_FORMAT_RGBA_4444:     return C2D_COLOR_4444_RGBA;
+    case COPYBIT_FORMAT_RGBX_8888:
+    case COPYBIT_FORMAT_RGB_888:
+    case COPYBIT_FORMAT_BGRA_8888:
+    case COPYBIT_FORMAT_YCbCr_422_SP:
+    case COPYBIT_FORMAT_YCbCr_420_SP:
+    default:                           return C2D_COLOR_DUMMY;   
     }
-    return C2D_COLOR_DUMMY;
 }
 
 /** get  pixelbit from COPYBIT_FORMAT format */
@@ -242,8 +247,10 @@ static int get_pixelbit(int format) {
     case COPYBIT_FORMAT_RGB_565:
     case COPYBIT_FORMAT_RGBA_5551:
     case COPYBIT_FORMAT_RGBA_4444:     return 16;
+    case COPYBIT_FORMAT_YCbCr_422_SP:
+    case COPYBIT_FORMAT_YCbCr_420_SP:
+    default:                           return 8;
     }
-    return 8;
 }
 
 /** Invalid cache of the buffer */
@@ -297,6 +304,20 @@ static void set_rects(struct copybit_context_t *dev,
         srcRect->height = (clip.r - clip.l);
         W = dst->b - dst->t;
         H = dst->r - dst->l;
+    } else if (dev->mRotate == 180) {
+        srcRect->x = (clip.r - dst->r) + src->r;
+        srcRect->y = (dst->b - clip.b) + src->b;
+        srcRect->width = (clip.r - clip.l);
+        srcRect->height = (clip.b - clip.t);
+        W = dst->r - dst->l;
+        H = dst->b - dst->t;
+    } else if (dev->mRotate == 270) {
+        srcRect->x = (dst->b - clip.b) + src->b;
+        srcRect->y = (clip.l - dst->l) + src->r;
+        srcRect->width = (clip.b - clip.t);
+        srcRect->height = (clip.r - clip.l);
+        W = dst->b - dst->t;
+        H = dst->r - dst->l;    
     } else {
         srcRect->x  = (clip.l - dst->l) + src->l;
         srcRect->y  = (clip.t - dst->t) + src->t;
@@ -378,6 +399,7 @@ static int stretch_copybit(
         c2dSetSrcRotate(ctx->c2dctx, ctx->mRotate);
         c2dSetBlendMode(ctx->c2dctx, C2D_ALPHA_BLEND_SRCOVER);
         c2dSetGlobalAlpha(ctx->c2dctx, ctx->mAlpha);  
+        c2dSetDither(ctx->c2dctx, (ctx->mFlags & C2D_DITHER) > 0 ? 1:0); 
 
         while ((status == 0) && region->next(region, &clip)) {          
                 intersect(&clip, &bounds, &clip);
-- 
1.8.0

