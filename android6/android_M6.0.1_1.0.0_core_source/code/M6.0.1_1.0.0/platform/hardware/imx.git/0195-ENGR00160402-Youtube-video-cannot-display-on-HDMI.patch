From b825dabcea56ef941ea2d667b987438452ef3fbe Mon Sep 17 00:00:00 2001
From: b07117 <b07117@freescale.com>
Date: Thu, 20 Oct 2011 15:39:36 +0800
Subject: [PATCH 195/635] ENGR00160402, Youtube video cannot display on HDMI

re-map video render region to fix it in hw composer

Signed-off-by: xianzhong <b07117@freescale.com>
---
 mx5x/hwcomposer/blit_ipu.cpp | 54 +++++++++++++++++++++++++++++---------------
 1 file changed, 36 insertions(+), 18 deletions(-)

diff --git a/mx5x/hwcomposer/blit_ipu.cpp b/mx5x/hwcomposer/blit_ipu.cpp
index 4082874..803b3b6 100755
--- a/mx5x/hwcomposer/blit_ipu.cpp
+++ b/mx5x/hwcomposer/blit_ipu.cpp
@@ -153,29 +153,45 @@ HWCOMPOSER_LOG_RUNTIME("^^^^^^^^handle->format= RGBP");
 		mIPUOutputParam.output_win.win_w = out_buf->width;
 		mIPUOutputParam.output_win.win_h = out_buf->height;
     }
-    else if(out_buf->width != m_def_disp_w || out_buf->height!= m_def_disp_h){
+    else if((out_buf->usage & GRALLOC_USAGE_HWC_OVERLAY_DISP1) && (out_buf->width != m_def_disp_w || out_buf->height!= m_def_disp_h)){
+            int def_w,def_h;
             int dst_w = out_buf->width;
             int dst_h = out_buf->height;
-	    if(dst_w >= dst_h*m_def_disp_w/m_def_disp_h){
-                dst_w = dst_h*m_def_disp_w/m_def_disp_h;
-            }
-            else{
-                dst_h = dst_w*m_def_disp_h/m_def_disp_w;
-            }
 
             mIPUOutputParam.width = out_buf->width;//disp_frame->right - disp_frame->left;
-	    mIPUOutputParam.height = out_buf->height;//disp_frame->bottom - disp_frame->top;
-            mIPUOutputParam.width = out_buf->width;//disp_frame->right - disp_frame->left;
-	    mIPUOutputParam.height = out_buf->height;//disp_frame->bottom - disp_frame->top;
-	    mIPUOutputParam.output_win.pos.x = (disp_frame->left >> 3) << 3;
-	    mIPUOutputParam.output_win.pos.y = (disp_frame->top >> 3) << 3;
-            mIPUOutputParam.output_win.win_w = ((disp_frame->right - disp_frame->left) >> 3) << 3;
-	    mIPUOutputParam.output_win.win_h = ((disp_frame->bottom - disp_frame->top) >> 3) << 3;
+            mIPUOutputParam.height = out_buf->height;//disp_frame->bottom - disp_frame->top;
+
+            if(layer->transform == 0 || layer->transform == 3)
+            {
+                 def_w = m_def_disp_w;
+                 def_h = m_def_disp_h;
 
-	    mIPUOutputParam.output_win.pos.x = mIPUOutputParam.output_win.pos.x * dst_w / m_def_disp_w;
-	    mIPUOutputParam.output_win.pos.y = mIPUOutputParam.output_win.pos.y * dst_h / m_def_disp_h;
-	    mIPUOutputParam.output_win.win_w = mIPUOutputParam.output_win.win_w * dst_w / m_def_disp_w;
-	    mIPUOutputParam.output_win.win_h = mIPUOutputParam.output_win.win_h * dst_h / m_def_disp_h;
+                 mIPUOutputParam.output_win.pos.x = (disp_frame->left >> 3) << 3;
+                 mIPUOutputParam.output_win.pos.y = (disp_frame->top >> 3) << 3;
+                 mIPUOutputParam.output_win.win_w = ((disp_frame->right - disp_frame->left) >> 3) << 3;
+                 mIPUOutputParam.output_win.win_h = ((disp_frame->bottom - disp_frame->top) >> 3) << 3;
+            }
+            else
+            {
+                 def_w = m_def_disp_h;
+                 def_h = m_def_disp_w;
+
+                 mIPUOutputParam.output_win.pos.y = (disp_frame->left >> 3) << 3;
+                 mIPUOutputParam.output_win.pos.x = (disp_frame->top >> 3) << 3;
+                 mIPUOutputParam.output_win.win_h = ((disp_frame->right - disp_frame->left) >> 3) << 3;
+                 mIPUOutputParam.output_win.win_w = ((disp_frame->bottom - disp_frame->top) >> 3) << 3;
+             }
+             if(dst_w >= dst_h*def_w/def_h){
+                 dst_w = dst_h*def_w/def_h;
+             }
+             else{
+                 dst_h = dst_w*def_h/def_w;
+             }
+
+            mIPUOutputParam.output_win.pos.x = mIPUOutputParam.output_win.pos.x * dst_w / def_w;
+            mIPUOutputParam.output_win.pos.y = mIPUOutputParam.output_win.pos.y * dst_h / def_h;
+            mIPUOutputParam.output_win.win_w = mIPUOutputParam.output_win.win_w * dst_w / def_w;
+            mIPUOutputParam.output_win.win_h = mIPUOutputParam.output_win.win_h * dst_h / def_h;
             mIPUOutputParam.output_win.pos.x += (out_buf->width - dst_w) >> 1;
             mIPUOutputParam.output_win.pos.y += (out_buf->height - dst_h) >> 1;
 
@@ -195,6 +211,8 @@ HWCOMPOSER_LOG_RUNTIME("^^^^^^^^handle->format= RGBP");
 
 //HWCOMPOSER_LOG_ERR("^^^^^^^^out^^paddr=%x^^^^^^left=%d, top=%d, right=%d, bottom=%d", out_buf->phy_addr, disp_frame->left, disp_frame->top, disp_frame->right, disp_frame->bottom);
     mIPUOutputParam.rot = layer->transform;
+    if(out_buf->usage & GRALLOC_USAGE_HWC_OVERLAY_DISP1) mIPUOutputParam.rot = 0;
+
     mIPUOutputParam.user_def_paddr[0] = out_buf->phy_addr;
 HWCOMPOSER_LOG_RUNTIME("------mxc_ipu_lib_task_init-----in blit_ipu::blit()------\n");
     if(out_buf->usage & GRALLOC_USAGE_DISPLAY_MASK)
-- 
1.8.0

