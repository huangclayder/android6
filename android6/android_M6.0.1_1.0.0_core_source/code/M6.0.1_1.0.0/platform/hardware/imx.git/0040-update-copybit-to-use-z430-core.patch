From a249b98aa6025a98b413b547873f5e3671f5291d Mon Sep 17 00:00:00 2001
From: Richard Liu <r66033@freescale.com>
Date: Wed, 12 May 2010 06:51:05 +0800
Subject: [PATCH 040/635] update copybit to use z430 core

---
 libcopybit/Android.mk  |  2 +-
 libcopybit/copybit.cpp | 21 +++++++++++++++++++--
 2 files changed, 20 insertions(+), 3 deletions(-)

diff --git a/libcopybit/Android.mk b/libcopybit/Android.mk
index c7366a6..45bbbe2 100755
--- a/libcopybit/Android.mk
+++ b/libcopybit/Android.mk
@@ -25,7 +25,7 @@ LOCAL_MODULE_PATH := $(TARGET_OUT_SHARED_LIBRARIES)/hw
 LOCAL_C_INCLUDES += hardware/mx5x/libgralloc
 LOCAL_C_INCLUDES += kernel_imx/include
 LOCAL_C_INCLUDES += external/fsl-linux-amd-gpu/driver/include/private/C2D
-LOCAL_SHARED_LIBRARIES := liblog libcutils libc2d_z160
+LOCAL_SHARED_LIBRARIES := liblog libcutils libc2d_z430
 
 LOCAL_SRC_FILES := 	\
 	copybit.cpp
diff --git a/libcopybit/copybit.cpp b/libcopybit/copybit.cpp
index 755701a..1c15305 100755
--- a/libcopybit/copybit.cpp
+++ b/libcopybit/copybit.cpp
@@ -92,6 +92,19 @@ struct copybit_module_t HAL_MODULE_INFO_SYM = {
 };
 
 /*****************************************************************************/
+/** check pixel alpha */
+static bool hasAlpha(int format) {
+    switch (format) {
+    case COPYBIT_FORMAT_RGBA_8888:
+    case COPYBIT_FORMAT_BGRA_8888:
+    case COPYBIT_FORMAT_RGBA_5551:
+    case COPYBIT_FORMAT_RGBA_4444:
+        return true;
+    default:
+        return false;
+    }
+}
+
 /** min of int a, b */
 static inline int min(int a, int b) {
     return (a<b) ? a : b;
@@ -392,9 +405,13 @@ static int stretch_copybit(
 
         c2dSetSrcSurface(ctx->c2dctx, srcSurface);
         c2dSetDstSurface(ctx->c2dctx, dstSurface); 
-
         c2dSetSrcRotate(ctx->c2dctx, ctx->mRotate);
-        c2dSetBlendMode(ctx->c2dctx, C2D_ALPHA_BLEND_SRCOVER);
+
+        if (hasAlpha(src->format) || hasAlpha(dst->format))
+                c2dSetBlendMode(ctx->c2dctx, C2D_ALPHA_BLEND_SRCOVER);
+        else
+                c2dSetBlendMode(ctx->c2dctx, C2D_ALPHA_BLEND_NONE);
+                   
         c2dSetGlobalAlpha(ctx->c2dctx, ctx->mAlpha);  
         c2dSetDither(ctx->c2dctx, (ctx->mFlags & C2D_DITHER) > 0 ? 1:0); 
 
-- 
1.8.0

