From 58121443baa1a2b0f27e73b14df04a932eccbc6e Mon Sep 17 00:00:00 2001
From: Shengjiu Wang <shengjiu.wang@freescale.com>
Date: Thu, 20 Nov 2014 18:25:21 +0800
Subject: [PATCH 546/635] MA-5885: audio hal need to support PCM_MONOTONIC

In android 5.0, the multimedia framework may want to gettimestamp
from the audio hal, which require the hal support PCM_MONOTONIC.

Signed-off-by: Shengjiu Wang <shengjiu.wang@freescale.com>
---
 alsa/tinyalsa_hal.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/alsa/tinyalsa_hal.c b/alsa/tinyalsa_hal.c
index f41cc69..949680b 100644
--- a/alsa/tinyalsa_hal.c
+++ b/alsa/tinyalsa_hal.c
@@ -524,7 +524,7 @@ static int start_output_stream_primary(struct imx_stream_out *out)
 
     pcm_device = out->device & (AUDIO_DEVICE_OUT_ALL & ~AUDIO_DEVICE_OUT_AUX_DIGITAL);
     if (pcm_device && (adev->active_output[OUTPUT_ESAI] == NULL || adev->active_output[OUTPUT_ESAI]->standby)) {
-        out->write_flags[PCM_NORMAL]            = PCM_OUT | PCM_MMAP;
+        out->write_flags[PCM_NORMAL]            = PCM_OUT | PCM_MMAP | PCM_MONOTONIC;
         out->write_threshold[PCM_NORMAL]        = PLAYBACK_LONG_PERIOD_COUNT * LONG_PERIOD_SIZE;
         out->config[PCM_NORMAL] = pcm_config_mm_out;
 
@@ -537,7 +537,7 @@ static int start_output_stream_primary(struct imx_stream_out *out)
 
     pcm_device = out->device & AUDIO_DEVICE_OUT_AUX_DIGITAL;
     if(pcm_device && (adev->active_output[OUTPUT_HDMI] == NULL || adev->active_output[OUTPUT_HDMI]->standby)) {
-        out->write_flags[PCM_HDMI]            = PCM_OUT;
+        out->write_flags[PCM_HDMI]            = PCM_OUT | PCM_MONOTONIC;
         out->write_threshold[PCM_HDMI]        = HDMI_PERIOD_SIZE * PLAYBACK_HDMI_PERIOD_COUNT;
         out->config[PCM_HDMI] = pcm_config_mm_out;
         card = get_card_for_device(adev, pcm_device, PCM_OUT);
@@ -596,7 +596,7 @@ static int start_output_stream_hdmi(struct imx_stream_out *out)
     ALOGW("card %d, port %d device 0x%x", card, port, out->device);
     ALOGW("rate %d, channel %d period_size 0x%x", out->config[PCM_HDMI].rate, out->config[PCM_HDMI].channels, out->config[PCM_HDMI].period_size);
 
-    out->pcm[PCM_HDMI] = pcm_open(card, port, PCM_OUT, &out->config[PCM_HDMI]);
+    out->pcm[PCM_HDMI] = pcm_open(card, port, PCM_OUT | PCM_MONOTONIC, &out->config[PCM_HDMI]);
 
     if (out->pcm[PCM_HDMI] && !pcm_is_ready(out->pcm[PCM_HDMI])) {
         ALOGE("cannot open pcm_out driver: %s", pcm_get_error(out->pcm[PCM_HDMI]));
@@ -627,7 +627,7 @@ static int start_output_stream_esai(struct imx_stream_out *out)
     ALOGW("card %d, port %d device 0x%x", card, port, out->device);
     ALOGW("rate %d, channel %d period_size 0x%x", out->config[PCM_ESAI].rate, out->config[PCM_ESAI].channels, out->config[PCM_ESAI].period_size);
 
-    out->pcm[PCM_ESAI] = pcm_open(card, port, PCM_OUT, &out->config[PCM_ESAI]);
+    out->pcm[PCM_ESAI] = pcm_open(card, port, PCM_OUT | PCM_MONOTONIC, &out->config[PCM_ESAI]);
 
     if (out->pcm[PCM_ESAI] && !pcm_is_ready(out->pcm[PCM_ESAI])) {
         ALOGE("cannot open pcm_out driver: %s", pcm_get_error(out->pcm[PCM_ESAI]));
-- 
1.8.0

