From 9c4950f7061bc87a33f873e5d777fad94e8f6589 Mon Sep 17 00:00:00 2001
From: Fang Hui <b31070@freescale.com>
Date: Mon, 1 Dec 2014 15:04:41 +0800
Subject: [PATCH 553/635] MA-5900 [Android_MX6Q_SD]Camera: VGA picture shows
 all grips for

Logitech C920 USB Camera. 100%

For logi C920, when shift from 800x600 to 640x480, the first frame is damaged.
So omit first frame in this case.

Signed-off-by: Fang Hui <b31070@freescale.com>
---
 mx6/libcamera2/CameraModule.cpp |  6 ++++--
 mx6/libcamera2/UvcDevice.cpp    | 29 +++++++++++++++++++++++++++--
 mx6/libcamera2/UvcDevice.h      |  1 +
 3 files changed, 32 insertions(+), 4 deletions(-)

diff --git a/mx6/libcamera2/CameraModule.cpp b/mx6/libcamera2/CameraModule.cpp
index bc4cc6d..610d3ce 100755
--- a/mx6/libcamera2/CameraModule.cpp
+++ b/mx6/libcamera2/CameraModule.cpp
@@ -444,9 +444,11 @@ int GetDevPath(const char  *pCameraName,
                     if(strstr((const char*)v4l2_cap.driver, pCameraName)) {
                        if (pathLen > strlen(dev_node)) {
                             strcpy(pCameraDevPath, dev_node);
-                            ALOGI("Get sensor %s's dev path %s",
+                            ALOGI("Get sensor %s's dev path %s, card %s, driver %s",
                                   pCameraName,
-                                  pCameraDevPath);
+                                  pCameraDevPath,
+                                  (const char*)v4l2_cap.card,
+                                  (const char*)v4l2_cap.driver);
                             retCode = 0;
                         }
                         close(fd);
diff --git a/mx6/libcamera2/UvcDevice.cpp b/mx6/libcamera2/UvcDevice.cpp
index 5a3b235..2c77c2a 100644
--- a/mx6/libcamera2/UvcDevice.cpp
+++ b/mx6/libcamera2/UvcDevice.cpp
@@ -19,6 +19,7 @@
 
 UvcDevice::UvcDevice()
 {
+    mbOmitFirstFrame = false;
 }
 
 UvcDevice::~UvcDevice()
@@ -161,14 +162,24 @@ void UvcDevice::setPicturePixelFormat()
     mPicturePixelFormat = HAL_PIXEL_FORMAT_YCbCr_420_SP;
 }
 
+#define LOGI_C920 "HD Pro Webcam C920"
+
 status_t UvcDevice::initSensorInfo(const CameraInfo& info)
 {
+    struct v4l2_capability v4l2_cap;
+
     if (mCameraHandle < 0) {
         FLOGE("OvDevice: initParameters sensor has not been opened");
         return BAD_VALUE;
     }
     pDevPath = info.devPath;
 
+    int retVal = 0;
+    retVal = ioctl(mCameraHandle, VIDIOC_QUERYCAP, &v4l2_cap);
+    if((retVal == 0) && strstr((const char*)v4l2_cap.card, LOGI_C920)) {
+        mbOmitFirstFrame = true;
+    }
+
     // first read sensor format.
     int ret = 0, index = 0;
     int sensorFormats[MAX_SENSOR_FORMAT];
@@ -221,7 +232,7 @@ status_t UvcDevice::initSensorInfo(const CameraInfo& info)
         }
 
         if (ret == 0) {
-            FLOG_RUNTIME("enum frame size w:%d, h:%d",
+            FLOGI("enum frame size w:%d, h:%d",
                        vid_frmsize.discrete.width, vid_frmsize.discrete.height);
             memset(&vid_frmval, 0, sizeof(struct v4l2_frmivalenum));
             vid_frmval.index        = 0;
@@ -231,7 +242,7 @@ status_t UvcDevice::initSensorInfo(const CameraInfo& info)
 
             ret = ioctl(mCameraHandle, VIDIOC_ENUM_FRAMEINTERVALS, &vid_frmval);
             if (ret == 0) {
-                FLOG_RUNTIME("vid_frmval denominator:%d, numeraton:%d",
+                FLOGI("vid_frmval denominator:%d, numeraton:%d",
                              vid_frmval.discrete.denominator,
                              vid_frmval.discrete.numerator);
                 mPictureResolutions[pictureCnt++] = vid_frmsize.discrete.width;
@@ -365,7 +376,10 @@ CameraFrame * UvcDevice::acquireCameraFrame()
     struct timeval tv;
     struct v4l2_buffer cfilledbuffer;
     CameraFrame *camBuf = NULL;
+    int capCount = 0;
 
+cap:
+    capCount++;
     FD_ZERO(&rfds);
     FD_SET(mCameraHandle, &rfds);
     tv.tv_sec = MAX_DEQUEUE_WAIT_TIME;
@@ -389,6 +403,17 @@ CameraFrame * UvcDevice::acquireCameraFrame()
         }
         mQueued --;
 
+        //for logi C920, when shift from 800x600 to 640x480, the first frame is damaged.
+        if(mImageCapture && mbOmitFirstFrame &&
+            (mVideoInfo->width == 640) && (mVideoInfo->height == 480)) {
+            ioctl(mCameraHandle, VIDIOC_QBUF, &cfilledbuffer);
+            mQueued++;
+            if(capCount < 2) {
+                ALOGI("acquireCameraFrame, omit first frame");
+                goto cap;
+            }
+        }
+
         int index = cfilledbuffer.index;
         fAssert(index >= 0 && index < mBufferCount);
         camBuf = mDeviceBufs[index];
diff --git a/mx6/libcamera2/UvcDevice.h b/mx6/libcamera2/UvcDevice.h
index 4d68de7..5bfdd7c 100755
--- a/mx6/libcamera2/UvcDevice.h
+++ b/mx6/libcamera2/UvcDevice.h
@@ -65,6 +65,7 @@ protected:
     bool mPictureNeedCsc;
     int mSensorFormats[MAX_SENSOR_FORMAT];
     CameraFrame mUvcBuffers[MAX_PREVIEW_BUFFER];
+    bool mbOmitFirstFrame;
 };
 
 #endif // ifndef _UVC_DEVICE_H
-- 
1.8.0

