From 9272ff6a2537916d22c9321543e847b2f71affee Mon Sep 17 00:00:00 2001
From: Richard Liu <r66033@freescale.com>
Date: Thu, 25 Jul 2013 13:02:37 +0800
Subject: [PATCH 07/43] ENGR00272567 Add BGRA8888 support in libagl and
 framework

Add BGRA8888 EGL config support in libagl and remove
32bit RGBA8888 hard code in framework

Signed-off-by: Richard Liu <r66033@freescale.com>
---
 opengl/libagl/egl.cpp                              | 29 +++++++++++++++++++++-
 .../surfaceflinger/DisplayHardware/HWComposer.cpp  |  3 ++-
 2 files changed, 30 insertions(+), 2 deletions(-)

diff --git a/opengl/libagl/egl.cpp b/opengl/libagl/egl.cpp
index b37baca..59e2bcf 100644
--- a/opengl/libagl/egl.cpp
+++ b/opengl/libagl/egl.cpp
@@ -1046,7 +1046,7 @@ static config_pair_t const config_3_attribute_list[] = {
         { EGL_SURFACE_TYPE,     EGL_WINDOW_BIT|EGL_PBUFFER_BIT|EGL_PIXMAP_BIT },
 };
 
-// 8888 configs
+// RGBA8888 configs
 static config_pair_t const config_4_attribute_list[] = {
         { EGL_BUFFER_SIZE,     32 },
         { EGL_ALPHA_SIZE,       8 },
@@ -1096,6 +1096,31 @@ static config_pair_t const config_7_attribute_list[] = {
         { EGL_SURFACE_TYPE,     EGL_WINDOW_BIT|EGL_PBUFFER_BIT|EGL_PIXMAP_BIT },
 };
 
+// BGRA8888 configs
+static config_pair_t const config_8_attribute_list[] = {
+        { EGL_BUFFER_SIZE,     32 },
+        { EGL_ALPHA_SIZE,       8 },
+        { EGL_RED_SIZE,         8 },
+        { EGL_GREEN_SIZE,       8 },
+        { EGL_BLUE_SIZE,        8 },
+        { EGL_DEPTH_SIZE,       0 },
+        { EGL_CONFIG_ID,        2 },
+        { EGL_NATIVE_VISUAL_ID, GGL_PIXEL_FORMAT_BGRA_8888 },
+        { EGL_SURFACE_TYPE,     EGL_WINDOW_BIT|EGL_PBUFFER_BIT|EGL_PIXMAP_BIT },
+};
+
+static config_pair_t const config_9_attribute_list[] = {
+        { EGL_BUFFER_SIZE,     32 },
+        { EGL_ALPHA_SIZE,       8 },
+        { EGL_RED_SIZE,         8 },
+        { EGL_GREEN_SIZE,       8 },
+        { EGL_BLUE_SIZE,        8 },
+        { EGL_DEPTH_SIZE,      16 },
+        { EGL_CONFIG_ID,        3 },
+        { EGL_NATIVE_VISUAL_ID, GGL_PIXEL_FORMAT_BGRA_8888 },
+        { EGL_SURFACE_TYPE,     EGL_WINDOW_BIT|EGL_PBUFFER_BIT|EGL_PIXMAP_BIT },
+};
+
 static configs_t const gConfigs[] = {
         { config_0_attribute_list, NELEM(config_0_attribute_list) },
         { config_1_attribute_list, NELEM(config_1_attribute_list) },
@@ -1105,6 +1130,8 @@ static configs_t const gConfigs[] = {
         { config_5_attribute_list, NELEM(config_5_attribute_list) },
         { config_6_attribute_list, NELEM(config_6_attribute_list) },
         { config_7_attribute_list, NELEM(config_7_attribute_list) },
+        { config_8_attribute_list, NELEM(config_8_attribute_list) },
+        { config_9_attribute_list, NELEM(config_9_attribute_list) },
 };
 
 static config_management_t const gConfigManagement[] = {
diff --git a/services/surfaceflinger/DisplayHardware/HWComposer.cpp b/services/surfaceflinger/DisplayHardware/HWComposer.cpp
index 280cb7a..353007f 100644
--- a/services/surfaceflinger/DisplayHardware/HWComposer.cpp
+++ b/services/surfaceflinger/DisplayHardware/HWComposer.cpp
@@ -427,7 +427,8 @@ status_t HWComposer::queryDisplayProperties(int disp) {
 
     // FIXME: what should we set the format to?
     if ((mDisplayData[disp].format != HAL_PIXEL_FORMAT_RGB_565) &&
-        (mDisplayData[disp].format != HAL_PIXEL_FORMAT_RGBA_8888))
+        (mDisplayData[disp].format != HAL_PIXEL_FORMAT_RGBA_8888) &&
+        (mDisplayData[disp].format != HAL_PIXEL_FORMAT_BGRA_8888))
         mDisplayData[disp].format = HAL_PIXEL_FORMAT_RGBA_8888;
 
     mDisplayData[disp].connected = true;
-- 
1.8.0

