From 316da81123c416138db807ec798c8e7fc6cac5cb Mon Sep 17 00:00:00 2001
From: Xianzhong <b07117@freescale.com>
Date: Wed, 31 Jul 2013 00:38:06 +0800
Subject: [PATCH 08/43] ENGR00273103 fixed i.MX6SL UI flicker with 2D
 acceleration

3D draw and read surfaces should be bound in eglPostBufferVIV,
if it's bound to a context, update the buffer for 3D EGL context

Signed-off-by: Xianzhong <b07117@freescale.com>
---
 opengl/libagl/egl.cpp | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/opengl/libagl/egl.cpp b/opengl/libagl/egl.cpp
index 59e2bcf..683da5d 100644
--- a/opengl/libagl/egl.cpp
+++ b/opengl/libagl/egl.cpp
@@ -620,6 +620,9 @@ EGLClientBuffer egl_window_surface_v2_t::getRenderBuffer()
         if (!strncmp("surfaceflinger", buf, 14)) {
             isCompositor = true;
         }
+        else {
+            isCompositor = false;
+        }
     }
 
     if (isCompositor) {
@@ -2298,6 +2301,8 @@ EGLClientBuffer eglGetRenderBufferVIV(EGLClientBuffer handle)
 
 EGLBoolean eglPostBufferVIV(EGLClientBuffer buffer)
 {
+    EGLBoolean result = EGL_TRUE;
+
     EGLContext ctx = (EGLContext)getGlThreadSpecific();
     if (ctx == EGL_NO_CONTEXT) return EGL_FALSE;
     egl_context_t* c = egl_context_t::context(ctx);
@@ -2311,5 +2316,13 @@ EGLBoolean eglPostBufferVIV(EGLClientBuffer buffer)
         return EGL_FALSE;
     }
 
-    return d->swapBuffers();
+    result = d->swapBuffers();
+
+    // if it's bound to a context, update the buffer for 3D EGL context
+    if (d->ctx != EGL_NO_CONTEXT) {
+        d->bindDrawSurface((ogles_context_t*)d->ctx);
+        d->bindReadSurface((ogles_context_t*)d->ctx);
+    }
+
+    return result;
 }
-- 
1.8.0

