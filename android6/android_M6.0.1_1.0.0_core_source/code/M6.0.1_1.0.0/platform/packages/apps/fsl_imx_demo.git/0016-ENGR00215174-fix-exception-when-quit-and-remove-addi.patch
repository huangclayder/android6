From b00d498b244253dc036377fb929f9fa721ae610b Mon Sep 17 00:00:00 2001
From: Xiaowen Liu <b37945@freescale.com>
Date: Thu, 11 Jul 2013 11:11:18 +0800
Subject: [PATCH 016/115] ENGR00215174 fix exception when quit and remove
 additional code.

fix exception when quit and remove additional log and code.

Signed-off-by: Xiaowen Liu <b37945@freescale.com>
---
 .../src/com/freescale/wfdsink/WfdSinkActivity.java | 73 ++++------------------
 1 file changed, 13 insertions(+), 60 deletions(-)

diff --git a/WfdSink/src/com/freescale/wfdsink/WfdSinkActivity.java b/WfdSink/src/com/freescale/wfdsink/WfdSinkActivity.java
index 69b77e0..4f86c4c 100644
--- a/WfdSink/src/com/freescale/wfdsink/WfdSinkActivity.java
+++ b/WfdSink/src/com/freescale/wfdsink/WfdSinkActivity.java
@@ -90,7 +90,6 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
     private boolean mConnected = false;
 
     private ImageButton mImageButton;
-    private ArrayList<WifiP2pDevice> mSourceDevices = new ArrayList<WifiP2pDevice>();
     private ArrayList<String> mSourcePeers = new ArrayList<String>();
     private GridView mGridView;
     private SurfaceView mSurfaceView;
@@ -115,24 +114,14 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
                     devices[i] = (WifiP2pDevice)devs[i];
                 }
 
-                boolean refresh = false;
-                mSourceDevices.clear();
                 mSourcePeers.clear();
                 for (WifiP2pDevice device : devices) {
-                    //if (!mSourcePeers.contains(device.deviceAddress)) {
-                        mSourceDevices.add(device);
-                        mSourcePeers.add(device.deviceAddress);
-                        //mSourcePeers.add(device.deviceName);
-                        refresh = true;
-                    //}
+                    mSourcePeers.add(device.deviceName);
                 }
 
-                if (refresh) {
-                    Log.w(TAG, "----refresh----");
-                    mPictureAdapter.setSourcePeers(mSourcePeers);
-                    mHandler.sendEmptyMessage(UPDATE_GRID_VIEW);
-                    mGridView.postInvalidate();
-                }
+                mPictureAdapter.setSourcePeers(mSourcePeers);
+                mHandler.sendEmptyMessage(UPDATE_GRID_VIEW);
+                mGridView.postInvalidate();
             }
             if (WfdSink.WFD_DEVICE_CONNECTED_ACTION.equals(action)) {
 		Message msg = mHandler.obtainMessage(DO_CONNECTED);
@@ -167,7 +156,6 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
             @Override
             public void onClick(View arg0) {
                 switch(arg0.getId()) {
-                    //case R.id.sink_image:
                     case R.id.sink_player:
                         startSearch();
                         break;
@@ -181,9 +169,8 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
             public boolean onTouch(View v, MotionEvent mv) {
                 switch (v.getId()) {
   		    case R.id.gridview:
-		    Log.i(TAG, "--------onClick------");
+		    Log.i(TAG, "onClick");
 		    if (!mStarted && !mConnected) {
-		    //mButtonShow = true;
 		    mImageButton.setVisibility(View.VISIBLE);
 		    mTimer.schedule(new TimerTask() {
 			public void run () {
@@ -250,17 +237,17 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
             return;
         }
 
-        Log.i(TAG, "-------------surfaceChanged. w=" + w + ". h=" + h);
+        Log.i(TAG, "surfaceChanged. w=" + w + ". h=" + h);
         Message msg = mHandler.obtainMessage(UPDATE_SURFACE, holder);
         mHandler.sendMessage(msg);
     }
 
     public void surfaceCreated(SurfaceHolder holder) {
-        Log.i(TAG, "-------------surfaceCreated.");
+        Log.i(TAG, "surfaceCreated.");
     }
 
     public void surfaceDestroyed(SurfaceHolder holder) {
-        Log.i(TAG, "-------------surfaceDestroyed.");
+        Log.i(TAG, "surfaceDestroyed.");
         mSurfaceHolder = null;
     }
 
@@ -288,7 +275,6 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
         }
         mWfdSink.stopRtsp();
 
-	mSourceDevices.clear();
 	mSourcePeers.clear();
 	mPictureAdapter.setSourcePeers(mSourcePeers);
 	mGridView.setAdapter(mPictureAdapter);
@@ -301,7 +287,6 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
     }
 
     private void handleConnected(boolean connected) {
-	//mImageButton.setVisibility(View.VISIBLE);
 	mConnected = connected;
         if (mConnected) {
             mSurfaceView.setVisibility(View.VISIBLE);
@@ -315,7 +300,7 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
 
     private void startSearch() {
         mWfdSink.startSearch();
-        mWfdSink.setDeviceName("Android_me");
+        //mWfdSink.setDeviceName("Android_me");
     }
 
     private void stopSearch() {
@@ -339,38 +324,11 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
         Message msg = mHandler.obtainMessage(STOP_PLAY);
         mHandler.sendMessage(msg);
     }
-/*
-    public OnItemClickListener mOnItemClickListener = new OnItemClickListener() {
-        @Override
-        public void onItemClick(AdapterView<?> parent, View v, int position, long id) {
-            if (mStarted) {
-                Log.w(TAG, "sink already started");
-                return;
-            }
-
-            mSurfaceView.setVisibility(View.INVISIBLE);
-            mGridView.setVisibility(View.VISIBLE);
-            String source = (String)mPictureAdapter.getItem(position);
-            if (!mConnected) {
-                connectPeer(source);
-                //mImageButton.setVisibility(View.VISIBLE);
-                //mConnected = true;
-            }
-            else {
-                disconnectPeer();
-                mImageButton.setVisibility(View.GONE);
-                mConnected = false;
-            }
-        }
-    };
-*/
 
     public boolean onTouchEvent(MotionEvent event) {
-        //if (super.onTouchEvent(event)) return true;
         super.onTouchEvent(event);
-        Log.w(TAG, "----onTouchEvent-----");
+        Log.w(TAG, "onTouchEvent");
         if (!mStarted && !mConnected) {
-            //mButtonShow = true;
             mImageButton.setVisibility(View.VISIBLE);
             mTimer.schedule(new TimerTask() {
                 public void run () {
@@ -384,12 +342,10 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
     public void onStart() {
         super.onStart();
         mGridView.setAdapter(mPictureAdapter);
-        //mGridView.setOnItemClickListener(mOnItemClickListener);
     }
 
     public void onStop() {
         super.onStop();
-        //unregisterReceiver(mWifiP2pReceiver);
     }
 
     public void onDestroy() {
@@ -399,7 +355,7 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
         mTimer.cancel();
 
         if (mStarted) {
-            stopPlayer();
+            handleStopPlay();
         }
 
         if (mConnected) {
@@ -426,7 +382,7 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
         }
 
         public void setSourcePeers(List<String> sourcePeers) {
-            Log.w(TAG, "-------setSourceIp---");
+            Log.w(TAG, "setSourceIp");
             mPeers = sourcePeers;
         }
 
@@ -442,7 +398,7 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
 
         @Override
         public Object getItem(int position) {
-            Log.w(TAG, "------getItem----:" + mPeers.get(position));
+            Log.w(TAG, "getItem:" + mPeers.get(position));
             return mPeers.get(position);
         }
 
@@ -466,8 +422,6 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
             }
 
             viewHolder.mTitle.setText((String)getItem(position));
-            //Bitmap bmp = getThumbnails(position);
-            //viewHolder.mImage.setImageBitmap(bmp);
             viewHolder.mImage.setImageResource(R.drawable.ic_hdmi);
 
             LayoutParams para;
@@ -475,7 +429,6 @@ public class WfdSinkActivity extends Activity implements SurfaceHolder.Callback
             para.width = mDisplayMetrics.widthPixels/4;
             para.height = mDisplayMetrics.heightPixels/3;
             viewHolder.mImage.setLayoutParams(para);
-            Log.w(TAG, "--------getView---------");
             return convertView;
         }
     }
-- 
1.8.0

