From c35387ee1fbd60d3f2dc189dc056056b3aa4e6e3 Mon Sep 17 00:00:00 2001
From: Xu Mao <B34688@freescale.com>
Date: Mon, 26 Aug 2013 16:24:58 +0800
Subject: [PATCH 020/115] ENGR00275869 Audio output speed for FFx2 is same
 with that for FFx1.5

        judge setPlaySpeed success or fail by returned speed
        clear subtitle when getting null text

Signed-off-by: Xu Mao <B34688@freescale.com>
---
 .../com/freescale/cactusplayer/VideoPlayer.java    | 72 ++++++++++++++--------
 1 file changed, 47 insertions(+), 25 deletions(-)

diff --git a/CactusPlayer/src/com/freescale/cactusplayer/VideoPlayer.java b/CactusPlayer/src/com/freescale/cactusplayer/VideoPlayer.java
index b7f6f3a..d865cb1 100755
--- a/CactusPlayer/src/com/freescale/cactusplayer/VideoPlayer.java
+++ b/CactusPlayer/src/com/freescale/cactusplayer/VideoPlayer.java
@@ -586,8 +586,10 @@ public class VideoPlayer extends Activity implements SeekBar.OnSeekBarChangeList
             stop();
             if(mLoopFile){
                 play();
-                if(mCurSubtitleTrack >= 0)
+                if(mCurSubtitleTrack >= 0){
+                    Log.d(TAG,"onCompletion: select subtitle " + mCurSubtitleTrack);
                     mMediaPlayer.selectTrack(mCurSubtitleTrack);
+                }
                 if(mCurAudioTrack >= 0){
                     mMediaPlayer.selectTrack(mCurAudioTrack);
                     Log.d(TAG,"onCompletion: select audio " + mCurAudioTrack);
@@ -615,8 +617,14 @@ public class VideoPlayer extends Activity implements SeekBar.OnSeekBarChangeList
     private MediaPlayer.OnTimedTextListener mTimedTextListener =
         new MediaPlayer.OnTimedTextListener() {
         public void onTimedText(MediaPlayer mp, TimedText text){
-            if(text != null && mPlaySpeed == 1){
-                mSubtitleTextView.setText(text.getText(), 0);
+            //Log.d(TAG,"onTimeText");
+            if(mPlaySpeed == 1){
+                if(text != null){
+                    //Log.d(TAG,"text is " + text.getText());
+                    mSubtitleTextView.setText(text.getText(), 0);
+                }
+                else
+                    mSubtitleTextView.setText(null, 0);
             }
         }
 
@@ -632,6 +640,8 @@ public class VideoPlayer extends Activity implements SeekBar.OnSeekBarChangeList
         }
         public boolean accept(File dir,String name)
         {
+            //Log.d(TAG,"str:" + str);
+            //Log.d(TAG,"name:" + name);
             if(name.endsWith(".srt") && name.startsWith(str))
                 return true;
             else
@@ -730,23 +740,30 @@ public class VideoPlayer extends Activity implements SeekBar.OnSeekBarChangeList
 
     private void fastForward() {
         if(mMediaPlayer != null) {
+            float newSpeed;
+            int resultSpeed;
             if(mPlaySpeed < 0)
-            mPlaySpeed = 0.5f;
+            newSpeed = 0.5f;
             else if(mPlaySpeed == 1)
-            mPlaySpeed = 0.5f;
+            newSpeed = 0.5f;
             else if(mPlaySpeed == 0.5f)
-            mPlaySpeed = 1.5f;
+            newSpeed = 1.5f;
             else if(mPlaySpeed == 1.5f)
-            mPlaySpeed = 2;
+            newSpeed = 2;
             else
-            mPlaySpeed *= 2;
+            newSpeed = mPlaySpeed * 2;
 
-            if(mPlaySpeed > 16)
-            mPlaySpeed = 0.5f;
+            if(newSpeed > 16)
+                newSpeed = 0.5f;
+
+            int[] newScale = {(int)(newSpeed * 0x10000)};
+            mMediaPlayer.setPlaySpeed(newScale);
+
+            if(newScale[0] == newSpeed * 0x10000){
+                mPlaySpeed = newSpeed;
+                updateButtons(UPDATE_PLAYBACK_SPEED, 0, 0, mPlaySpeed);
+            }
 
-            mMediaPlayer.setPlaySpeed((int)(mPlaySpeed * 0x10000));
-            //updateButtons(UPDATE_PLAYBACK_STATE, PLAYER_PLAYING, 0, 0);
-            updateButtons(UPDATE_PLAYBACK_SPEED, 0, 0, mPlaySpeed);
             //mHandler.sendEmptyMessage(SHOW_PROGRESS);
         }
     }
@@ -755,28 +772,33 @@ public class VideoPlayer extends Activity implements SeekBar.OnSeekBarChangeList
         Log.d(TAG,"fastBackward");
 
 		if(mMediaPlayer != null) {
-			if(mPlaySpeed > -1)
-                mPlaySpeed = -1;
+            float newSpeed;
+            int resultSpeed;
+			if(mPlaySpeed > -2)
+                newSpeed = -2;
             else
-                mPlaySpeed *= 2;
+                newSpeed = mPlaySpeed * 2;
 
-            if(mPlaySpeed < -16)
-                mPlaySpeed = -1;
+            if(newSpeed < -16)
+                newSpeed = -2;
 
-            Log.d(TAG,"speed is " + mPlaySpeed);
+            int[] newScale = {(int)(newSpeed * 0x10000)};
+            mMediaPlayer.setPlaySpeed(newScale);
 
-			mMediaPlayer.setPlaySpeed((int)(mPlaySpeed * 0x10000));
-        	//updateButtons(UPDATE_PLAYBACK_STATE, PLAYER_PLAYING, 0, 0);
-			updateButtons(UPDATE_PLAYBACK_SPEED, 0, 0, mPlaySpeed);
+            if(newScale[0] == newSpeed * 0x10000){
+                mPlaySpeed = newSpeed;
+                updateButtons(UPDATE_PLAYBACK_SPEED, 0, 0, mPlaySpeed);
+            }
             //mHandler.sendEmptyMessage(SHOW_PROGRESS);
 		}
 	}
 
     private void setNormalSpeed() {
-		if(mMediaPlayer != null) {
+        if(mMediaPlayer != null) {
             mPlaySpeed = 1;
-			mMediaPlayer.setPlaySpeed((int)(mPlaySpeed * 0x10000));
-			updateButtons(UPDATE_PLAYBACK_SPEED, 0, 0, mPlaySpeed);
+            int[] newScale = {(int)(mPlaySpeed * 0x10000)};
+            mMediaPlayer.setPlaySpeed(newScale);
+            updateButtons(UPDATE_PLAYBACK_SPEED, 0, 0, mPlaySpeed);
         }
     }
 
-- 
1.8.0

