From 358a5b8c0a54a88204fbf28b5f6b836684a24887 Mon Sep 17 00:00:00 2001
From: Haoran Wang <b50027@freescale.com>
Date: Thu, 25 Feb 2016 17:01:26 +0800
Subject: [PATCH 115/115] MA-7625 Handle bt audio exception to prevent app
 crash

As the very first time for bluedroid to establish the a2dp
connection the remote a2dp source end may not ready for
transmitting the audio stream and a2dpsink app will get
IllegalStateException from HAL.
Catch such exception and notify user to make source end
ready.

Signed-off-by: Haoran Wang <b50027@freescale.com>
---
 .../com/freescale/a2dpsinkapp/MainActivity.java    | 33 ++++++++++++++++++++--
 1 file changed, 30 insertions(+), 3 deletions(-)

diff --git a/A2dpSinkApp/java/com/freescale/a2dpsinkapp/MainActivity.java b/A2dpSinkApp/java/com/freescale/a2dpsinkapp/MainActivity.java
index c12fefe..8377dbb 100755
--- a/A2dpSinkApp/java/com/freescale/a2dpsinkapp/MainActivity.java
+++ b/A2dpSinkApp/java/com/freescale/a2dpsinkapp/MainActivity.java
@@ -21,6 +21,7 @@ import android.media.AudioTrack;
 import android.media.MediaRecorder;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Message;
 import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
@@ -70,6 +71,23 @@ public class MainActivity extends Activity {
     static int AVRCP_CMD_PAUSE = 0x46;
     static int AVRCP_BTN_PRESS = 0;
     static int AVRCP_BTN_RELEASE = 1;
+    public static final int UNINIT_AUDIO_RECORDER = 1;
+
+    private Handler playbackNotifyHandler = new Handler() {
+        public void handleMessage(Message msg) {
+            switch (msg.what) {
+                case UNINIT_AUDIO_RECORDER:
+                    Log.w(TAG, "uninit audio recoder in bluedroid.");
+                    ShowToast("Source Audio is not ready, please confirm audio is playing in source end and try again.");
+                    uiSetA2dpConnectState(a2dpState == BluetoothA2dpSink.STATE_CONNECTED, connectDeviceInfo);
+                    btn_enable.setBackgroundResource(R.drawable.power_off);
+                    break;
+                default:
+                    ShowToast("Unknown error");
+
+            }
+        }
+    };
 
     //Permission Related
     private int mNumPermissionsToRequest = 0;
@@ -475,9 +493,17 @@ public class MainActivity extends Activity {
             if (DBG) Log.d(TAG, "background play 4");
             int ReadSize = minRecBufSize;
             byte[] recData = new byte[ReadSize];
-            mTrack.play();
-            mRecord.startRecording();
-            isPlaying = true;
+            try {
+                mTrack.play();
+                mRecord.startRecording();
+                isPlaying = true;
+            } catch (IllegalStateException err) {
+                Log.e(TAG, err.toString());
+                Message message = new Message();
+                message.what = UNINIT_AUDIO_RECORDER;
+                playbackNotifyHandler.sendMessage(message);
+                isPlaying = false;
+            }
             while(isPlaying) {
                 mRecord.read(recData, 0, ReadSize);
                 mTrack.write(recData, 0, ReadSize);
@@ -604,5 +630,6 @@ public class MainActivity extends Activity {
 
             }
         }
+
     }
 }
-- 
1.8.0

