From 847d6e04c442f303e2f204a33cd82a61c5284373 Mon Sep 17 00:00:00 2001
From: Wenbo Zhu <b52619@freescale.com>
Date: Thu, 27 Aug 2015 12:52:02 +0800
Subject: [PATCH 09/12] MA-6926 [Android_MX7D_SD] Location/GUI: Failed to
 enable or disable Location from Notification Drawer.
 100%

add content observer to observe the change of database and
if change occur the mechanism will refresh the UI.

Signed-off-by: Wenbo Zhu <b52619@freescale.com>
---
 .../settings/location/LocationSettingsBase.java    | 34 ++++++++++++++++++++++
 1 file changed, 34 insertions(+)

diff --git a/src/com/android/settings/location/LocationSettingsBase.java b/src/com/android/settings/location/LocationSettingsBase.java
index 69fbd5c..8cdf6a7 100644
--- a/src/com/android/settings/location/LocationSettingsBase.java
+++ b/src/com/android/settings/location/LocationSettingsBase.java
@@ -17,11 +17,16 @@
 package com.android.settings.location;
 
 import android.content.BroadcastReceiver;
+import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
+import android.database.ContentObserver;
+import android.database.DataSetObserver;
 import android.location.LocationManager;
+import android.net.Uri;
 import android.os.Bundle;
+import android.os.Handler;
 import android.os.UserManager;
 import android.provider.Settings;
 import android.util.Log;
@@ -48,6 +53,14 @@ public abstract class LocationSettingsBase extends SettingsPreferenceFragment {
      */
     private boolean mActive = false;
 
+    private final SettingsContentObserver mSettingsContentObserver =
+            new SettingsContentObserver(new Handler()) {
+        @Override
+        public void onChange(boolean selfChange, Uri uri) {
+            refreshLocationMode();
+        }
+    };
+
     @Override
     public void onCreate(Bundle icicle) {
         super.onCreate(icicle);
@@ -66,6 +79,7 @@ public abstract class LocationSettingsBase extends SettingsPreferenceFragment {
     public void onResume() {
         super.onResume();
         mActive = true;
+        mSettingsContentObserver.register(getContentResolver());
         IntentFilter filter = new IntentFilter();
         filter.addAction(LocationManager.MODE_CHANGED_ACTION);
         getActivity().registerReceiver(mReceiver, filter);
@@ -79,6 +93,7 @@ public abstract class LocationSettingsBase extends SettingsPreferenceFragment {
             // Ignore exceptions caused by race condition
         }
         super.onPause();
+        mSettingsContentObserver.unregister(getContentResolver());
         mActive = false;
     }
 
@@ -123,4 +138,23 @@ public abstract class LocationSettingsBase extends SettingsPreferenceFragment {
             onModeChanged(mode, isRestricted());
         }
     }
+
+    private static abstract class SettingsContentObserver extends ContentObserver {
+
+        public SettingsContentObserver(Handler handler) {
+            super(handler);
+        }
+
+        public void register(ContentResolver contentResolver) {
+            contentResolver.registerContentObserver(android.provider.Settings.Secure.getUriFor(
+                    android.provider.Settings.Secure.LOCATION_PROVIDERS_ALLOWED), false, this);
+        }
+
+        public void unregister(ContentResolver contentResolver) {
+            contentResolver.unregisterContentObserver(this);
+        }
+
+        @Override
+        public abstract void onChange(boolean selfChange, Uri uri);
+    }
 }
-- 
1.8.0

