From 1988dd8a960f52c5ca0257c5c28d5fb6be3565b7 Mon Sep 17 00:00:00 2001
From: Liu Ying <b17645@freescale.com>
Date: Tue, 25 Aug 2009 16:26:35 +0800
Subject: [PATCH 116/505] ENGR00115854 IPUv3 FB:DP local alpha function should
 be disabled after using

IPU test and V4L2 overlay unit tests are updated to disable DP local alpha
function after it is used.

Signed-off-by: Liu Ying <b17645@freescale.com>
(cherry picked from commit 0f4352ada2e75b19a8e4fa01dc0fc7eb658a001b)
---
 test/mxc_ipudev_test/test_pattern.c   | 24 ++++++++++++++++++++++++
 test/mxc_v4l2_test/mxc_v4l2_overlay.c | 16 ++++++++++++++++
 2 files changed, 40 insertions(+)

diff --git a/test/mxc_ipudev_test/test_pattern.c b/test/mxc_ipudev_test/test_pattern.c
index e2fd482..3e1d0bd 100644
--- a/test/mxc_ipudev_test/test_pattern.c
+++ b/test/mxc_ipudev_test/test_pattern.c
@@ -389,6 +389,7 @@ int color_bar(int two_output, int overlay, ipu_test_handle_t * test_handle)
 	int paddr[BUF_CNT] = {0};
 	struct fb_var_screeninfo fb_var;
 	struct fb_fix_screeninfo fb_fix;
+	struct mxcfb_gbl_alpha g_alpha;
 	unsigned int system_rev = 0, ipu_version;
 	ipu_lib_overlay_param_t ov;
 	int screen_size, ov_fake_fb_size = 0, ov_alpha_fake_fb_size = 0;
@@ -418,6 +419,14 @@ int color_bar(int two_output, int overlay, ipu_test_handle_t * test_handle)
 		goto done;
 	}
 
+	g_alpha.alpha = 128;
+	g_alpha.enable = 1;
+	if (ioctl(fd_fb, MXCFB_SET_GBL_ALPHA, &g_alpha) < 0) {
+		printf("Set global alpha failed\n");
+		ret = -1;
+		goto done;
+	}
+
 	if ( ioctl(fd_fb, FBIOGET_VSCREENINFO, &fb_var) < 0) {
 		printf("Get FB var info failed!\n");
 		ret = -1;
@@ -1610,6 +1619,21 @@ void * second_layer_thread_func(void *arg)
 	printf("2nd layer avg frame time %d us\n", show_time/i);
 
 	if (op_type & DP_LOC_SEP_ALP_OV) {
+		struct mxcfb_loc_alpha l_alpha;
+
+		/*
+		 * Disable DP local alpha function, otherwise,
+		 * the alpha channel will be enabled even if we
+		 * use DP global alpha next time and this will
+		 * cause display issue.
+		 */
+		l_alpha.enable = 0;
+		l_alpha.alpha_phy_addr0 = 0;
+		l_alpha.alpha_phy_addr1 = 0;
+		if (ioctl(fd_fb, MXCFB_SET_LOC_ALPHA, &l_alpha) < 0) {
+			printf("Set local alpha failed\n");
+		}
+
 		blank = FB_BLANK_POWERDOWN;
 		ioctl(fd_fb, FBIOBLANK, blank);
 		close(fd_fb);
diff --git a/test/mxc_v4l2_test/mxc_v4l2_overlay.c b/test/mxc_v4l2_test/mxc_v4l2_overlay.c
index f9a0c55..a198cc3 100644
--- a/test/mxc_v4l2_test/mxc_v4l2_overlay.c
+++ b/test/mxc_v4l2_test/mxc_v4l2_overlay.c
@@ -123,6 +123,7 @@ mxc_v4l_overlay_test(int timeout)
         struct v4l2_control ctl;
 	char fb_device_2[100] = "/dev/fb2";
 	int fd_fb_2 = 0;
+	struct mxcfb_loc_alpha l_alpha;
 
 	if (g_alpha_mode) {
 		/* The window shows graphics and video planes. */
@@ -343,6 +344,21 @@ out:
 	if (g_alpha_mode) {
 		munmap((void *)alpha_buf0, alpha_buf_size);
 		munmap((void *)alpha_buf1, alpha_buf_size);
+
+		/*
+		 * Disable DP local alpha function, otherwise,
+		 * the alpha channel will be enabled even if we
+		 * use DP global alpha next time and this will
+		 * cause display issue.
+		 */
+		l_alpha.enable = 0;
+		l_alpha.alpha_phy_addr0 = 0;
+		l_alpha.alpha_phy_addr1 = 0;
+		if (ioctl(fd_fb_2, MXCFB_SET_LOC_ALPHA, &l_alpha) < 0) {
+			printf("Set local alpha failed\n");
+			close(fd_fb_2);
+			return TFAIL;
+		}
 		close(fd_fb_2);
 	}
 
-- 
1.8.0

