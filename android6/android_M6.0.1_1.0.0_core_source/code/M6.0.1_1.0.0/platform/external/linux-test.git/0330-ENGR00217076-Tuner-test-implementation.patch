From f73d96b4b6af96eb1435cb5b139ae02ea7b671db Mon Sep 17 00:00:00 2001
From: Alejandro Sierra <b18039@freescale.com>
Date: Thu, 12 Jul 2012 12:04:49 -0500
Subject: [PATCH 330/505] ENGR00217076 Tuner test implementation

AM/FM tuner test implementation under linux-test

Signed-off-by: Alejandro Sierra <b18039@freescale.com>
---
 test/mxc_tuner_test/Makefile          | 22 +++++++++
 test/mxc_tuner_test/mxc_tuner_test.c  | 91 +++++++++++++++++++++++++++++++++++
 test/mxc_tuner_test/mxc_tuner_test.sh |  8 +++
 3 files changed, 121 insertions(+)
 create mode 100644 module_test/modules.order
 create mode 100644 test/mxc_tuner_test/Makefile
 create mode 100644 test/mxc_tuner_test/mxc_tuner_test.c
 create mode 100644 test/mxc_tuner_test/mxc_tuner_test.sh

diff --git a/module_test/modules.order b/module_test/modules.order
new file mode 100644
index 0000000..e69de29
diff --git a/test/mxc_tuner_test/Makefile b/test/mxc_tuner_test/Makefile
new file mode 100644
index 0000000..7174ca0
--- /dev/null
+++ b/test/mxc_tuner_test/Makefile
@@ -0,0 +1,22 @@
+# list of platforms which did not want this test case
+EXCLUDE_LIST:="IMX35_3STACK IMX25_3STACK"
+
+ifeq (,$(findstring $(PLATFORM), $(EXCLUDE_LIST)))
+OBJS = \
+	$(OBJDIR)/mxc_tuner_test.out \
+	$(OBJDIR)/mxc_tuner_test.sh
+else
+OBJS =
+endif
+
+all : $(OBJS)
+
+.PHONY: clean
+clean :
+	rm -f $(OBJS)
+
+#
+# include the Rules
+#
+include ../make.rules
+
diff --git a/test/mxc_tuner_test/mxc_tuner_test.c b/test/mxc_tuner_test/mxc_tuner_test.c
new file mode 100644
index 0000000..a65a855
--- /dev/null
+++ b/test/mxc_tuner_test/mxc_tuner_test.c
@@ -0,0 +1,91 @@
+/*
+ * Copyright (C) 2012 Freescale Semiconductor, Inc. All rights reserved.
+ */
+
+/*
+ * The code contained herein is licensed under the GNU General Public
+ * License. You may obtain a copy of the GNU General Public License
+ * Version 2 or later at the following locations:
+ *
+ * http://www.opensource.org/licenses/gpl-license.html
+ * http://www.gnu.org/copyleft/gpl.html
+ */
+
+#include <math.h>
+#include <errno.h>
+#include <stdio.h>
+#include <fcntl.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <string.h>
+#include <sys/ioctl.h>
+#include <linux/videodev2.h>
+
+#define TRIES		25		/* get 25 samples                 */
+#define LOCKTIME	400000		/* wait 400ms for card to lock on */
+#define SAMPLEDELAY	15000		/* wait 15ms between samples      */
+#define THRESHOLD	.5		/* minimum acceptable signal %    */
+
+int main(int argc, char **argv)
+{
+	int	fd, ret;
+	struct	v4l2_frequency vt;
+	int n_selection, freq;
+	char *dev = NULL;
+
+	do{
+		printf("Welcome to radio menu\n");
+		printf("1.-Turn on the radio\n");
+		printf("2.-Get current frequency\n");
+                printf("3.-Set current frequency\n");
+                printf("4.-Turn off the radio\n");
+		printf("9.-Exit\n");
+		printf("Enter selection number: ");
+		if(scanf("%d", &n_selection) == 1){
+			switch(n_selection){
+			    case 1:
+				dev = strdup("/dev/radio0");    /* default */
+				fd = open(dev, O_RDONLY);
+        			if (fd < 0) {
+		                    fprintf(stderr, "Unable to open %s: %s\n", dev, strerror(errno));
+    			            exit(1);
+        			}
+			    break;
+                            case 2:
+                                ret = ioctl(fd, VIDIOC_G_FREQUENCY, &vt);   /* get initial info */
+			        if (ret < 0) {
+		                    printf("error: Turn on the radio first\n");
+                		    break;
+        			}
+        			printf("Frequency = %d\n", vt.frequency);
+                            break;
+
+                            case 3:
+				ret = ioctl(fd, VIDIOC_G_FREQUENCY, &vt);   /* get initial info */
+                                if (ret < 0) {
+                                    printf("error: Turn on the radio first\n");
+                                    break;
+                                }
+			        printf("Set frequency = ");
+				if(scanf("%d", &freq) == 1){
+				    vt.frequency = freq;
+				    ret = ioctl(fd, VIDIOC_S_FREQUENCY, &vt);   // get initial info
+        			    if (ret < 0) {
+                                        perror("error: Turn on the radio first\n");
+                                        break;
+			            }
+				}
+                            break;
+                            case 4:
+				if(fd)
+                                    close(fd);
+                            break;
+			    default:
+			    break;
+			}
+		}
+	}while(n_selection != 9);
+
+	close(fd);
+	return 0;
+}
diff --git a/test/mxc_tuner_test/mxc_tuner_test.sh b/test/mxc_tuner_test/mxc_tuner_test.sh
new file mode 100644
index 0000000..a6a4c9f
--- /dev/null
+++ b/test/mxc_tuner_test/mxc_tuner_test.sh
@@ -0,0 +1,8 @@
+#!/bin/sh
+
+arecord -D hw:2,0 -f dat | aplay -D hw:0,0 -f dat &
+./mxc_tuner_test.out
+pid=$(ps | grep "arecord -D hw:2,0 -f dat" | grep -v ' grep ' | awk '{print $1}')
+echo "killing pid = $pid"
+kill $pid
+
-- 
1.8.0

