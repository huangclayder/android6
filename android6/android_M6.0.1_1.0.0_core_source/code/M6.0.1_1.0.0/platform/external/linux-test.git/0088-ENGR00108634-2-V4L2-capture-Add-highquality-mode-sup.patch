From cd56d33f934003fc35a55314c2d0b5fb17512633 Mon Sep 17 00:00:00 2001
From: Liu Ying <b17645@freescale.com>
Date: Sat, 25 Apr 2009 17:43:11 +0800
Subject: [PATCH 088/505] ENGR00108634-2 V4L2 capture:Add highquality mode
 support

User need to call VIDIOC_S_PARM to set specific capture mode first
so that V4L2 capture will know the crop boundary and capture format, etc.

Signed-off-by: Liu Ying <b17645@freescale.com>
---
 test/mxc_v4l2_test/mxc_v4l2_capture.c | 22 +++++++++---------
 test/mxc_v4l2_test/mxc_v4l2_overlay.c | 44 ++++++++++++++++++-----------------
 test/mxc_v4l2_test/mxc_v4l2_still.c   | 34 ++++++++++-----------------
 3 files changed, 46 insertions(+), 54 deletions(-)

diff --git a/test/mxc_v4l2_test/mxc_v4l2_capture.c b/test/mxc_v4l2_test/mxc_v4l2_capture.c
index 78ad5f3..94dea2e 100644
--- a/test/mxc_v4l2_test/mxc_v4l2_capture.c
+++ b/test/mxc_v4l2_test/mxc_v4l2_capture.c
@@ -143,6 +143,17 @@ int v4l_capture_setup(void)
                 return 0;
         }
 
+	parm.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
+	parm.parm.capture.timeperframe.numerator = 1;
+	parm.parm.capture.timeperframe.denominator = g_camera_framerate;
+	parm.parm.capture.capturemode = g_capture_mode;
+
+	if (ioctl(fd_v4l, VIDIOC_S_PARM, &parm) < 0)
+	{
+	        printf("VIDIOC_S_PARM failed\n");
+	        return -1;
+	}
+
         fmt.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
 	fmt.fmt.pix.pixelformat = g_cap_fmt;
         fmt.fmt.pix.width = g_width;
@@ -169,17 +180,6 @@ int v4l_capture_setup(void)
                 return 0;
         }
 
-        parm.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
-        parm.parm.capture.timeperframe.numerator = 1;
-        parm.parm.capture.timeperframe.denominator = g_camera_framerate;
-	parm.parm.capture.capturemode = g_capture_mode;
-
-        if (ioctl(fd_v4l, VIDIOC_S_PARM, &parm) < 0)
-        {
-                printf("VIDIOC_S_PARM failed\n");
-                return -1;
-        }
-
         // Set rotation
         ctrl.id = V4L2_CID_PRIVATE_BASE + 0;
         ctrl.value = g_rotate;
diff --git a/test/mxc_v4l2_test/mxc_v4l2_overlay.c b/test/mxc_v4l2_test/mxc_v4l2_overlay.c
index b657ba6..ab83eb1 100644
--- a/test/mxc_v4l2_test/mxc_v4l2_overlay.c
+++ b/test/mxc_v4l2_test/mxc_v4l2_overlay.c
@@ -175,6 +175,29 @@ mxc_v4l_overlay_setup(struct v4l2_format *fmt)
         struct v4l2_control ctl;
         struct v4l2_crop crop;
 
+	parm.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
+	parm.parm.capture.timeperframe.numerator = 1;
+	parm.parm.capture.timeperframe.denominator = g_camera_framerate;
+	parm.parm.capture.capturemode = g_capture_mode;
+
+	if (ioctl(fd_v4l, VIDIOC_S_PARM, &parm) < 0)
+	{
+	        printf("VIDIOC_S_PARM failed\n");
+	        return TFAIL;
+	}
+
+	parm.parm.capture.timeperframe.numerator = 0;
+	parm.parm.capture.timeperframe.denominator = 0;
+
+	if (ioctl(fd_v4l, VIDIOC_G_PARM, &parm) < 0)
+	{
+	        printf("get frame rate failed\n");
+	        return TFAIL;
+	}
+
+	printf("frame_rate is %d\n",
+	       parm.parm.capture.timeperframe.denominator);
+
         if (ioctl(fd_v4l, VIDIOC_S_OUTPUT, &g_display_lcd) < 0)
         {
                 printf("VIDIOC_S_OUTPUT failed\n");
@@ -218,27 +241,6 @@ mxc_v4l_overlay_setup(struct v4l2_format *fmt)
                 return TFAIL;
         }
 
-        parm.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
-        parm.parm.capture.timeperframe.numerator = 1;
-        parm.parm.capture.timeperframe.denominator = g_camera_framerate;
-	parm.parm.capture.capturemode = g_capture_mode;
-
-        if (ioctl(fd_v4l, VIDIOC_S_PARM, &parm) < 0)
-        {
-                printf("VIDIOC_S_PARM failed\n");
-                return TFAIL;
-        }
-
-        parm.parm.capture.timeperframe.numerator = 0;
-        parm.parm.capture.timeperframe.denominator = 0;
-
-        if (ioctl(fd_v4l, VIDIOC_G_PARM, &parm) < 0)
-        {
-                printf("get frame rate failed\n");
-                return TFAIL;
-        }
-
-        printf("frame_rate is %d\n", parm.parm.capture.timeperframe.denominator);
         return TPASS;
 }
 
diff --git a/test/mxc_v4l2_test/mxc_v4l2_still.c b/test/mxc_v4l2_test/mxc_v4l2_still.c
index bc78b6c..8da6e79 100644
--- a/test/mxc_v4l2_test/mxc_v4l2_still.c
+++ b/test/mxc_v4l2_test/mxc_v4l2_still.c
@@ -122,6 +122,17 @@ int v4l_capture_setup(void)
                 return 0;
         }
 
+	parm.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
+	parm.parm.capture.timeperframe.numerator = 1;
+	parm.parm.capture.timeperframe.denominator = g_camera_framerate;
+	parm.parm.capture.capturemode = g_capture_mode;
+
+	if (ioctl(fd_v4l, VIDIOC_S_PARM, &parm) < 0)
+	{
+		printf("VIDIOC_S_PARM failed\n");
+		return 0;
+	}
+
 	memset(&fmt, 0, sizeof(fmt));
         fmt.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
         fmt.fmt.pix.pixelformat = g_pixelformat;
@@ -147,17 +158,6 @@ int v4l_capture_setup(void)
                 return 0;
         }
 
-        parm.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
-        parm.parm.capture.timeperframe.numerator = 1;
-	parm.parm.capture.timeperframe.denominator = g_camera_framerate;
-	parm.parm.capture.capturemode = g_capture_mode;
-
-        if (ioctl(fd_v4l, VIDIOC_S_PARM, &parm) < 0)
-        {
-                printf("VIDIOC_S_PARM failed\n");
-                return 0;
-        }
-
         return fd_v4l;
 }
 
@@ -169,7 +169,7 @@ void v4l_capture_test(int fd_v4l)
         char *buf1, *buf2;
         char still_file[100] = "./still.yuv";
 
-        if ((fd_still = open(still_file, O_RDWR | O_CREAT)) < 0)
+        if ((fd_still = open(still_file, O_RDWR | O_CREAT | O_TRUNC)) < 0)
         {
                 printf("Unable to create y frame recording file\n");
                 return;
@@ -203,16 +203,6 @@ void v4l_capture_test(int fd_v4l)
                 goto exit0;
         }
 
-        parm.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
-        parm.parm.capture.timeperframe.numerator = 1;
-        parm.parm.capture.timeperframe.denominator = g_camera_framerate;
-        parm.parm.capture.capturemode = g_capture_mode;
-
-        if (ioctl(fd_v4l, VIDIOC_S_PARM, &parm) < 0)
-        {
-                printf("VIDIOC_S_PARM failed\n");
-        }
-
         if ((g_convert == 1) && (g_pixelformat != V4L2_PIX_FMT_YUV422P)
         	&& (g_pixelformat != V4L2_PIX_FMT_YUV420)) {
                 fmt_convert(buf2, buf1, fmt);
-- 
1.8.0

