From 55e17bd40e678f3efe07ab0e934e8696429073c9 Mon Sep 17 00:00:00 2001
From: make shi <b15407@freescale.com>
Date: Fri, 6 Apr 2012 12:40:00 +0800
Subject: [PATCH 301/505] ENGR00179054 add USB test docs

add USB unit test documents

Signed-off-by: make shi <b15407@freescale.com>
---
 test/doc/ut_um.toc                       |  16 ++++
 test/mxc_usb_test/doc/FSL-UT-USB-001.txt |  53 +++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-002.txt |  71 ++++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-003.txt | 154 +++++++++++++++++++++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-004.txt | 152 ++++++++++++++++++++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-005.txt |  70 ++++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-006.txt |  78 ++++++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-007.txt |  36 ++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-008.txt | 111 ++++++++++++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-009.txt |  45 +++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-010.txt |  57 ++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-011.txt |  64 +++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-012.txt | 105 +++++++++++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-013.txt |  41 ++++++++
 14 files changed, 1053 insertions(+)
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-001.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-002.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-003.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-004.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-005.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-006.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-007.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-008.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-009.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-010.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-011.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-012.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-013.txt

diff --git a/test/doc/ut_um.toc b/test/doc/ut_um.toc
index 9e0db50..9541a4a 100644
--- a/test/doc/ut_um.toc
+++ b/test/doc/ut_um.toc
@@ -100,3 +100,19 @@ include::../misc/doc/FSL-UT-FEC-005.txt[]
 I2C
 ----
 include::../misc/doc/FSL-UT-I2C-001.txt[]
+
+USB
+----
+include::../mxc_usb_test/doc/FSL-UT-USB-001.txt[]
+include::../mxc_usb_test/doc/FSL-UT-USB-002.txt[]
+include::../mxc_usb_test/doc/FSL-UT-USB-003.txt[]
+include::../mxc_usb_test/doc/FSL-UT-USB-004.txt[]
+include::../mxc_usb_test/doc/FSL-UT-USB-005.txt[]
+include::../mxc_usb_test/doc/FSL-UT-USB-006.txt[]
+include::../mxc_usb_test/doc/FSL-UT-USB-007.txt[]
+include::../mxc_usb_test/doc/FSL-UT-USB-008.txt[]
+include::../mxc_usb_test/doc/FSL-UT-USB-009.txt[]
+include::../mxc_usb_test/doc/FSL-UT-USB-010.txt[]
+include::../mxc_usb_test/doc/FSL-UT-USB-011.txt[]
+include::../mxc_usb_test/doc/FSL-UT-USB-012.txt[]
+include::../mxc_usb_test/doc/FSL-UT-USB-013.txt[]
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-001.txt b/test/mxc_usb_test/doc/FSL-UT-USB-001.txt
new file mode 100644
index 0000000..fd78571
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-001.txt
@@ -0,0 +1,53 @@
+FSL-UT-USB-001-HOST-Mass-Storage
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB HOST Mass-Storage Class test
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+1. modprobe ehci-hcd if it's built as module. No need for MX5.
+
+2. mkdir /mnt/udisk
+
+3. Plug in a U-disk
+
+4. cat /proc/partitions, e.g. major minor #blocks name 31 0 256 mtdblock0
+ 8 16 127744 sdb find partitions with a major that is 8, this example ,the sdb
+ is U-disk partition.
+
+5. mount -t vfat /dev/sdb /mnt/udisk
+
+If this function is not used, unload the following drivers
+
+umount /mnt/udisk
+
+rmmod ehci-hcd
+
+Note1: this test should be appled to all the ports exist on the board, for
+example, OTG port, H1 port, H2 port, etc; and if there is internal hub
+attached to some Host ports, for example, a internal hub is attached to Host1
+, this test should be applied to the all the ports on the hub.
+
+Note2: this test should be done for at least 10 times on every port
+
+| Expected Result |
+Pass
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-002.txt b/test/mxc_usb_test/doc/FSL-UT-USB-002.txt
new file mode 100644
index 0000000..71c0e0e
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-002.txt
@@ -0,0 +1,71 @@
+FSL-UT-USB-002-HOST-HID
+~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB Host HID test
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+1.modprobe ehci-hcd
+
+2.modprobe usbhid
+
+3.Plug in USB mouse or USB keyboard.
+
+4.evtest /dev/input/event2
+
+If this function is not used, unload the following drivers.
+
+rmmod usbhid
+
+rmmod ehci-hcd
+
+Notes:
+
+For HID build as module:
+
+USB support --> USB Human Interface Device (full HID) support. Select it as a module.
+
+CONFIG_USB_HID=m
+
+USB support --> HID input layer support. Select as built in.
+
+CONFIG_USB_HIDINPUT = y.
+
+then
+
+modprobe ehci-hcd
+
+insmod usbhid.ko
+
+About evtest tools, find evtest.c and compile under the current platform.
+The evtest tool is a popular Linux open source tool, and can be found on the
+internet .
+
+Note1: this test should be appled to all the ports exist on the board, for
+example, OTG port, H1 port, H2 port, etc; and if there is internal hub
+attached to some Host ports, for example, a internal hub is attached to Host1
+, this test should be applied to the all the ports on the hub.
+
+Note2: this test should be done for at least 10 times on every port
+
+| Expected Result |
+Pass
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-003.txt b/test/mxc_usb_test/doc/FSL-UT-USB-003.txt
new file mode 100644
index 0000000..a0d8f77
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-003.txt
@@ -0,0 +1,154 @@
+FSL-UT-USB-003-HOST-PTP
+~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB HOST PTP test
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+How to build?
+
+enter ptp directory. Make the PTP driver module.
+
+make CROSS_COMPILE=${CROSS_COMPILE}
+
+Output: usbstillimage.ko
+
+ct ptp/test
+
+make CROSS_COMPILE=${CROSS_COMPILE}
+
+Ouput: ptp_test
+
+Material: One Digital Camera (DC). Set the DC's USB mode to PTP mode.
+
+Step:
+
+1. modprobe ehci-hcd
+
+2. insmod usbstillimage.ko
+
+3. Power on DC, and connect it to the board with USB cable.
+
+4. Download the ptp_test to the board.
+
+chmod 777 ptp_test
+
+/./ptp_test
+
+If this function is not used, unload the following drivers
+
+rmmod usbstillimage
+
+rmmod ehci-hcd
+
+Display: Please input command:
+
+0: Exit
+
+1: Display device information
+
+2: Display storage information
+
+3: Display file information
+
+4: Get file
+
+5: Get file thumbnail
+
+6: Send a file
+
+7: Set file protection
+
+8: Delete file
+
+9: Format storage
+
+Input 1 and press Enter. It will display the device list and display the
+detailed device information such as the manufacturer/model/serial number/
+operations supported.
+
+Press 2 and press Enter. It will display the detailed information of all
+the storage media in the device.
+
+Press 3 and press Enter. It will display the detailed information of all
+the files (objects) in the device. The file ID for each file may be seen.
+This file ID can be used in the followed file test.
+
+Press 4 and press Enter. You will be asked to input the ID of the file to
+get. Just input the hex value (no 0xprefix needed), press Enter. It will
+start to get the file/object from the device, and save it to test.jpg in the
+current directory on the platform. For robust test, unplug the device during
+the file reading process. It will show some error message, but will not crash
+. Notice that you cannot get a directory, such as MISC.
+
+Press 5 and press Enter. You will be asked to input the ID of the file to
+get the thumbnail. Just input the hex value (no 0x prefix needed), press
+Enter. It will start to get the file/object thumbnail from the device, and
+save it to thumb.jpg in the current directory on the platform. For robust test
+, unplug the device during the file reading process. It will show some error
+message but will not crash.
+
+Press 6 and press Enter. You will be asked to input the name of the source
+file to be sent from the platform to the device. Just enter the file's full
+path and name and press Enter.
+
+Then you will be asked to input the directory handle where the file is to be
+put. The folder is the object with the object Association Type 1. Choose a
+folder, for example "CIM" input its object handle, and press Enter. It
+will start to send the file.
+
+To keep the best compatibility, the file will be forced into the picture
+format. This means that the device will treat it as a picture file and
+arrange another sequence file name for it, not the source file name. After it
+finishes sending the file, press 3 to show all the files, and see that a
+new file has been added.
+If the device is unplugged during the write process, the driver will not crash
+, but sometimes the storage information on the target device will be damaged.
+This is because of a design limitation of the target device. Under Windows XP/
+2000 a USB device may not be unplugged when it is writing. Therefore, it is
+recommended that the device not be unplugged during the write process.
+
+Press 7 and press Enter. You will be asked to input the ID of the file to
+set/clear file protection. Just input the hex value (no 0x refix needed)
+and press Enter. You will be asked to input the clear or set command.
+
+Press 1 and press Enter to set file protection (or press 0 and press
+Enter to clear file protection).
+
+Press 8 and press Enter. You will be asked to input the ID of the file to
+delete. Just input the hex value (no 0x prefix needed) and press Enter. It
+will try to delete the file. If the file is protected, it will show the
+delete fail information.
+
+Press 9 and press Enter. You will be asked to input the ID of the storage
+to format. Just input the hex value (no 0x prefix needed) and press Enter.
+It will try to format the target storage media.
+
+To quit the test, input 0 and press Enter.
+
+Notes: Some DCs only support read operation and don't support write operation.
+On this type of DC steps 6 - 9 can't be executed, and the DC won't be able
+to send a file, set file protection, delete a file or format storage.
+
+| Expected Result |
+Pass
+
+|====================================================================
+
+<<<
+
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-004.txt b/test/mxc_usb_test/doc/FSL-UT-USB-004.txt
new file mode 100644
index 0000000..c0d0fb6
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-004.txt
@@ -0,0 +1,152 @@
+FSL-UT-USB-004-Gadget-Mass-Storage
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB gadget Mass-Storage Class test
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+*If NAND is to be used as a USB peripheral:
+
+1. Plug a NAND Flash card into the board if nand flash is not used.
+
+2. Boot the board.
+
+3. Select a NAND Flash "data/user" partition as USB peripheral, e.g. /dev/
+mtdblock4,Assume this partition is 100MB size. Perform the following action only once.
+
+4. dd bs=1M count=100 if=/dev/zero of=/dev/mtdblock4 If using it as a U-disk,
+skip this step.
+
+5. modprobe arcotg_udc modprobe g_file_storage file="/dev/mtdblock4"
+
+6. Connect the board to the PC with a USB cable.
+
+7. The PC should recognize the U-disk. If this is the first time it has been
+used, it will have to be formatted. On a PC, enter Computer Management tools,
+storage-> Disk Management. Following the PC tutor, get a raw disk, create a
+partition on it, and format it with FAT or FAT32.
+
+8. Files can now be transferred between the PC and the board.
+
+*To use a partition of the hard disk as a U disk:
+
+1. Get a "raw" hard disk, and connect it to the ATA interface of board.
+
+2. dd if=/dev/zero of=/dev/hda bs=1M count=100
+
+3. Reboot this board.
+
+4. modprobe arcotg_udc
+
+5. modprobe g_file_storage file="/dev/hda"
+
+6. Use the PC to create a partition table, and format every partition. On a
+PC using Windows, open "Computer Management", enter storage -> Disk
+Management Enter Initialize and Convert Disk Wizard. Everything should be set
+to the default. Create a partition table using the PC with Windows. After
+creating a partition table, input the "sync" command in the Linux console.
+
+7. Reboot this board, and look at the partition table (fdisk -l )
+
+root@10 ~$ fdisk -l
+
+Disk /dev/hda: 20.0 GB, 20003880960 bytes
+
+255 heads, 63 sectors/track, 2432 cylinders
+
+Units = cylinders of 16065 * 512 = 8225280 bytes
+
+Device Boot Start End Blocks Id System
+
+/dev/hda1 1 127 1020096 b W95 FAT32
+
+/dev/hda2 128 2431 18506880 f W95 Ext'd (LBA)
+
+/dev/hda5 128 254 1020096 6 FAT16
+
+/dev/hda6 255 636 3068383+ b W95 FAT32
+
+The above steps need to be done only once.
+
+Each time it is used, perform the following steps:
+
+1. modprobe arcotg_udc
+
+2. Set the hard disk partition as a USB disk. modprobe g_file_storage file="/
+dev/hda"
+
+
+3. Files may now be transferred between the PC and the board.
+
+4. After finishing the file transfer, it can mounted:
+
+5. mount -t vfat /dev/hda6 /mnt/test
+
+6. ls /mnt/test, everything here.
+
+after finish the test:
+
+umount /mnt/test
+
+rmmod g_file_storage
+
+rmmod arcotg_udc
+
+Notes:
+
+1. Do not use the Linux format command (e.g. fdisk) to create a hard disk
+partition table. PC Windows must be used to create it if one partition is to
+be used as a U disk.
+
+
+2. Do not use this partition on the PC and the board at the same time.
+
+
+*If MMC/SD card is to be used as a USB peripheral:
+
+1. Plug a MMC/SD card into the board.
+
+2. Boot the board.
+
+3. Load MMC/SD modules insmod mx_sdhci OR (for mx31) insmod mxc_mmc
+
+4. Load USB modules
+
+	modprobe arcotg_udc
+
+	modprobe g_file_storage file=dev/mmcblk0
+
+5. Connect the board to the PC with a USB cable.
+
+The PC should recognize the U-disk.If this is the first time it has been used, it will have to
+be formatted.On a PC, enter Computer Management tools, storage-> Disk Management.
+Following the PC tutor, get a raw disk, create a partition on it, andformat it with
+FAT or FAT32.
+
+Files can now be transferred between the PC and the board.
+
+Note: Please modprobe fsl_otg_arc before step 4 and step 5 on MX25.
+
+Note: This test should be done at least for 5 times
+
+| Expected Result |
+Files may now be transferred between the PC and the board.
+
+|====================================================================
+
+<<<
\ No newline at end of file
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-005.txt b/test/mxc_usb_test/doc/FSL-UT-USB-005.txt
new file mode 100644
index 0000000..c39881f
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-005.txt
@@ -0,0 +1,70 @@
+FSL-UT-USB-005-Gadget-Ethernet
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB Gadget Ethernet test
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+1. insmod arcotg_udc
+
+2. insmod g_ether
+
+3. ifconfig usb0
+
+4. ifconfig usb0 192.168.0.2 up When first using the USB Ethernet, and the PC
+OS is Windows XP, a driver must be installed. Use the BSP file: linux\
+Documentation\usb\linux.inf to install the driver.
+
+
+5. On the PC (if running Windows), find a device named Linux USB Ethernet/
+RNDIS Gadget
+
+6. Configure it with a fixed IP.
+
+7. Press the right button on the mouse, and click on TCP/IP Properties
+
+8. Use the following IP address and settings:
+
+	192.168.0.1
+
+	255.255.255.0
+
+	192.168.0.1
+
+9.  Save these settings.
+
+10.  From the PC, ping 192.168.0.2.
+
+If this function is not used
+
+ifconfig usb0 down
+
+If this function is not used, unload the following drivers
+
+rmmod g_ether
+
+rmmod arcotg_udc
+
+Note: Please run command "modprobe fsl_otg_arc" before step1 on MX25.
+
+| Expected Result |
+Basic network functions(such as Ping...) can work ok.
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-006.txt b/test/mxc_usb_test/doc/FSL-UT-USB-006.txt
new file mode 100644
index 0000000..8a165f5
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-006.txt
@@ -0,0 +1,78 @@
+FSL-UT-USB-006-Gadget-serial
+~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB serial gadget test
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+Testing the serial gadget requires windows ACM driver to be installed. This
+requires gserial.inf and usbser.sys. gserial.inf can be obtained from
+Documentation/usb/gadget_serial.txt. usbser.sys can be obtained using:
+
+Expand "C:\WINDOWS\Driver Cache\i386\driver.cab" -F:usbser.sys . CAUTION: Don'
+t drop the last word "." in the instructions above
+
+Copy gserial.inf and usbser.sys to a single directory.
+
+1. modprobe arcotg_udc
+
+2. mknod /dev/ttyGS0 c 253 0
+
+3. modprobe g_serial use_acm=1
+
+	gs_bind: Gadget Serial v2.2 bound
+
+	arcotg_udc: gadget arc_udc bound to driver g_serial
+
+	gs_module_init: Gadget Serial v22 loaded
+
+4. Connect the board to the PC with a USB cable.
+
+	gs_disconnect: Gadget Serial disconnected
+
+	gs_disconnect: Gadget Serial disconnected
+
+	gs_set_config: Gadget Serial configured, high speed CDC-ACM config
+
+5. Windows will recognize the serial gadget. Choose to install a driver from
+a specific location and select gserial.inf. This will install usbser.sys as
+the ACM driver in windows.
+
+6. On a Windows host configure a new HyperTerminal? session to use the COM
+port assigned to Gadget Serial. The "Port Settings" will be set automatically
+when HyperTerminal? connects to the gadget serial device, so you can leave
+them set to the default values--these settings mostly do not matter.
+
+7. echo "hi" > /dev/ttyGS0
+
+	String "hi" should be displayed in Gadget Serial terminal
+
+8. cat /dev/ttyGS0
+
+Anything you type on the Gadget Serial terminal should appear in serial port
+terminal window. For further details refer to linux documentation for serial
+gadget in Documentation/usb/gadget_serial.txt.
+
+Note: Please run command "modprobe fsl_otg_arc" before step1 on MX25.
+
+| Expected Result |
+Pass
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-007.txt b/test/mxc_usb_test/doc/FSL-UT-USB-007.txt
new file mode 100644
index 0000000..98c9507
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-007.txt
@@ -0,0 +1,36 @@
+FSL-UT-USB-007-Suspend-Resume
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB suspend and resume test
+
+| Automated |
+Yes
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+use the attached script to run suspend/resume overnight
+
+	#!/bin/sh # This will only run the quickhit tests. # i=0; while [ "$i" -lt
+	20000 ]; do /unit_tests/rtcwakeup.out -d rtc0 -m mem -s 2; i=`expr $i + 1`;
+	done i=0; t=50; d=5; r=0; while [ "$i" -lt 20000 ]; do /unit_tests/rtcwakeup.
+	out -d rtc0 -m mem -s $t; sleep $d; echo suspend $i times; i=`expr $i + 1`; r
+	=`date +%s`; t=`expr $r % 10 + 50`; d=`expr $r % 30 + 1`; done
+
+| Expected Result |
+USB can work normally after resume
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-008.txt b/test/mxc_usb_test/doc/FSL-UT-USB-008.txt
new file mode 100644
index 0000000..bfc60a8
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-008.txt
@@ -0,0 +1,111 @@
+FSL-UT-USB-008-OTG-ID
+~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB OTG pin detect
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+1) reboot the board with a cable only attached to OTG port
+
+1.1 verify the host mode can work -- insert UDisk to the cable, UDisk can work
+
+1.2 plug out the cable
+
+1.3 verify the device mode can work -- modprobe g_file_storage file="" , and
+then connect to PC, on PC side, a storage can be found.
+
+1.4 disconnect
+
+1.5 insert USB mouse to OTG Host, USB mouse can work
+
+2) reboot the board with a cable only attached to OTG port
+
+2.1 verify the device mode can work -- modprobe g_file_storage file="" , and
+then connect to PC, on PC side, a storage can be found.
+
+2.2 plug out the cable
+
+2.3 verify the host mode can work -- insert UDisk to the cable, UDisk can work
+
+2.4 insert USB mouse to OTG Host, USB mouse can work
+
+3) reboot the board with UDisk attached to OTG port
+
+3.1 plug out the cable
+
+3.2 verify the device mode can work -- modprobe g_file_storage file="" , and
+then connect to PC, on PC side, a storage can be found.
+
+3.3 disconnect
+
+3.4 insert USB mouse to OTG Host, USB mouse can work
+
+4) reboot the board with USB mouse attached to OTG port
+
+4.1 plug out the cable
+
+4.2 verify the device mode can work -- modprobe g_file_storage file="" , and
+then connect to PC, on PC side, a storage can be found.
+
+4.3 disconnect
+
+4.4 insert USB UDisk to OTG Host, USB mouse can work
+
+5) reboot the board with no cable attached to OTG port
+
+5.1 verify the host mode can work -- insert UDisk to the cable, UDisk can work
+
+5.2 plug out the cable
+
+5.3 verify the device mode can work -- modprobe g_file_storage file="" , and
+then connect to PC, on PC side, a storage can be found.
+
+5.4 disconnect
+
+5.5 insert USB mouse to OTG Host, USB mouse can work
+
+6) reboot the board with a cable connected to PC
+
+6.1 verify the host mode can work -- insert UDisk to the cable, UDisk can work
+
+6.2 plug out the cable
+
+6.3 verify the device mode can work -- modprobe g_file_storage file="" , and
+then connect to PC, on PC side, a storage can be found.
+
+6.4 disconnect
+
+6.5 insert USB mouse to OTG Host, USB mouse can work
+
+7) reboot the board with a cable connected to PC
+
+7.1 verify the device mode can work -- modprobe g_file_storage file="" , and
+then connect to PC, on PC side, a storage can be found.
+
+7.2 plug out the cable
+
+7.3 verify the host mode can work -- insert UDisk to the cable, UDisk can work
+
+7.4 insert USB mouse to OTG Host, USB mouse can work
+
+| Expected Result |
+Host mode and device mode can work well
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-009.txt b/test/mxc_usb_test/doc/FSL-UT-USB-009.txt
new file mode 100644
index 0000000..5073cb9
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-009.txt
@@ -0,0 +1,45 @@
+FSL-UT-USB-009-CV-TEST
+~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB CV test
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+1. Visit http://www.usb.org/developers/tools/
+
+2. Download USBCV R1.3.2. USBCV revision 1.3.2 is the official test tool for
+device framework testing. As of April 2007, the mass storage class tests and
+the video class tests are official and mandatory. This software is provided
+courtesy of Intel Corporation.
+
+3. load drivers modprobe arcotg_udc modprobe g_file_storage file=test storage
+e.g. modprobe g_file_storage file="/dev/ramdisk" //enable ram disk support
+first modprobe g_file_storage file="/dev/mmcblk0" //enable sd host driver
+first connect board to PC with USB cable,start to test.
+
+4. test case: ch9 test and msc test.
+
+Note: for kernel version after 2.6.38, must add a parameter serial with 12
+digital char as the value
+
+| Expected Result |
+Pass USBCV test
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-010.txt b/test/mxc_usb_test/doc/FSL-UT-USB-010.txt
new file mode 100644
index 0000000..1188b85
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-010.txt
@@ -0,0 +1,57 @@
+FSL-UT-USB-010-UVC-TEST
+~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB UVC test(USB webcam support)
+
+| Automated |
+No
+
+| Kernel Config Option |
+CONFIG_USB_VIDEO_CLASS
+
+| Software Dependency |
+Ubuntu 9.04 or later
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+In order to test the USB UVC(USB Video Class) that is supported in Linux
+kernel 2.6.24 and ongoing, please follow these procedures.
+
+Required HW:
+
+1. A USB camera that is supported in the UVC class. A list ofthese cameras can be
+found at this URL: http://linux-uvc.berlios.de/
+
+2. The test system should have a display of some type(DVI, VGA, or LCD).
+
+Required SW:
+
+1. The Linux kernel must have CONFIG_USB_VIDEO_CLASS and CONFIG_USB_EHCI_HCD selected.
+
+2. The rootfs should a Ubuntu 9.04 or later.
+
+Test Procedure:
+
+1. Boot up the Linux kernel with the Ubuntu file system.
+
+2. Use the Apps search tool to download and install a webcam application
+(such as xawtv or cheese).
+
+3. Plug in the webcam into a USB host port on the development system.
+
+4. Launch the webcam application and use the viewfinder. The application
+should find the USB webcam automatically
+
+| Expected Result |
+Pass
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-011.txt b/test/mxc_usb_test/doc/FSL-UT-USB-011.txt
new file mode 100644
index 0000000..c800d2b
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-011.txt
@@ -0,0 +1,64 @@
+FSL-UT-USB-011-DEVICE-Wakeup
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB device: wakeup the system
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+modprobe fsl_otg_arc
+
+modprobe ehci-hcd
+
+modprobe arcotg_udc
+
+modprobe g_file_storage file=/dev/xxxx
+
+cat /sys/devices/platform/fsl-usb2-udc/power/wakeup
+
+disabled
+
+echo mem > /sys/power/state
+
+	......
+
+connect to host(PC), system can not be waked up.
+
+echo enabled > /sys/devices/platform/fsl-usb2-otg/power/wakeup
+
+echo enabled > /sys/devices/platform/fsl-usb2-udc/power/wakeup
+
+cat /sys/devices/platform/fsl-usb2-otg/power/wakeup
+
+enabled
+
+cat /sys/devices/platform/fsl-usb2-udc/power/wakeup
+
+enabled
+
+echo mem > /sys/power/state
+
+	......
+
+connect to host(PC), system can be waked up.
+
+| Expected Result |
+Pass
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-012.txt b/test/mxc_usb_test/doc/FSL-UT-USB-012.txt
new file mode 100644
index 0000000..de49e77
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-012.txt
@@ -0,0 +1,105 @@
+FSL-UT-USB-012-HOST-Remote-Wakeup
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB Host: Remote Wakeup system
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+
+Take usb otg host as an example:
+
+Plug a mouse to the otg port (take otg as an example)
+
+cat /sys/device/platform/fsl-usb2-otg/power/wakeup
+
+disabled
+
+cat /sys/bus/usb/device/1-1/power/wakeup
+
+disabled
+
+echo mem > /sys/power/state
+
+	......
+
+press the button on the mouse, system can not be waked up
+
+echo enabled > /sys/devices/platform/fsl-usb2-otg/power/wakeup
+
+echo enabled > /sys/devices/platform/fsl-ehci.0/power/wakeup
+
+echo mem > /sys/power/state
+
+press the button on the mouse, system can not be waked up if 2.6.35 kernel is
+used, and system can be waked up with 2.6.31
+
+below is for 2.6.35
+
+	......
+
+echo enabled > /sys/device/platform/fsl-usb2-otg/power/wakeup
+
+echo enabled > /sys/devices/platform/fsl-ehci.0/power/wakeup
+
+echo enabled > /sys/bus/usb/device/1-1/power/wakeup
+
+echo mem > /sys/power/state
+
+press the button on the mouse, system can be waked up
+
+Take usb host1 as an example
+
+cat /sys/device/platform/fsl-ehci.1/power/wakeup
+
+disabled
+
+echo mem > /sys/power/state
+
+	......
+
+insert a udisk, system can not be waked up.
+
+echo enabled > /sys/device/platform/fsl-ehci.1/power/wakeup
+
+cat /sys/device/platform/fsl-usb2-udc/power/wakeup
+
+enabled
+
+echo mem > /sys/power/state
+
+	......
+
+insert a udisk, system can be waked up.
+
+
+echo mem > /sys/power/state
+
+	......
+
+remove the udisk, system can be waked up
+
+same tests need to be done on any other host port, for example, the
+internal hub attached to the Host1 port on mx53, mx6q, so all the exported
+port on the internal hub need to test.
+
+| Expected Result |
+Pass
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-013.txt b/test/mxc_usb_test/doc/FSL-UT-USB-013.txt
new file mode 100644
index 0000000..0d7b48d
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-013.txt
@@ -0,0 +1,41 @@
+FSL-UT-USB-013-HUB-AUTO-suspend/resume
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB Hub auto-suspend/resume
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+
+1. Attach a hub to OTG port or use the internal hub attached to Host1 (if exist)
+
+2. Wait 2s to make host and hub enter into suspend mode
+
+3. Insert USB device into hub port, the USB bus should resume, the new device
+can be enumerated. No hub detach before new device enumerated.
+
+4. Try to increase/decrease the wait time to make host and hub enter intosuspend
+mode, and try again.
+
+5. Such test case should be test for at least 20 times.
+
+| Expected Result |
+Pass
+
+|====================================================================
+
+<<<
\ No newline at end of file
-- 
1.8.0

