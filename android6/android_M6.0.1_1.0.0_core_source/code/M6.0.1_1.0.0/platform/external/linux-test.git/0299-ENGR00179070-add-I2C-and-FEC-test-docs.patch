From 52c7ed420baf48064c83876cff6cc5572e43b01b Mon Sep 17 00:00:00 2001
From: Fugang Duan <B38611@freescale.com>
Date: Fri, 6 Apr 2012 15:38:14 +0800
Subject: [PATCH 299/505] ENGR00179070 - add I2C and FEC test docs

- add I2C and FEC test docs.

Signed-off-by: Fugang Duan  <B38611@freescale.com>
---
 test/doc/ut_um.toc               | 11 ++++++++++
 test/misc/doc/FSL-UT-FEC-001.txt | 39 ++++++++++++++++++++++++++++++++++
 test/misc/doc/FSL-UT-FEC-002.txt | 43 ++++++++++++++++++++++++++++++++++++++
 test/misc/doc/FSL-UT-FEC-003.txt | 40 +++++++++++++++++++++++++++++++++++
 test/misc/doc/FSL-UT-FEC-004.txt | 45 ++++++++++++++++++++++++++++++++++++++++
 test/misc/doc/FSL-UT-FEC-005.txt | 45 ++++++++++++++++++++++++++++++++++++++++
 test/misc/doc/FSL-UT-I2C-001.txt | 34 ++++++++++++++++++++++++++++++
 7 files changed, 257 insertions(+)
 create mode 100644 test/misc/doc/FSL-UT-FEC-001.txt
 create mode 100644 test/misc/doc/FSL-UT-FEC-002.txt
 create mode 100644 test/misc/doc/FSL-UT-FEC-003.txt
 create mode 100644 test/misc/doc/FSL-UT-FEC-004.txt
 create mode 100644 test/misc/doc/FSL-UT-FEC-005.txt
 create mode 100644 test/misc/doc/FSL-UT-I2C-001.txt

diff --git a/test/doc/ut_um.toc b/test/doc/ut_um.toc
index 71c4201..d448616 100644
--- a/test/doc/ut_um.toc
+++ b/test/doc/ut_um.toc
@@ -85,3 +85,14 @@ ASRC
 include::../mxc_asrc_test/doc/FSL-UT-ASRC-001.txt[]
 include::../mxc_asrc_test/doc/FSL-UT-ASRC-002.txt[]
 
+FEC
+----
+include::../misc/doc/FSL-UT-FEC-001.txt[]
+include::../misc/doc/FSL-UT-FEC-002.txt[]
+include::../misc/doc/FSL-UT-FEC-003.txt[]
+include::../misc/doc/FSL-UT-FEC-004.txt[]
+include::../misc/doc/FSL-UT-FEC-005.txt[]
+
+I2C
+----
+include::../misc/doc/FSL-UT-I2C-001.txt[]
diff --git a/test/misc/doc/FSL-UT-FEC-001.txt b/test/misc/doc/FSL-UT-FEC-001.txt
new file mode 100644
index 0000000..58d949e
--- /dev/null
+++ b/test/misc/doc/FSL-UT-FEC-001.txt
@@ -0,0 +1,39 @@
+FSL-UT-FEC-001
+~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+FEC test
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+A connection via ethernet cable to hub/switcher.
+
+| Test Procedure |
+Following tests can be carried out using test application that is,
+client server programs to send or receive test packet.
+
+.Test item:
+. ping
+. ftp (busybox 1.01)
+. dhcp
+. telnet
+. telnetd
+. nfs
+
+| Expected Result |
+All test pass.
+
+|====================================================================
+
+<<<
diff --git a/test/misc/doc/FSL-UT-FEC-002.txt b/test/misc/doc/FSL-UT-FEC-002.txt
new file mode 100644
index 0000000..6672b71
--- /dev/null
+++ b/test/misc/doc/FSL-UT-FEC-002.txt
@@ -0,0 +1,43 @@
+FSL-UT-FEC-002
+~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+FEC-ifconfig test
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+A connection via ethernet cable to hub/switcher.
+
+| Test Procedure |
+The FEC driver shall support obtaining statistics from the device
+such as transmit collisions.
+
+.Test_Procedure:
+. Boot default kernel
+. Execute "ifconfig eth1"
+. Note statistics displayed
+
+| Expected Result |
+ifconfig eth0
+eth0      Link encap:Ethernet  HWaddr 00:00:00:00:00:00
+          BROADCAST MULTICAST  MTU:1500  Metric:1
+          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
+          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
+          collisions:0 txqueuelen:1000
+          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
+          Base address:0x8000
+
+|====================================================================
+
+<<<
diff --git a/test/misc/doc/FSL-UT-FEC-003.txt b/test/misc/doc/FSL-UT-FEC-003.txt
new file mode 100644
index 0000000..37194ef
--- /dev/null
+++ b/test/misc/doc/FSL-UT-FEC-003.txt
@@ -0,0 +1,40 @@
+FSL-UT-FEC-003
+~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+NFS root connection
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+A connection via ethernet cable. A server with an NFS file system.
+
+| Test Procedure |
+The FEC driver shall support full duplex operation and link status detect.
+
+.Test steps:
+. Build kernel with FEC on, SMSC911X? off and boot NFS root.
+. Disconnect ethernet from FEC and reconnect.
+. Observe kernel messages.
+
+To boot an NFS root the command line may look something like this:
+exec -c "noinitrd console=ttymxc0,115200 root=/dev/nfs nfsroot=10.1.49.15: \
+/u_tmp/name/ltib-mx25/rootfs rw ip=dhcp"
+
+| Expected Result |
+eth0: status: link down
+eth0: status: link up
+
+|====================================================================
+
+<<<
diff --git a/test/misc/doc/FSL-UT-FEC-004.txt b/test/misc/doc/FSL-UT-FEC-004.txt
new file mode 100644
index 0000000..37cd851
--- /dev/null
+++ b/test/misc/doc/FSL-UT-FEC-004.txt
@@ -0,0 +1,45 @@
+FSL-UT-FEC-004
+~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+Ethernet connection interruption.
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+An ethernet cable connection. A server with an NFS root file system.
+
+| Test Procedure |
+The FEC driver shall support transmit features like automatic retransmission
+on collision and automatic CRC generation.
+
+.Test_Procedure:
+. Build kernel with FEC on, SMSC911X? off and boot NFS root
+. Execute "while true ; do du / ; done"
+. Disconnect and reconnect FEC ethernet
+. Observe kernel messages and that it recovers and continues.
+
+To boot an NFS root the command line may look something like this:
+exec -c "noinitrd console=ttymxc0,115200 root=/dev/nfs nfsroot=10.1.49.15: \
+/u_tmp/name/ltib-mx25/rootfs rw ip=dhcp"
+
+| Expected Result |
+Sample_Log:
+eth0: status: link down
+nfs: server 172.16.1.2 not responding, still trying
+eth0: status: link up
+nfs: server 172.16.1.2 OK.
+
+|====================================================================
+
+<<<
diff --git a/test/misc/doc/FSL-UT-FEC-005.txt b/test/misc/doc/FSL-UT-FEC-005.txt
new file mode 100644
index 0000000..11419e5
--- /dev/null
+++ b/test/misc/doc/FSL-UT-FEC-005.txt
@@ -0,0 +1,45 @@
+FSL-UT-FEC-005
+~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+Change MAC address.
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+An ethernet connection A server with an NFS root file system.
+
+| Test Procedure |
+The FEC driver shall support changing the default MAC address
+via the kernel command line.
+
+.Test steps:
+. Configure kernel with SMSC911X? off, and FEC on.
+. Boot kernel with "fec_mac=00:00:02:19:19:61"
+   added to kernel command line.
+. Examine boot log for "eth0: ethernet 00:00:02:19:19:61".
+
+
+| Expected Result |
+Kernel command line: noinitrd console=ttymxc0,115200 root=/dev/nfs
+nfsroot=10.19 3.20.190:/tftpboot/10.193.20.181 init=/linuxrc
+ip=dhcp fec_mac=00:04:9f:00:98:2c
+
+ifconfig eth0:
+eth0 Link encap:Ethernet  HWaddr 00:04:9f:00:98:2c
+inet addr:10.192.242.12  Bcast:10.192.242.255  Mask:255.255.255.0
+......
+
+|====================================================================
+
+<<<
diff --git a/test/misc/doc/FSL-UT-I2C-001.txt b/test/misc/doc/FSL-UT-I2C-001.txt
new file mode 100644
index 0000000..40fdf63
--- /dev/null
+++ b/test/misc/doc/FSL-UT-I2C-001.txt
@@ -0,0 +1,34 @@
+FSL-UT-I2C-001
+~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+I2Cn Test - Support of multiple I2Cn Controllers
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+ - Build kernel with all 3 I2Cn selects enabled as a built-in drivers.
+ - Bootup and login as 'root' - Check /sys/class/i2c-adapter for 3 adapters
+ - Use i2c-tools to verify i2c controller r/w.
+
+| Expected Result |
+du /sys/class/i2c-adapter/ /sys/class/i2c-adapter/i2c-0/0-0054
+   /sys/class/i2c-adapter/i2c-0 /sys/class/i2c-adapter/i2c-1
+   /sys/class/i2c-adapter/i2c-2 /sys/class/i2c-adapter
+
+|====================================================================
+
+<<<
-- 
1.8.0

