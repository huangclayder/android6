From c53f5d1b4acc924d683ac8738878f6511a53ea60 Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@freescale.com>
Date: Fri, 21 Jun 2013 15:02:10 +0800
Subject: [PATCH 399/505] ENGR00268019 usb: add 3.5.7 unit testsuits

Add USB 3.5.7 unit testsuits

Signed-off-by: Peter Chen <peter.chen@freescale.com>
---
 test/mxc_usb_test/doc/FSL-UT-USB-030.txt | 61 +++++++++++++++++++++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-031.txt | 57 +++++++++++++++++++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-032.txt | 62 ++++++++++++++++++++++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-033.txt | 60 +++++++++++++++++++++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-034.txt | 58 ++++++++++++++++++++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-035.txt | 45 +++++++++++++++++++++++
 test/mxc_usb_test/doc/FSL-UT-USB-036.txt | 52 +++++++++++++++++++++++++++
 test/mxc_usb_test/doc/readme.txt         |  5 +++
 8 files changed, 400 insertions(+)
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-030.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-031.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-032.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-033.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-034.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-035.txt
 create mode 100644 test/mxc_usb_test/doc/FSL-UT-USB-036.txt
 create mode 100644 test/mxc_usb_test/doc/readme.txt

diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-030.txt b/test/mxc_usb_test/doc/FSL-UT-USB-030.txt
new file mode 100644
index 0000000..97c28b4
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-030.txt
@@ -0,0 +1,61 @@
+FSL-UT-USB-030-Connected-Test
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+USB Connected Test During Booting Up
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+NOTICE: please check clkcount often using dump-clocks.sh
+
+1.1: With USB Disk connected at OTG Port
+/unit_tests/dump-clocks.sh | grep usb
+modprobe g_mass_storage file=/dev/mmcblk0p1 removable=1
+modprobe -r g_mass_storage
+/unit_tests/dump-clocks.sh | grep usb
+
+1.2: With USB Disk connected at Host 1 Port
+/unit_tests/dump-clocks.sh | grep usb
+
+1.3: With USB Cable connected with PC, load gadget module
+/unit_tests/dump-clocks.sh | grep usb
+modprobe g_mass_storage file=/dev/mmcblk0p1 removable=1
+/unit_tests/dump-clocks.sh | grep usb
+disconnet PC
+/unit_tests/dump-clocks.sh | grep usb
+
+1.4: With USB Cable connected with USB Charger, load gadget module
+modprobe g_mass_storage file=/dev/mmcblk0p1 removable=1
+/unit_tests/dump-clocks.sh | grep usb
+disconnect usb charger
+connect to pc
+
+1.5: With Micro B-To-A cable, but without anything connected
+/unit_tests/dump-clocks.sh | grep usb
+plug in usb disk
+plug out Micro B-To-A cable
+modprobe g_mass_storage file=/dev/mmcblk0p1 removable=1
+connect to pc
+disconnect with pc
+/unit_tests/dump-clocks.sh | grep usb
+
+| Expected Result |
+Without kernel dump, without clock mismatch
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-031.txt b/test/mxc_usb_test/doc/FSL-UT-USB-031.txt
new file mode 100644
index 0000000..1afc9c1
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-031.txt
@@ -0,0 +1,57 @@
+FSL-UT-USB-031-Reboot-Test
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+Reboot Test With U-disk Connected
+
+| Automated |
+YES
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+1. Put Below Commands at init script (at the end of /etc/rc.d/rcS, etc)
+mount -t nfs -o nolock 10.192.244.61:/rootfs/wb /mnt/nfs
+cd /mnt/nfs/vte_mx63_d/
+source manual_test
+
+/root/test_reboot.sh
+
+NOTICE: 10.192.244.61:/rootfs/wb is the testing team VTE rootfs
+
+2. Put the below test_reboot.sh at /root/
+
+get_scsi.sh 4
+if [ $? -eq 0 ]
+then
+echo "aa" >> /root/reboot_count.txt
+echo "the time of reboot:"
+cat /root/reboot_count.txt | wc -l
+reboot
+else
+echo "the udisk can't be recognized"
+fi
+
+NOTICE: get_scsi.sh is the test application at VTE, it will judge
+if the u-disk is existed or not.
+
+3. Plug u-disk at USB port
+
+4. Power up the board
+
+| Expected Result |
+The continueous reboot test can run more than 1000 iterations.
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-032.txt b/test/mxc_usb_test/doc/FSL-UT-USB-032.txt
new file mode 100644
index 0000000..94b8fe0
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-032.txt
@@ -0,0 +1,62 @@
+FSL-UT-USB-032-Manually-Plug-In-Out-Test
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+Manually Plug in/out Test
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+2.1: Host/Device switch test and read/write test
+modprobe g_mass_storage file=/dev/mmcblk0p1 removable=1
+Plug in Micro B-To-A cable with u-disk connected
+/* Mount VTE ENV */
+mount -t nfs -o nolock 10.192.244.61:/rootfs/wb /mnt/nfs
+cd /mnt/nfs/vte_mx63_d
+source manual_test
+mkdir -p /mnt/sda1; mount /dev/sda1 /mnt/sda1
+bonnie\+\+ -d /mnt/sda1 -u 0:0 -s 64 -r 32
+dt of=/mnt/sda1/test_file bs=4k limit=128m passes=20
+Plug out usb disk
+plug in usb-disk
+plug out Micro B-To-A cable,
+plug in USB charger, plug out USB charger,
+plug in usb cable connected to PC.
+At Host PC do below four commands:
+mkdir -p /mnt/flash
+mount -t vfat /dev/sdx1 /mnt/flash
+sudo bonnie++ -d /mnt/flash -u 0:0 -s 10 -r 5
+sudo dt of=/mnt/flash/test_file bs=4k limit=63m passes=20
+
+Plug in Micro B-TO-A cable with u-disk connected
+Check clk refcount(/unit_tests/dump-clocks.sh | grep usb)
+
+2.2: Repeat Host/Device switch test
+s1: Booting With USB Disk connected at OTG Port
+s2: modprobe g_mass_storage file=/dev/mmcblk0p1 removable=1
+s3: plug out Micro B-TO-A cable
+s4: plug in usb cable connecting with PC
+s5: plug out usb cable
+s6: plug in Micro B-TO-A cable with u-disk connected
+s7: repeat s3-s6 10 times
+s8: check clk refcount (/unit_tests/dump-clocks.sh | grep usb)
+
+| Expected Result |
+No Error, No Clock Mismatch
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-033.txt b/test/mxc_usb_test/doc/FSL-UT-USB-033.txt
new file mode 100644
index 0000000..b1be3c0
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-033.txt
@@ -0,0 +1,60 @@
+FSL-UT-USB-033-Wakeup-Test
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+Kinds of USB Wakeup Tests
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+1:
+/* Enable Serial Wakeup */
+echo enabled > /sys/class/tty/ttymxc0/power/wakeup
+echo mem > /sys/power/state
+plug in USB device, the system should not be waken up
+wakeup system using console
+The u-disk should be enumerated successfully
+2:
+plug out u-disk
+plug in mouse/keyboard at OTG port with micro b-to-a cable
+
+echo enabled > /sys/bus/platform/devices/2184000.usb/power/wakeup
+echo enabled > /sys/bus/platform/devices/ci_hdrc.0/power/wakeup
+echo enabled > /sys/bus/usb/devices/usb2/power/wakeup
+echo enabled > /sys/bus/usb/devices/2-1/power/wakeup
+
+echo mem > /sys/power/state
+Testing usb wakeup function using plug in/out, micro b-to-a plug
+in/out, and remote wakeup.
+
+NOTICE: If micro b-to-a cable is plugged out, the usb1 will be
+removed, and the usb2 wakeup setting needs to be re-set before suspend.
+If usb device is plugged out, the 2-1 wakeup setting needs to
+be re-set before suspend.
+
+3:
+modprobe g_mass_storage file=/dev/mmcblk0p1 removable=1 (or ther gadgets)
+echo mem > /sys/power/state
+wakeup system with vbus
+echo disabled > /sys/bus/platform/devices/2184000.usb/power/wakeup
+usb cable plug in and micro-b-to-a plug in can't wake up
+
+| Expected Result |
+Can wakeup with wakeup setting, can't wakeup without wakeup setting
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-034.txt b/test/mxc_usb_test/doc/FSL-UT-USB-034.txt
new file mode 100644
index 0000000..958330b
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-034.txt
@@ -0,0 +1,58 @@
+FSL-UT-USB-034-Remote-Wakeup-Regression-Test
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+Remote Wakeup Regression Test
+
+| Automated |
+Yes
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+1. Prepare a USB host which featured with remote wakeup alternatively, You can
+use another i.mx board as USB device.
+
+2. Boot up both boards, and connect two boards with USB cable.
+
+3. At device side, do below commands:
+modprobe g_zero autoresume=3000 interval=1 endms=5000
+we can use the above three parameters to control device send resume signal time.
+Autoresume is the minimum number of milliseconds before sending resume signal,
+and the time before sending resume signal will automatically increase according
+to interval value, the endms is the max number of milliseconds before sending
+resume signal. When autoresume is 0 or not be set,the test device auto remote
+wakeup function will be disabled.
+
+4. At host side, first do below command:
+echo enabled > /sys/bus/platform/devices/2184000.usb/power/wakeup
+echo enabled > /sys/bus/platform/devices/ci_hdrc.0/power/wakeup
+echo enabled > /sys/bus/usb/devices/usb2/power/wakeup
+echo enabled > /sys/bus/usb/devices/2-1/power/wakeup
+And you need build a test script to repeat standby the system like below:
+while [ 1 ] ;do echo mem  > /sys/power/state;sleep 5 ;done
+Then run the test script.
+
+5. Then USB device will enter the suspended state ,and autoresume
+milliseconds later,the device will send resume signal to wake up host.
+6. The expected behavior is: the host device be waked up, and there is not
+re-enumeration happens.
+7. The host will enter suspended state again,and test case will repeat step
+5 and step 6.
+
+| Expected Result |
+See setp 5-7.
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-035.txt b/test/mxc_usb_test/doc/FSL-UT-USB-035.txt
new file mode 100644
index 0000000..730e13b
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-035.txt
@@ -0,0 +1,45 @@
+FSL-UT-USB-035-Loadable-Module-Test
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+Loadable Module Test
+
+| Automated |
+No
+
+| Kernel Config Option |
+Device Drivers  --->
+	[*] USB support  --->
+			<M>   ChipIdea Highspeed Dual Role Controller
+			<M>   USB Gadget Support  --->
+			<M>   Freescale MXS USB PHY support
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+1. modprobe ci13xxx_imx
+2. modprobe g_mass_storage file=/dev/mmcblk0p1 removable=1
+3. plug in usb cable connecting with PC
+4. plug out usb cable
+5. plug in Micro B-TO-A cable with u-disk connected
+6. plug out Micro B-TO-A cable
+7. Check clk refcount(/unit_tests/dump-clocks.sh | grep usb)
+8. modprobe -r g_mass_storage
+9. modprobe -r ci13xxx_imx
+10. Do step 1-9 with u-disk connected during the boot.
+
+
+| Expected Result |
+No Error, No clock mismatch
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/FSL-UT-USB-036.txt b/test/mxc_usb_test/doc/FSL-UT-USB-036.txt
new file mode 100644
index 0000000..c924eb4
--- /dev/null
+++ b/test/mxc_usb_test/doc/FSL-UT-USB-036.txt
@@ -0,0 +1,52 @@
+FSL-UT-USB-036-Loadable-Module-Regression-Test
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+Loadable Module Regression Test
+
+| Automated |
+Yes
+
+| Kernel Config Option |
+Device Drivers  --->
+	[*] USB support  --->
+			<M>   ChipIdea Highspeed Dual Role Controller
+			<M>   USB Gadget Support  --->
+			<M>   Freescale MXS USB PHY support
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+1. Run below test module load/unload script without any connection
+2. Run below test module load/unload script with u-disk connection
+
+----------------------------- test.sh----------------------------
+counter=1
+while [ 1 ]
+do
+modprobe ci13xxx_imx
+modprobe g_mass_storage file=/dev/mmcblk0p1 removable=1 (or other gadget)
+sleep 1
+sleep $( expr $RANDOM % 6)
+rmmod g_mass_storage
+modprobe -r ci13xxx_imx
+sleep 2
+counter=$(( $counter + 1 ))
+echo "the counter is $counter"
+echo "unload module!!!!!!!!!!"
+done
+
+| Expected Result |
+No Error, No clock mismatch
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_usb_test/doc/readme.txt b/test/mxc_usb_test/doc/readme.txt
new file mode 100644
index 0000000..24340d3
--- /dev/null
+++ b/test/mxc_usb_test/doc/readme.txt
@@ -0,0 +1,5 @@
+For old ARC driver (kernel version below 3.0.35), the test cases
+is from FSL-UT-USB-001.txt - FSL-UT-USB-029.txt (if existed).
+
+For new chipidea driver (kernel version above 3.5.7), the test cases
+is from FSL-UT-USB-030.txt.
-- 
1.8.0

