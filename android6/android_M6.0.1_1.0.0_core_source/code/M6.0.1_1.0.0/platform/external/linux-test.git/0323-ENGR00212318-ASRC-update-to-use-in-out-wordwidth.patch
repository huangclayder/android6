From 5d11e45d6a7d45ea0117b1d38da2c6647f6e7653 Mon Sep 17 00:00:00 2001
From: Chen Liangjun <b36089@freescale.com>
Date: Mon, 11 Jun 2012 15:34:43 +0800
Subject: [PATCH 323/505] ENGR00212318 ASRC:update to use in/out wordwidth

The origin code use wordwidth to config input and output wordwidth at
the same time. In this patch, update to use input_word_width and
output_word_width instead to config input and output wordwidth
seperately.

Signed-off-by: Chen Liangjun <b36089@freescale.com>
---
 test/mxc_asrc_test/mxc_asrc_test.c | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/test/mxc_asrc_test/mxc_asrc_test.c b/test/mxc_asrc_test/mxc_asrc_test.c
index d3425c2..79bf552 100644
--- a/test/mxc_asrc_test/mxc_asrc_test.c
+++ b/test/mxc_asrc_test/mxc_asrc_test.c
@@ -49,6 +49,8 @@ struct audio_info_s {
 	int output_dma_size;
 	unsigned short frame_bits;
 	unsigned short blockalign;
+	enum asrc_word_width input_word_width;
+	enum asrc_word_width output_word_width;
 };
 struct audio_buf {
 	char *start;
@@ -141,7 +143,8 @@ int configure_asrc_channel(int fd_asrc, struct audio_info_s *info)
 	config.input_sample_rate = info->sample_rate;
 	config.output_sample_rate = info->output_sample_rate;
 	config.buffer_num = BUF_NUM;
-	config.word_width = 32;
+	config.input_word_width = info->input_word_width;
+	config.output_word_width = info->output_word_width;
 	config.inclk = inclk;
 	config.outclk = outclk;
 	pair_index = req.index;
@@ -317,6 +320,7 @@ void bitshift(FILE * src, struct audio_info_s *info)
 
 	/*All output format is fixed to 24bit*/
 	info->frame_bits = 24;
+	info->input_word_width = ASRC_WIDTH_24_BIT;
 	update_sample_bitdepth(info);
 	/*allocate input buffer*/
 	output_buffer = (int *)malloc(info->output_data_len);
@@ -464,6 +468,14 @@ int main(int ac, char *av[])
 			audio_info.output_sample_rate = atoi(av[++i]);
 	}
 
+	for (i = 1; i < ac; i++) {
+		if (strcmp(av[i], "-wid") == 0) {
+			if (atoi(av[++i]) != 24)
+				printf("Only 24bit output is support!\n");
+			audio_info.output_word_width = ASRC_WIDTH_24_BIT;
+		}
+	}
+
 	if (ac > 5)
 	{
 		i = atoi(av[5]);
-- 
1.8.0

