From e97cf28507e93bc034f8abcc34b2e1054134a3e0 Mon Sep 17 00:00:00 2001
From: Terry Lv <r65388@freescale.com>
Date: Mon, 4 Jun 2012 16:22:46 +0800
Subject: [PATCH 322/505] ENGR00212257: Add caam unit test document

Add caam unit test document.

Signed-off-by: Terry Lv <r65388@freescale.com>
---
 test/caam/doc/FSL-UT-CAAM-001.txt | 65 +++++++++++++++++++++++++++++++++++++++
 test/caam/doc/FSL-UT-CAAM-002.txt | 65 +++++++++++++++++++++++++++++++++++++++
 test/caam/doc/FSL-UT-CAAM-003.txt | 65 +++++++++++++++++++++++++++++++++++++++
 test/doc/ut_um.toc                |  6 ++++
 4 files changed, 201 insertions(+)
 create mode 100644 test/caam/doc/FSL-UT-CAAM-001.txt
 create mode 100644 test/caam/doc/FSL-UT-CAAM-002.txt
 create mode 100644 test/caam/doc/FSL-UT-CAAM-003.txt

diff --git a/test/caam/doc/FSL-UT-CAAM-001.txt b/test/caam/doc/FSL-UT-CAAM-001.txt
new file mode 100644
index 0000000..2610953
--- /dev/null
+++ b/test/caam/doc/FSL-UT-CAAM-001.txt
@@ -0,0 +1,65 @@
+FSL-UT-CAAM-001-DES
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+CAAM DES test
+
+| Automated |
+No
+
+| Kernel Config Option |
+CONFIG_CRYPTO_AEAD=y
+CONFIG_CRYPTO_AUTHENC=y
+CONFIG_CRYPTO_DEV_FSL_CAAM=y
+CONFIG_CRYPTO_DEV_FSL_CAAM_RINGSIZE=9
+CONFIG_CRYPTO_DEV_FSL_CAAM_INTC=y
+CONFIG_CRYPTO_DEV_FSL_CAAM_INTC_COUNT_THLD=255
+CONFIG_CRYPTO_DEV_FSL_CAAM_INTC_TIME_THLD=2048
+CONFIG_CRYPTO_DEV_FSL_CAAM_CRYPTO_API=y
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+. Build Testing Module in Cryptographic API as module.
+. modprobe tcrypt.ko.
+
+ $ insmod tcrypt.ko mode=3
+
+| Expected Result |
+When kernel boots, I can see some caam initialize log:
+
+caam caam.0: device ID = 0x0a16010000000000 caam caam.0: job rings = 2, qi = 0 caam
+caam.0: authenc-hmac-sha1-cbc-aes-caam caam
+caam.0: authenc-hmac-sha256-cbc-aes-caam caam
+caam.0: authenc-hmac-sha512-cbc-aes-caam caam caam.0: authenc-hmac-sha1-cbc-des3_ede-caam
+caam caam.0: authenc-hmac-sha256-cbc-des3_ede-caam
+caam caam.0: authenc-hmac-sha512-cbc-des3_ede-caam
+caam caam.0: authenc-hmac-sha1-cbc-des-caam caam
+caam.0: authenc-hmac-sha256-cbc-des-caam caam
+caam.0: authenc-hmac-sha512-cbc-des-caam caam
+caam.0: cbc-aes-caam caam
+caam.0: cbc-3des-caam caam
+caam.0: cbc-des-caam
+
+Then test the functionality.
+root@freescale /$ insmod tcrypt.ko mode=3
+insmod: can't insert 'tcrypt.ko': Resource temporarily unavailable
+
+Note:
+If you want to see evidence that CAAM is processing tests, look at /proc/interrupts,
+you will see incrementing counts for 2 caam-jr entries every time you run the test.
+When tcrypt runs without issue, it will exit with a resource usage error.
+This is correct behavior; it uses the error to tell insmod to unload the module,
+so you can re-load/re-run it without manual intervention.
+
+|====================================================================
+
+<<<
diff --git a/test/caam/doc/FSL-UT-CAAM-002.txt b/test/caam/doc/FSL-UT-CAAM-002.txt
new file mode 100644
index 0000000..071c045
--- /dev/null
+++ b/test/caam/doc/FSL-UT-CAAM-002.txt
@@ -0,0 +1,65 @@
+FSL-UT-CAAM-001-DES
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+CAAM 3DES test
+
+| Automated |
+No
+
+| Kernel Config Option |
+CONFIG_CRYPTO_AEAD=y
+CONFIG_CRYPTO_AUTHENC=y
+CONFIG_CRYPTO_DEV_FSL_CAAM=y
+CONFIG_CRYPTO_DEV_FSL_CAAM_RINGSIZE=9
+CONFIG_CRYPTO_DEV_FSL_CAAM_INTC=y
+CONFIG_CRYPTO_DEV_FSL_CAAM_INTC_COUNT_THLD=255
+CONFIG_CRYPTO_DEV_FSL_CAAM_INTC_TIME_THLD=2048
+CONFIG_CRYPTO_DEV_FSL_CAAM_CRYPTO_API=y
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+. Build Testing Module in Cryptographic API as module.
+. modprobe tcrypt.ko.
+
+ $ insmod tcrypt.ko mode=4
+
+| Expected Result |
+When kernel boots, I can see some caam initialize log:
+
+caam caam.0: device ID = 0x0a16010000000000 caam caam.0: job rings = 2, qi = 0 caam
+caam.0: authenc-hmac-sha1-cbc-aes-caam caam
+caam.0: authenc-hmac-sha256-cbc-aes-caam caam
+caam.0: authenc-hmac-sha512-cbc-aes-caam caam caam.0: authenc-hmac-sha1-cbc-des3_ede-caam
+caam caam.0: authenc-hmac-sha256-cbc-des3_ede-caam
+caam caam.0: authenc-hmac-sha512-cbc-des3_ede-caam
+caam caam.0: authenc-hmac-sha1-cbc-des-caam caam
+caam.0: authenc-hmac-sha256-cbc-des-caam caam
+caam.0: authenc-hmac-sha512-cbc-des-caam caam
+caam.0: cbc-aes-caam caam
+caam.0: cbc-3des-caam caam
+caam.0: cbc-des-caam
+
+Then test the functionality.
+root@freescale /$ insmod tcrypt.ko mode=4
+insmod: can't insert 'tcrypt.ko': Resource temporarily unavailable
+
+Note:
+If you want to see evidence that CAAM is processing tests, look at /proc/interrupts,
+you will see incrementing counts for 2 caam-jr entries every time you run the test.
+When tcrypt runs without issue, it will exit with a resource usage error.
+This is correct behavior; it uses the error to tell insmod to unload the module,
+so you can re-load/re-run it without manual intervention.
+
+|====================================================================
+
+<<<
diff --git a/test/caam/doc/FSL-UT-CAAM-003.txt b/test/caam/doc/FSL-UT-CAAM-003.txt
new file mode 100644
index 0000000..807fa96
--- /dev/null
+++ b/test/caam/doc/FSL-UT-CAAM-003.txt
@@ -0,0 +1,65 @@
+FSL-UT-CAAM-001-DES
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+CAAM AES test
+
+| Automated |
+No
+
+| Kernel Config Option |
+CONFIG_CRYPTO_AEAD=y
+CONFIG_CRYPTO_AUTHENC=y
+CONFIG_CRYPTO_DEV_FSL_CAAM=y
+CONFIG_CRYPTO_DEV_FSL_CAAM_RINGSIZE=9
+CONFIG_CRYPTO_DEV_FSL_CAAM_INTC=y
+CONFIG_CRYPTO_DEV_FSL_CAAM_INTC_COUNT_THLD=255
+CONFIG_CRYPTO_DEV_FSL_CAAM_INTC_TIME_THLD=2048
+CONFIG_CRYPTO_DEV_FSL_CAAM_CRYPTO_API=y
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+. Build Testing Module in Cryptographic API as module.
+. modprobe tcrypt.ko.
+
+ $ insmod tcrypt.ko mode=10
+
+| Expected Result |
+When kernel boots, I can see some caam initialize log:
+
+caam caam.0: device ID = 0x0a16010000000000 caam caam.0: job rings = 2, qi = 0 caam
+caam.0: authenc-hmac-sha1-cbc-aes-caam caam
+caam.0: authenc-hmac-sha256-cbc-aes-caam caam
+caam.0: authenc-hmac-sha512-cbc-aes-caam caam caam.0: authenc-hmac-sha1-cbc-des3_ede-caam
+caam caam.0: authenc-hmac-sha256-cbc-des3_ede-caam
+caam caam.0: authenc-hmac-sha512-cbc-des3_ede-caam
+caam caam.0: authenc-hmac-sha1-cbc-des-caam caam
+caam.0: authenc-hmac-sha256-cbc-des-caam caam
+caam.0: authenc-hmac-sha512-cbc-des-caam caam
+caam.0: cbc-aes-caam caam
+caam.0: cbc-3des-caam caam
+caam.0: cbc-des-caam
+
+Then test the functionality.
+root@freescale /$ insmod tcrypt.ko mode=10
+insmod: can't insert 'tcrypt.ko': Resource temporarily unavailable
+
+Note:
+If you want to see evidence that CAAM is processing tests, look at /proc/interrupts,
+you will see incrementing counts for 2 caam-jr entries every time you run the test.
+When tcrypt runs without issue, it will exit with a resource usage error.
+This is correct behavior; it uses the error to tell insmod to unload the module,
+so you can re-load/re-run it without manual intervention.
+
+|====================================================================
+
+<<<
diff --git a/test/doc/ut_um.toc b/test/doc/ut_um.toc
index e0ff59b..efc0971 100644
--- a/test/doc/ut_um.toc
+++ b/test/doc/ut_um.toc
@@ -9,6 +9,12 @@ ASRC
 include::../mxc_asrc_test/doc/FSL-UT-ASRC-001.txt[]
 include::../mxc_asrc_test/doc/FSL-UT-ASRC-002.txt[]
 
+CAAM
+----
+include::../can/doc/FSL-UT-CAAM-001.txt[]
+include::../can/doc/FSL-UT-CAAM-002.txt[]
+include::../can/doc/FSL-UT-CAAM-003.txt[]
+
 CAN
 ---
 include::../can/doc/FSL-UT-CAN-001.txt[]
-- 
1.8.0

