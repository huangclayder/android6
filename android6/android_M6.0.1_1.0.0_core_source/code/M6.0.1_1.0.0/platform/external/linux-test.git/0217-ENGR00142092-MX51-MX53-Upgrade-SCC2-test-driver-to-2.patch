From cbcf313af37f2fb1d44c39bd747dd28f5e138385 Mon Sep 17 00:00:00 2001
From: Anish Trivedi <anish@freescale.com>
Date: Wed, 13 Apr 2011 15:01:02 -0500
Subject: [PATCH 217/505] ENGR00142092 MX51/MX53: Upgrade SCC2 test driver to
 2.6.38

Starting with 2.6.36 kernel, ioctl file operation is removed.
It must be replced with unlocked_ioctl, which has a different
prototype and require a local locking mechanism to prevent
more than 1 user to access ioctls at the same time.

The ioctl function prototype change is actually under the
linux_port.h header file in the kernel sahara driver folder.
The changes in this patch add the locking mechanism.

Signed-off-by: Anish Trivedi <anish@freescale.com>
---
 include/scc2_test_driver.h     | 3 ++-
 module_test/scc2_test_driver.c | 9 ++++++++-
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/include/scc2_test_driver.h b/include/scc2_test_driver.h
index 6acb649..c3df57a 100644
--- a/include/scc2_test_driver.h
+++ b/include/scc2_test_driver.h
@@ -1,5 +1,5 @@
 /*
- * Copyright 2004-2009 Freescale Semiconductor, Inc. All rights reserved.
+ * Copyright (C) 2004-2009, 2011 Freescale Semiconductor, Inc. All rights reserved.
  */
 
 /*
@@ -24,6 +24,7 @@
 #ifdef __KERNEL__
 
 #include <portable_os.h>
+#include <linux/mutex.h>
 
 #endif /* kernel */
 
diff --git a/module_test/scc2_test_driver.c b/module_test/scc2_test_driver.c
index 8dd26e7..8f92c64 100644
--- a/module_test/scc2_test_driver.c
+++ b/module_test/scc2_test_driver.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2005-2009 Freescale Semiconductor, Inc. All rights reserved.
+ * Copyright (C) 2005-2009, 2011 Freescale Semiconductor, Inc. All rights reserved.
  */
 
 /*
@@ -35,6 +35,9 @@ MODULE_LICENSE("GPL");
 /** Create a place to track/notify sleeping processes */
 DECLARE_WAIT_QUEUE_HEAD(waitQueue);
 
+/* Mutex to prevent usage of the ioctl function by more than 1 user at a time */
+DEFINE_MUTEX(scc2_test_mutex);
+
 OS_DEV_INIT_DCL(scc2_test_init);
 OS_DEV_SHUTDOWN_DCL(scc2_test_cleanup);
 OS_DEV_OPEN_DCL(scc2_test_open);
@@ -217,6 +220,8 @@ OS_DEV_IOCTL(scc2_test_ioctl)
     unsigned cmd = os_dev_get_ioctl_op();
     unsigned long scc_data = os_dev_get_ioctl_arg();
 
+	mutex_lock(&scc2_test_mutex);
+
     switch (cmd) {
     case SCC2_TEST_GET_CONFIGURATION:
         error_code = scc2_test_get_configuration(scc_data);
@@ -272,6 +277,8 @@ OS_DEV_IOCTL(scc2_test_ioctl)
 
     } /* End switch */
 
+	mutex_unlock(&scc2_test_mutex);
+
     os_dev_ioctl_return(error_code);
 }
 
-- 
1.8.0

