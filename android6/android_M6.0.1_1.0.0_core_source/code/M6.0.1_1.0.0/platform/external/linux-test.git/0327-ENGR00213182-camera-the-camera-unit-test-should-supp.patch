From af3b71a73e3ee75f370973e7eaa5ef2818786b88 Mon Sep 17 00:00:00 2001
From: Wu Guoxing <b39297@freescale.com>
Date: Wed, 4 Jul 2012 09:31:02 +0800
Subject: [PATCH 327/505] ENGR00213182: camera: the camera unit test should
 support /dev/video1 input.

add cmdline argument of "-d" to select video device, default is /dev/video0

Signed-off-by: Wu Guoxing <b39297@freescale.com>
---
 test/mxc_v4l2_test/mxc_v4l2_capture.c | 11 ++++++++---
 test/mxc_v4l2_test/mxc_v4l2_still.c   | 11 ++++++++---
 2 files changed, 16 insertions(+), 6 deletions(-)

diff --git a/test/mxc_v4l2_test/mxc_v4l2_capture.c b/test/mxc_v4l2_test/mxc_v4l2_capture.c
index fc18220..b542b37 100644
--- a/test/mxc_v4l2_test/mxc_v4l2_capture.c
+++ b/test/mxc_v4l2_test/mxc_v4l2_capture.c
@@ -72,6 +72,8 @@ int g_cap_fmt = V4L2_PIX_FMT_YUV420;
 int g_camera_framerate = 30;
 int g_extra_pixel = 0;
 int g_capture_mode = 0;
+char g_v4l_device[100] = "/dev/video0";
+
 
 int start_capturing(int fd_v4l)
 {
@@ -135,7 +137,6 @@ int stop_capturing(int fd_v4l)
 
 int v4l_capture_setup(void)
 {
-        char v4l_device[100] = "/dev/video0";
         struct v4l2_format fmt;
         struct v4l2_control ctrl;
         struct v4l2_streamparm parm;
@@ -146,9 +147,9 @@ int v4l_capture_setup(void)
 	struct v4l2_frmsizeenum fsize;
 	struct v4l2_fmtdesc ffmt;
 
-        if ((fd_v4l = open(v4l_device, O_RDWR, 0)) < 0)
+        if ((fd_v4l = open(g_v4l_device, O_RDWR, 0)) < 0)
         {
-                printf("Unable to open %s\n", v4l_device);
+                printf("Unable to open %s\n", g_v4l_device);
                 return 0;
         }
 
@@ -390,6 +391,9 @@ int process_cmdline(int argc, char **argv)
 		else if (strcmp(argv[i], "-m") == 0) {
 			g_capture_mode = atoi(argv[++i]);
 		}
+		else if (strcmp(argv[i], "-d") == 0) {
+			strcpy(g_v4l_device, argv[++i]);
+		}
                 else if (strcmp(argv[i], "-f") == 0) {
                         i++;
                         g_cap_fmt = v4l2_fourcc(argv[i][0], argv[i][1],argv[i][2],argv[i][3]);
@@ -418,6 +422,7 @@ int process_cmdline(int argc, char **argv)
                                " -r <rotation> -c <capture counter> \n"
                                " -e <destination cropping: extra pixels> \n" \
 			       " -m <capture mode, 0-low resolution, 1-high resolution> \n" \
+			       " -d <camera select, /dev/video0, /dev/video1> \n" \
 			       " -f <format> -fr <frame rate, 30fps by default> \n");
                         return -1;
                }
diff --git a/test/mxc_v4l2_test/mxc_v4l2_still.c b/test/mxc_v4l2_test/mxc_v4l2_still.c
index 78fb357..119bebb 100644
--- a/test/mxc_v4l2_test/mxc_v4l2_still.c
+++ b/test/mxc_v4l2_test/mxc_v4l2_still.c
@@ -68,6 +68,8 @@ static unsigned long g_pixelformat = IPU_PIX_FMT_YUYV;
 static int g_bpp = 16;
 static int g_camera_framerate = 30;
 static int g_capture_mode = 0;
+static char g_v4l_device[100] = "/dev/video0";
+
 
 void usage(void)
 {
@@ -80,6 +82,7 @@ void usage(void)
                 "-c    Convert to YUV420P. This option is valid for interleaved pixel\n"
                 "      formats only - YUYV, UYVY, YUV444\n"
 		"-m    Capture mode, 0-low resolution(default), 1-high resolution \n"
+		"-d    camera select, /dev/video0, /dev/video1 \n"
 		"-fr   Capture frame rate, 30fps by default\n"
                 "The output is saved in ./still.yuv\n"
 		"MX25(CSI) driver supports RGB565, YUV420 and UYVY\n"
@@ -164,15 +167,14 @@ int bytes_per_pixel(int fmt)
 
 int v4l_capture_setup(int * fd_v4l)
 {
-        char v4l_device[100] = "/dev/video0";
         struct v4l2_streamparm parm;
         struct v4l2_format fmt;
         struct v4l2_crop crop;
         int ret = 0;
 
-        if ((*fd_v4l = open(v4l_device, O_RDWR, 0)) < 0)
+        if ((*fd_v4l = open(g_v4l_device, O_RDWR, 0)) < 0)
         {
-                printf("Unable to open %s\n", v4l_device);
+                printf("Unable to open %s\n", g_v4l_device);
                 return -1;
         }
 
@@ -300,6 +302,9 @@ int main(int argc, char **argv)
 		else if (strcmp(argv[i], "-m") == 0) {
 			g_capture_mode = atoi(argv[++i]);
 		}
+		else if (strcmp(argv[i], "-d") == 0) {
+			strcpy(g_v4l_device, argv[++i]);
+		}
 		else if (strcmp(argv[i], "-fr") == 0) {
 			g_camera_framerate = atoi(argv[++i]);
 		}
-- 
1.8.0

