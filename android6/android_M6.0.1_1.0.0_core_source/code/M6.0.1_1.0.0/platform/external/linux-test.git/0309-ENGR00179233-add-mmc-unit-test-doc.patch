From f1488a1fe77d55ba168d6c0289f71395c86ffe1c Mon Sep 17 00:00:00 2001
From: Ryan QIAN <b32804@freescale.com>
Date: Tue, 10 Apr 2012 08:43:25 +0800
Subject: [PATCH 309/505] ENGR00179233 add mmc unit test doc

- add test scripts and doc for MMC unit test

Signed-off-by: Ryan QIAN <b32804@freescale.com>
---
 all-suite.txt                            |  5 +++
 test/doc/ut_um.toc                       |  9 ++++++
 test/mxc_mmc_test/Makefile               |  2 +-
 test/mxc_mmc_test/autorun-mmc-blockrw.sh | 38 ++++++++++++++++++++++
 test/mxc_mmc_test/autorun-mmc-fdisk.sh   | 54 ++++++++++++++++++++++++++++++++
 test/mxc_mmc_test/autorun-mmc-fs.sh      | 52 ++++++++++++++++++++++++++++++
 test/mxc_mmc_test/autorun-mmc-mkfs.sh    | 30 ++++++++++++++++++
 test/mxc_mmc_test/doc/FSL-UT-MMC-001.txt | 30 ++++++++++++++++++
 test/mxc_mmc_test/doc/FSL-UT-MMC-002.txt | 30 ++++++++++++++++++
 test/mxc_mmc_test/doc/FSL-UT-MMC-005.txt | 30 ++++++++++++++++++
 test/mxc_mmc_test/doc/FSL-UT-MMC-006.txt | 30 ++++++++++++++++++
 test/mxc_mmc_test/doc/FSL-UT-MMC-007.txt | 30 ++++++++++++++++++
 test/mxc_mmc_test/doc/FSL-UT-MMC-008.txt | 37 ++++++++++++++++++++++
 13 files changed, 376 insertions(+), 1 deletion(-)
 create mode 100755 test/mxc_mmc_test/autorun-mmc-blockrw.sh
 create mode 100755 test/mxc_mmc_test/autorun-mmc-fdisk.sh
 create mode 100755 test/mxc_mmc_test/autorun-mmc-fs.sh
 create mode 100755 test/mxc_mmc_test/autorun-mmc-mkfs.sh
 create mode 100644 test/mxc_mmc_test/doc/FSL-UT-MMC-001.txt
 create mode 100644 test/mxc_mmc_test/doc/FSL-UT-MMC-002.txt
 create mode 100644 test/mxc_mmc_test/doc/FSL-UT-MMC-005.txt
 create mode 100644 test/mxc_mmc_test/doc/FSL-UT-MMC-006.txt
 create mode 100644 test/mxc_mmc_test/doc/FSL-UT-MMC-007.txt
 create mode 100644 test/mxc_mmc_test/doc/FSL-UT-MMC-008.txt

diff --git a/all-suite.txt b/all-suite.txt
index 8dfc0ef..8b45422 100644
--- a/all-suite.txt
+++ b/all-suite.txt
@@ -13,3 +13,8 @@ FSL-UT-WDOG-0001:autorun-wdog.sh:IMX6
 FSL-UT-GPU-0001:gpu.sh:IMX6
 FSL-UT-RTC-0001:autorun-rtc.sh:IMX6
 FSL-UT-VPU-0001:autorun-vpu.sh:IMX6
+FSL-UT-MMC-0010:autorun-mmc.sh:IMX6
+FSL-UT-MMC-0020:autorun-mmc-blockrw.sh:IMX6
+FSL-UT-MMC-0050:autorun-mmc-fdisk.sh:IMX6
+FSL-UT-MMC-0060:autorun-mmc-mkfs.sh:IMX6
+FSL-UT-MMC-0070:autorun-mmc-fs.sh:IMX6
diff --git a/test/doc/ut_um.toc b/test/doc/ut_um.toc
index bededfc..2106c6c 100644
--- a/test/doc/ut_um.toc
+++ b/test/doc/ut_um.toc
@@ -62,6 +62,15 @@ Mfgtool
 -------
 include::../misc/doc/FSL-UT-MFG-001.txt[]
 
+MMC
+-------
+include::../mxc_mmc_test/doc/FSL-UT-MMC-001.txt[]
+include::../mxc_mmc_test/doc/FSL-UT-MMC-002.txt[]
+include::../mxc_mmc_test/doc/FSL-UT-MMC-005.txt[]
+include::../mxc_mmc_test/doc/FSL-UT-MMC-006.txt[]
+include::../mxc_mmc_test/doc/FSL-UT-MMC-007.txt[]
+include::../mxc_mmc_test/doc/FSL-UT-MMC-008.txt[]
+
 NAND
 ----
 include::../misc/doc/FSL-UT-NAND-001.txt[]
diff --git a/test/mxc_mmc_test/Makefile b/test/mxc_mmc_test/Makefile
index 9e473a2..02e5b21 100644
--- a/test/mxc_mmc_test/Makefile
+++ b/test/mxc_mmc_test/Makefile
@@ -2,7 +2,7 @@
 EXCLUDE_LIST:=
 
 ifeq (,$(findstring $(PLATFORM), $(EXCLUDE_LIST)))
-OBJS = $(OBJDIR)/autorun-mmc.sh
+OBJS = $(OBJDIR)/autorun-mmc.sh $(OBJDIR)/autorun-mmc-blockrw.sh $(OBJDIR)/autorun-mmc-fdisk.sh $(OBJDIR)/autorun-mmc-mkfs.sh $(OBJDIR)/autorun-mmc-fs.sh $(OBJDIR)/autorun-mmc-pm.sh
 else
 OBJS =
 endif
diff --git a/test/mxc_mmc_test/autorun-mmc-blockrw.sh b/test/mxc_mmc_test/autorun-mmc-blockrw.sh
new file mode 100755
index 0000000..6cb8819
--- /dev/null
+++ b/test/mxc_mmc_test/autorun-mmc-blockrw.sh
@@ -0,0 +1,38 @@
+#!/bin/bash
+
+source /unit_tests/test-utils.sh
+
+#
+# Exit status is 0 for PASS, nonzero for FAIL
+#
+STATUS=0
+
+run_mmc_case()
+{
+	dd if=/dev/zero of=/dev/mmcblk0 bs=1024 count=5 2>test
+
+	if [ "$?" = 0 ]; then
+		cat test | grep '^5+0 records in'
+		if [ "$?" = 0 ]; then
+			cat test | grep '^5+0 records out'
+			if [ "$?" = 0 ]; then
+				printf "MMC test passes \n\n"
+				rm test -f 2>&1 1>/dev/null
+				return
+			fi
+		fi
+	fi
+
+	STATUS=1
+	printf "MMC test fails \n\n"
+}
+
+# devnode test
+check_devnode "/dev/mmcblk0"
+
+if [ "$STATUS" = 0 ]; then
+	run_mmc_case
+fi
+
+print_status
+exit $STATUS
diff --git a/test/mxc_mmc_test/autorun-mmc-fdisk.sh b/test/mxc_mmc_test/autorun-mmc-fdisk.sh
new file mode 100755
index 0000000..6b875bf
--- /dev/null
+++ b/test/mxc_mmc_test/autorun-mmc-fdisk.sh
@@ -0,0 +1,54 @@
+#!/bin/bash
+
+source /unit_tests/test-utils.sh
+
+#
+# Exit status is 0 for PASS, nonzero for FAIL
+#
+STATUS=0
+
+run_mmc_case()
+{
+	# create two partitions
+	fdisk /dev/mmcblk0 2>&1 1>/dev/null  << EOF
+	p
+	d
+	1
+	d
+	2
+	d
+	3
+	d
+	n
+	p
+	1
+
+	+10M
+	n
+	p
+	2
+
+	+20M
+
+	w
+EOF
+	sleep 1
+	if [ "$?" = 0 ]; then
+		if [ -e '/dev/mmcblk0p1' ] && [ -e '/dev/mmcblk0p2' ]; then
+			printf "MMC test passes \n\n"
+			return
+		fi
+	fi
+	STATUS=1
+	printf "MMC test fails \n\n"
+}
+
+# devnode test
+check_devnode "/dev/mmcblk0"
+
+if [ "$STATUS" = 0 ]; then
+	run_mmc_case
+fi
+
+print_status
+exit $STATUS
diff --git a/test/mxc_mmc_test/autorun-mmc-fs.sh b/test/mxc_mmc_test/autorun-mmc-fs.sh
new file mode 100755
index 0000000..c9e690f
--- /dev/null
+++ b/test/mxc_mmc_test/autorun-mmc-fs.sh
@@ -0,0 +1,52 @@
+#!/bin/bash
+
+source /unit_tests/test-utils.sh
+
+#
+# Exit status is 0 for PASS, nonzero for FAIL
+#
+STATUS=0
+
+run_mmc_case()
+{
+	if [ ! -d /mnt/mmc_part1 ]; then
+		mkdir /mnt/mmc_part1
+	fi
+	mounted=`mount | grep '/dev/mmcblk0p1' | wc -l`
+	if [ $mounted = 1 ]; then
+		umount /dev/mmcblk0p1
+	fi
+	mounted=`mount | grep '/mnt/mmc_part1' | wc -l`
+	if [ $mounted = 1 ]; then
+		umount /mnt/mmc_part1
+	fi
+	mkfs.ext2 /dev/mmcblk0p1
+	mount -t ext2 /dev/mmcblk0p1 /mnt/mmc_part1
+
+	dd if=/dev/urandom of=/root/mmc_data bs=1M count=5
+	cp /root/mmc_data /mnt/mmc_part1/mmc_data
+	sync
+
+	cmp /root/mmc_data /mnt/mmc_part1/mmc_data
+
+	if [ "$?" = 0 ]; then
+		printf "MMC test passes \n\n"
+		rm /root/mmc_data
+		rm /mnt/mmc_part1/mmc_data
+		umount /mnt/mmc_part1
+		rm -r /mnt/mmc_part1
+	else
+		STATUS=1
+		printf "MMC test fails \n\n"
+	fi
+}
+
+# devnode test
+check_devnode "/dev/mmcblk0p1"
+
+if [ "$STATUS" = 0 ]; then
+	run_mmc_case
+fi
+
+print_status
+exit $STATUS
diff --git a/test/mxc_mmc_test/autorun-mmc-mkfs.sh b/test/mxc_mmc_test/autorun-mmc-mkfs.sh
new file mode 100755
index 0000000..39d6cbc
--- /dev/null
+++ b/test/mxc_mmc_test/autorun-mmc-mkfs.sh
@@ -0,0 +1,30 @@
+#!/bin/bash
+
+source /unit_tests/test-utils.sh
+
+#
+# Exit status is 0 for PASS, nonzero for FAIL
+#
+STATUS=0
+
+run_mmc_case()
+{
+	mkfs.ext2 /dev/mmcblk0p1 && mkfs.minix /dev/mmcblk0p1
+
+	if [ "$?" = 0 ]; then
+		printf "MMC test passes \n\n"
+	else
+		STATUS=1
+		printf "MMC test fails \n\n"
+	fi
+}
+
+# devnode test
+check_devnode "/dev/mmcblk0p1"
+
+if [ "$STATUS" = 0 ]; then
+	run_mmc_case
+fi
+
+print_status
+exit $STATUS
diff --git a/test/mxc_mmc_test/doc/FSL-UT-MMC-001.txt b/test/mxc_mmc_test/doc/FSL-UT-MMC-001.txt
new file mode 100644
index 0000000..8274dd3
--- /dev/null
+++ b/test/mxc_mmc_test/doc/FSL-UT-MMC-001.txt
@@ -0,0 +1,30 @@
+FSL-UT-MMC-001
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+MMC/SD read write test
+
+| Automated |
+Yes
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+run 'autorun-mmc.sh'
+
+| Expected Result |
+Pass
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_mmc_test/doc/FSL-UT-MMC-002.txt b/test/mxc_mmc_test/doc/FSL-UT-MMC-002.txt
new file mode 100644
index 0000000..f22220c
--- /dev/null
+++ b/test/mxc_mmc_test/doc/FSL-UT-MMC-002.txt
@@ -0,0 +1,30 @@
+FSL-UT-MMC-002
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+MMC/SD block read write test
+
+| Automated |
+Yes
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+run 'autorun-mmc-blockrw.sh'
+
+| Expected Result |
+Pass
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_mmc_test/doc/FSL-UT-MMC-005.txt b/test/mxc_mmc_test/doc/FSL-UT-MMC-005.txt
new file mode 100644
index 0000000..ce29ee9
--- /dev/null
+++ b/test/mxc_mmc_test/doc/FSL-UT-MMC-005.txt
@@ -0,0 +1,30 @@
+FSL-UT-MMC-005
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+MMC/SD fdisk test
+
+| Automated |
+Yes
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+run 'autorun-mmc-fdisk.sh'
+
+| Expected Result |
+Pass
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_mmc_test/doc/FSL-UT-MMC-006.txt b/test/mxc_mmc_test/doc/FSL-UT-MMC-006.txt
new file mode 100644
index 0000000..7fcc1cf
--- /dev/null
+++ b/test/mxc_mmc_test/doc/FSL-UT-MMC-006.txt
@@ -0,0 +1,30 @@
+FSL-UT-MMC-006
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+MMC/SD mkfs test
+
+| Automated |
+Yes
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+run 'autorun-mmc-fs.sh'
+
+| Expected Result |
+Pass
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_mmc_test/doc/FSL-UT-MMC-007.txt b/test/mxc_mmc_test/doc/FSL-UT-MMC-007.txt
new file mode 100644
index 0000000..2303873
--- /dev/null
+++ b/test/mxc_mmc_test/doc/FSL-UT-MMC-007.txt
@@ -0,0 +1,30 @@
+FSL-UT-MMC-007
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+MMC/SD file system test
+
+| Automated |
+Yes
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+run 'autorun-mmc-fs.sh'
+
+| Expected Result |
+Pass
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_mmc_test/doc/FSL-UT-MMC-008.txt b/test/mxc_mmc_test/doc/FSL-UT-MMC-008.txt
new file mode 100644
index 0000000..860b7a9
--- /dev/null
+++ b/test/mxc_mmc_test/doc/FSL-UT-MMC-008.txt
@@ -0,0 +1,37 @@
+FSL-UT-MMC-008
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+MMC/SD power management test
+
+| Automated |
+No
+
+| Kernel Config Option |
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+1. Ensure MMC/SD/SDIO can enter suspend.
+
+$ echo standby > /sys/power/state
+
+2. Press one key to resume.
+
+3. Retest MMC/SD/SDIO function.
+
+
+| Expected Result |
+MMC/SD/SDIO functionality works well after resume.
+
+|====================================================================
+
+<<<
-- 
1.8.0

