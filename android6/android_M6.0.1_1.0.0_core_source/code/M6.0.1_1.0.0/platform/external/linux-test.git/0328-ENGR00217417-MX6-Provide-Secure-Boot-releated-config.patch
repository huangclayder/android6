From 5502782435f30e9f0ee4cbfd2bfe1a053502976f Mon Sep 17 00:00:00 2001
From: Eric Sun <jian.sun@freescale.com>
Date: Tue, 17 Jul 2012 17:04:49 +0800
Subject: [PATCH 328/505] ENGR00217417 MX6 : Provide Secure Boot releated
 configuraion and script files

These files are originally listed in the document, for test convinence,
they are provided in the test directory. Test team can turn to use them
directly when they follow the test steps described in "MX6 Linux High
Assurance Boot (HAB) User Guide"

Signed-off-by: Eric Sun <jian.sun@freescale.com>
---
 test/mxc_secureboot/README                | 28 ++++++++++++++++++++++++++++
 test/mxc_secureboot/gen_fuse              |  9 +++++++++
 test/mxc_secureboot/habUimageGen          | 19 +++++++++++++++++++
 test/mxc_secureboot/habimagegen           | 15 +++++++++++++++
 test/mxc_secureboot/mx6q_mx6dl/genIVT     | 13 +++++++++++++
 test/mxc_secureboot/mx6q_mx6dl/u-boot.csf | 31 +++++++++++++++++++++++++++++++
 test/mxc_secureboot/mx6q_mx6dl/uImage.csf | 31 +++++++++++++++++++++++++++++++
 test/mxc_secureboot/mx6sl/genIVT          | 13 +++++++++++++
 test/mxc_secureboot/mx6sl/u-boot.csf      | 31 +++++++++++++++++++++++++++++++
 test/mxc_secureboot/mx6sl/uImage.csf      | 31 +++++++++++++++++++++++++++++++
 10 files changed, 221 insertions(+)
 create mode 100644 test/mxc_secureboot/README
 create mode 100755 test/mxc_secureboot/gen_fuse
 create mode 100755 test/mxc_secureboot/habUimageGen
 create mode 100755 test/mxc_secureboot/habimagegen
 create mode 100755 test/mxc_secureboot/mx6q_mx6dl/genIVT
 create mode 100644 test/mxc_secureboot/mx6q_mx6dl/u-boot.csf
 create mode 100644 test/mxc_secureboot/mx6q_mx6dl/uImage.csf
 create mode 100755 test/mxc_secureboot/mx6sl/genIVT
 create mode 100644 test/mxc_secureboot/mx6sl/u-boot.csf
 create mode 100644 test/mxc_secureboot/mx6sl/uImage.csf

diff --git a/test/mxc_secureboot/README b/test/mxc_secureboot/README
new file mode 100644
index 0000000..fe350e4
--- /dev/null
+++ b/test/mxc_secureboot/README
@@ -0,0 +1,28 @@
+These files are for convinience for secure boot testers
+
+File Description
+------------------------------------
+"gen_fuse" :
+	This script should be copied to "BLN_CST_MAIN_01.00.00/crts" and
+        run to generate SRK footprint file "SRK_1_2_3_4_fuse.bin"
+	The footprint value is also dumped out, they should be written to
+	SRK fuse later
+
+"habimagegen"
+"<chip>/u-boot.csf" :
+	These 2 files should be copied to "BLN_CST_MAIN_01.00.00/u-boot"
+	the first one is the signing script, the second one is the
+	signing configuration. Note that u-boot.csf is different for
+	MX6Q/MX6DL and MX6SoloLite
+
+"habUimagegen"
+"<chip>/genIVT"
+"<chip>/uImage.csf
+	These 3 files should be copied to "BLN_CST_MAIN_01.00.00/uImage"
+	the first one is the signing script, the second one is used to
+	generate the "IVT" for uImage. the third one is the signing
+	configuration. Note that genIVT and uImage.csf is different for
+	MX6Q/MX6DL and MX6SoloLite
+
+Please refer to "MX6 Linux High Assurance Boot (HAB) User Guide" for
+detailed test steps.
diff --git a/test/mxc_secureboot/gen_fuse b/test/mxc_secureboot/gen_fuse
new file mode 100755
index 0000000..372f9c2
--- /dev/null
+++ b/test/mxc_secureboot/gen_fuse
@@ -0,0 +1,9 @@
+#! /bin/bash
+
+# Copy this script to "BLN_CST_MAIN_01.00.00/crts" and run to generate fuse file SRK_1_2_3_4_fuse.bin
+echo "Generate SRK Fuse file"
+../linux/srktool -h 4 -t SRK_1_2_3_4_table.bin -e SRK_1_2_3_4_fuse.bin -d sha256 -c ./SRK1_sha256_2048_65537_v3_ca_crt.pem,./SRK2_sha256_2048_65537_v3_ca_crt.pem,./SRK3_sha256_2048_65537_v3_ca_crt.pem,./SRK4_sha256_2048_65537_v3_ca_crt.pem -f 1
+
+# Dump values to be flashed into HW_OCOTP_SRK
+echo "Value to be written to HW_OCOTP_SRK0~7"
+hexdump -e '/4 "0x"' -e '/4  "%X""\n"' SRK_1_2_3_4_fuse.bin
diff --git a/test/mxc_secureboot/habUimageGen b/test/mxc_secureboot/habUimageGen
new file mode 100755
index 0000000..06c88f7
--- /dev/null
+++ b/test/mxc_secureboot/habUimageGen
@@ -0,0 +1,19 @@
+#! /bin/bash
+
+echo "extend uImage to 0x3FDFE0..."
+objcopy -I binary -O binary --pad-to 0x3fdfe0 --gap-fill=0xff uImage uImage-pad.bin
+
+echo "generate IVT"
+./genIVT
+
+echo "attach IVT..."
+cat uImage-pad.bin ivt.bin > uImage-pad-ivt.bin
+
+echo "generate csf data..."
+../linux/cst --o uImage_csf.bin < uImage.csf
+
+echo "merge image and csf data..."
+cat uImage-pad-ivt.bin uImage_csf.bin > uImage-signed.bin
+
+echo "extend final image to 0x400000..."
+objcopy -I binary -O binary --pad-to 0x400000 --gap-fill=0xff uImage-signed.bin uImage-signed-pad.bin
diff --git a/test/mxc_secureboot/habimagegen b/test/mxc_secureboot/habimagegen
new file mode 100755
index 0000000..af3e8ae
--- /dev/null
+++ b/test/mxc_secureboot/habimagegen
@@ -0,0 +1,15 @@
+#! /bin/bash
+
+echo "extend u-boot to 0x2F000..."
+objcopy -I binary -O binary --pad-to 0x2f000 --gap-fill=0xff u-boot.bin u-boot-pad.bin
+
+echo "generate csf data..."
+../linux/cst --o u-boot_csf.bin < u-boot.csf
+
+echo "merge image and csf data..."
+cat u-boot-pad.bin u-boot_csf.bin > u-boot-signed.bin
+
+echo "extend final image to 0x31000..."
+objcopy -I binary -O binary --pad-to 0x31000 --gap-fill=0xff u-boot-signed.bin u-boot-signed-pad.bin
+
+echo "u-boot-signed-pad.bin is ready"
diff --git a/test/mxc_secureboot/mx6q_mx6dl/genIVT b/test/mxc_secureboot/mx6q_mx6dl/genIVT
new file mode 100755
index 0000000..1d1b5b3
--- /dev/null
+++ b/test/mxc_secureboot/mx6q_mx6dl/genIVT
@@ -0,0 +1,13 @@
+#! /usr/bin/perl -w
+use strict;
+
+open(my $out, '>:raw', 'ivt.bin') or die "Unable to open: $!";
+print $out pack("V", 0x402000D1);	# Signature
+print $out pack("V", 0x10801000);	# Jump Location
+print $out pack("V", 0x0);		# Reserved
+print $out pack("V", 0x0);		# DCD pointer
+print $out pack("V", 0x0);		# Boot Data
+print $out pack("V", 0x10BFDFE0);	# Self Pointer
+print $out pack("V", 0x10BFE000);	# CSF Pointer
+print $out pack("V", 0x0);		# Reserved
+close($out);
diff --git a/test/mxc_secureboot/mx6q_mx6dl/u-boot.csf b/test/mxc_secureboot/mx6q_mx6dl/u-boot.csf
new file mode 100644
index 0000000..00442f1
--- /dev/null
+++ b/test/mxc_secureboot/mx6q_mx6dl/u-boot.csf
@@ -0,0 +1,31 @@
+[Header]
+    Version = 4.0
+    Security Configuration = Open
+    Hash Algorithm = sha256
+    Engine Configuration = 0
+    Certificate Format = X509
+    Signature Format = CMS
+
+[Install SRK]
+    File = "../crts/SRK_1_2_3_4_table.bin"
+    Source index = 0
+
+[Install CSFK]
+    File = "../crts/CSF1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+[Authenticate CSF]
+
+[Install Key]
+    Verification index = 0
+    Target index = 2
+    File = "../crts/IMG1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+# Sign padded u-boot starting at the IVT through to the end with
+# length = 0x2F000 (padded u-boot length) - 0x400 (IVT offset) = 0x2EC00
+# This covers the essential parts: IVT, boot data and DCD.
+# Blocks have the following definition:
+#    Image block start address on i.MX, Offset from start of image file,
+#    Length of block in bytes, image data file
+[Authenticate Data]
+    Verification index = 2
+    Blocks = 0x27800400 0x400 0x2EC00 "u-boot-pad.bin"
diff --git a/test/mxc_secureboot/mx6q_mx6dl/uImage.csf b/test/mxc_secureboot/mx6q_mx6dl/uImage.csf
new file mode 100644
index 0000000..1bf51c4
--- /dev/null
+++ b/test/mxc_secureboot/mx6q_mx6dl/uImage.csf
@@ -0,0 +1,31 @@
+[Header]
+    Version = 4.0
+    Security Configuration = Open
+    Hash Algorithm = sha256
+    Engine Configuration = 0
+    Certificate Format = X509
+    Signature Format = CMS
+
+[Install SRK]
+    File = "../crts/SRK_1_2_3_4_table.bin"
+    Source index = 0
+
+[Install CSFK]
+    File = "../crts/CSF1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+[Authenticate CSF]
+
+[Install Key]
+    Verification index = 0
+    Target index = 2
+    File = "../crts/IMG1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+# Sign padded uImage start at address 0x10800000
+# length = 0x3FE0000
+# This covers the essential parts: original uImage and the attached IVT
+# Blocks have the following definition:
+#    Image block start address on i.MX, Offset from start of image file,
+#    Length of block in bytes, image data file
+[Authenticate Data]
+    Verification index = 2
+    Blocks = 0x10800000 0x0 0x003FE000 "uImage-pad-ivt.bin"
diff --git a/test/mxc_secureboot/mx6sl/genIVT b/test/mxc_secureboot/mx6sl/genIVT
new file mode 100755
index 0000000..04e9c99
--- /dev/null
+++ b/test/mxc_secureboot/mx6sl/genIVT
@@ -0,0 +1,13 @@
+#! /usr/bin/perl -w
+use strict;
+
+open(my $out, '>:raw', 'ivt.bin') or die "Unable to open: $!";
+print $out pack("V", 0x402000D1);	# Signature
+print $out pack("V", 0x80801000);	# Jump Location
+print $out pack("V", 0x0);		# Reserved
+print $out pack("V", 0x0);		# DCD pointer
+print $out pack("V", 0x0);		# Boot Data
+print $out pack("V", 0x80BFDFE0);	# Self Pointer
+print $out pack("V", 0x80BFE000);	# CSF Pointer
+print $out pack("V", 0x0);		# Reserved
+close($out);
diff --git a/test/mxc_secureboot/mx6sl/u-boot.csf b/test/mxc_secureboot/mx6sl/u-boot.csf
new file mode 100644
index 0000000..3d19814
--- /dev/null
+++ b/test/mxc_secureboot/mx6sl/u-boot.csf
@@ -0,0 +1,31 @@
+[Header]
+    Version = 4.0
+    Security Configuration = Open
+    Hash Algorithm = sha256
+    Engine Configuration = 0
+    Certificate Format = X509
+    Signature Format = CMS
+
+[Install SRK]
+    File = "../crts/SRK_1_2_3_4_table.bin"
+    Source index = 0
+
+[Install CSFK]
+    File = "../crts/CSF1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+[Authenticate CSF]
+
+[Install Key]
+    Verification index = 0
+    Target index = 2
+    File = "../crts/IMG1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+# Sign padded u-boot starting at the IVT through to the end with
+# length = 0x2F000 (padded u-boot length) - 0x400 (IVT offset) = 0x2EC00
+# This covers the essential parts: IVT, boot data and DCD.
+# Blocks have the following definition:
+#    Image block start address on i.MX, Offset from start of image file,
+#    Length of block in bytes, image data file
+[Authenticate Data]
+    Verification index = 2
+    Blocks = 0x87800400 0x400 0x2EC00 "u-boot-pad.bin"
diff --git a/test/mxc_secureboot/mx6sl/uImage.csf b/test/mxc_secureboot/mx6sl/uImage.csf
new file mode 100644
index 0000000..b08fb03
--- /dev/null
+++ b/test/mxc_secureboot/mx6sl/uImage.csf
@@ -0,0 +1,31 @@
+[Header]
+    Version = 4.0
+    Security Configuration = Open
+    Hash Algorithm = sha256
+    Engine Configuration = 0
+    Certificate Format = X509
+    Signature Format = CMS
+
+[Install SRK]
+    File = "../crts/SRK_1_2_3_4_table.bin"
+    Source index = 0
+
+[Install CSFK]
+    File = "../crts/CSF1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+[Authenticate CSF]
+
+[Install Key]
+    Verification index = 0
+    Target index = 2
+    File = "../crts/IMG1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+# Sign padded uImage start at address 0x80800000
+# length = 0x3FE0000
+# This covers the essential parts: original uImage and the attached IVT
+# Blocks have the following definition:
+#    Image block start address on i.MX, Offset from start of image file,
+#    Length of block in bytes, image data file
+[Authenticate Data]
+    Verification index = 2
+    Blocks = 0x80800000 0x0 0x003FE000 "uImage-pad-ivt.bin"
-- 
1.8.0

