From 3d43d8f2d6329750c818d07f65c0124febf1dee1 Mon Sep 17 00:00:00 2001
From: Frank Li <Frank.Li@freescale.com>
Date: Sun, 1 Apr 2012 15:08:47 +0800
Subject: [PATCH 294/505] ENGR00178639 Add RTC and PM test steps

Add RTC and PM test steps

Signed-off-by: Frank Li <Frank.Li@freescale.com>
---
 all-suite.txt                       |  1 +
 test/doc/ut_um.toc                  | 12 ++++++++++++
 test/mxc_rtc/doc/FSL-UT-RTC-001.txt | 27 +++++++++++++++++++++++++++
 test/mxc_rtc/doc/FSL-UT-RTC-002.txt | 31 +++++++++++++++++++++++++++++++
 test/mxc_rtc/doc/FSL-UT-RTC-003.txt | 37 +++++++++++++++++++++++++++++++++++++
 test/pm/Makefile                    | 23 +++++++++++++++++++++++
 test/pm/suspend_quick_auto.sh       | 13 +++++++++++++
 test/pm/suspend_random_auto.sh      | 18 ++++++++++++++++++
 8 files changed, 162 insertions(+)
 create mode 100644 test/mxc_rtc/doc/FSL-UT-RTC-001.txt
 create mode 100644 test/mxc_rtc/doc/FSL-UT-RTC-002.txt
 create mode 100644 test/mxc_rtc/doc/FSL-UT-RTC-003.txt
 create mode 100644 test/pm/Makefile
 create mode 100755 test/pm/suspend_quick_auto.sh
 create mode 100755 test/pm/suspend_random_auto.sh

diff --git a/all-suite.txt b/all-suite.txt
index 5863cc4..bfcbb2d 100644
--- a/all-suite.txt
+++ b/all-suite.txt
@@ -11,3 +11,4 @@ FSL-UT-PXP-0001:autorun-pxp.sh:IMX6
 FSL-UT-PXP-0002:pxp_v4l2_out_test.sh:
 FSL-UT-WDOG-0001:autorun-wdog.sh:IMX6
 FSL-UT-GPU-0001:gpu.sh:IMX6
+FSL-UT-RTC-0001:autorun-rtc.sh:IMX6
diff --git a/test/doc/ut_um.toc b/test/doc/ut_um.toc
index 7c0101a..bf10342 100644
--- a/test/doc/ut_um.toc
+++ b/test/doc/ut_um.toc
@@ -4,11 +4,23 @@ include::def.cfg[]
 {chip} Linux BSP Unit Test User Manual
 ======================================
 
+Power Management
+----------------
+include::../pm/doc/FSL-UT-PM-001.txt[]
+include::../pm/doc/FSL-UT-PM-002.txt[]
+include::../pm/doc/FSL-UT-PM-003.txt[]
+
 PXP
 ---
 include::../pxp_lib_test/doc/FSL-UT-PXP-001.txt[]
 include::../pxp_v4l2_test/doc/FSL-UT-PXP-002.txt[]
 
+RTC
+---
+include::../mxc_rtc/doc/FSL-UT-RTC-001.txt[]
+include::../mxc_rtc/doc/FSL-UT-RTC-002.txt[]
+include::../mxc_rtc/doc/FSL-UT-RTC-003.txt[]
+
 WDOG
 ----
 include::../wdog/doc/FSL-UT-WDOG-001.txt[]
diff --git a/test/mxc_rtc/doc/FSL-UT-RTC-001.txt b/test/mxc_rtc/doc/FSL-UT-RTC-001.txt
new file mode 100644
index 0000000..e817b65
--- /dev/null
+++ b/test/mxc_rtc/doc/FSL-UT-RTC-001.txt
@@ -0,0 +1,27 @@
+FSL-UT-RTC-001
+~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+Test RTC function
+
+| Automated |
+YES
+
+| Kernel Config Option |
+ CONFIG_RTC_DRV_SNVS
+
+| Test Procedure |
+. run the following command on target board,
+
+ $ /unit_tests/autorun-rtc.sh
+
+| Expected Result |
+Exit with PASS results
+
+|=====================================================================
+
+<<<
diff --git a/test/mxc_rtc/doc/FSL-UT-RTC-002.txt b/test/mxc_rtc/doc/FSL-UT-RTC-002.txt
new file mode 100644
index 0000000..7f78e04
--- /dev/null
+++ b/test/mxc_rtc/doc/FSL-UT-RTC-002.txt
@@ -0,0 +1,31 @@
+FSL-UT-RTC-002
+~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+Test RTC resume system
+
+| Automated |
+YES
+
+| Kernel Config Option |
+ CONFIG_RTC_DRV_SNVS
+
+| Software Dependency |
+System suspend/resume function ready
+
+| Test Procedure |
+Test whether target is able to resume from standyby by RTC wakeup
+.Run below command
+
+ $ /unit_tests/rtcwakeup.out -d rtc0 -m mem -s 10
+
+| Expected Result |
+System is wakeup after 10s.
+
+|=====================================================================
+
+<<<
diff --git a/test/mxc_rtc/doc/FSL-UT-RTC-003.txt b/test/mxc_rtc/doc/FSL-UT-RTC-003.txt
new file mode 100644
index 0000000..563d03c
--- /dev/null
+++ b/test/mxc_rtc/doc/FSL-UT-RTC-003.txt
@@ -0,0 +1,37 @@
+FSL-UT-RTC-003
+~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+RTC time is reserved in system off state
+
+| Automated |
+No
+
+| Kernel Config Option |
+ CONFIG_RTC_DRV_SNVS
+
+| Hardware Dependency |
+The voltage of coin-cell battery is enough to keep RTC alive.
+
+| Test Procedure |
+Test whether target is able to resume from standyby by RTC wakeup
+
+.Test steps
+. Boot-up Linux kernel.
+. Type the command "date". It should return something like this "Thu Jan 1 00:00:30 UTC 1970".
+. Set the date to the current date and time. The command is "date yyyyMMDDhhmm" such as "date 201012091453" for 12/03/2010 14:53
+. Set the HW clock to current date and time by using the command "hwclock --systohc"
+. Make sure the new date and time are set by issuing "date" and then "hwclock --show"
+. Shutdown the system, including a power-cycle. You can use "poweroff" command
+. Restart the system with the Linux kernel. Run "date" command.
+
+| Expected Result |
+Check whether the date is reserved and right.
+
+|=====================================================================
+
+<<<
diff --git a/test/pm/Makefile b/test/pm/Makefile
new file mode 100644
index 0000000..4626cf9
--- /dev/null
+++ b/test/pm/Makefile
@@ -0,0 +1,23 @@
+# list of platforms which did not want this test case
+EXCLUDE_LIST:=
+
+ifeq (,$(findstring $(PLATFORM), $(EXCLUDE_LIST)))
+OBJS = \
+	$(OBJDIR)/suspend_quick_auto.sh \
+	$(OBJDIR)/suspend_random_auto.sh
+
+else
+OBJS =
+endif
+
+all : $(OBJS)
+
+.PHONY: clean
+clean :
+	rm -f $(OBJS)
+
+#
+# include the Rules
+#
+include ../make.rules
+
diff --git a/test/pm/suspend_quick_auto.sh b/test/pm/suspend_quick_auto.sh
new file mode 100755
index 0000000..9777471
--- /dev/null
+++ b/test/pm/suspend_quick_auto.sh
@@ -0,0 +1,13 @@
+#!/bin/sh
+# This will only run the quickhit tests.
+
+i=0;
+while [ "$i" -lt 20000 ];
+do
+   /unit_tests/rtcwakeup.out -d rtc0 -m mem -s 2;
+   i=`expr $i + 1`;
+   echo "==============================="
+   echo  suspend $i times
+   echo "==============================="
+done
+
diff --git a/test/pm/suspend_random_auto.sh b/test/pm/suspend_random_auto.sh
new file mode 100755
index 0000000..313ee21
--- /dev/null
+++ b/test/pm/suspend_random_auto.sh
@@ -0,0 +1,18 @@
+#!/bin/sh
+i=0;
+t=2;
+d=5;
+r=0;
+while [ "$i" -lt 20000 ];
+do
+	/unit_tests/rtcwakeup.out -d rtc0 -m mem -s $t;
+	sleep $d;
+	echo =============================
+	echo    suspend $i times;
+	echo =============================
+	i=`expr $i + 1`;
+	r=`date +%s`;
+	t=`expr $r % 10 + 2`;
+	d=`expr $r % 20 + 1`;
+	echo wakeup $t seconds, sleep $d seconds;
+done
-- 
1.8.0

