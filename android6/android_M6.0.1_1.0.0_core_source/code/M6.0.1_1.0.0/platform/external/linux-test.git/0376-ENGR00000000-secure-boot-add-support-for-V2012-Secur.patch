From 6d33991e056d772fac05bfe4c1dd47101e7213d2 Mon Sep 17 00:00:00 2001
From: Eric Sun <jian.sun@freescale.com>
Date: Mon, 24 Dec 2012 17:11:55 +0800
Subject: [PATCH 376/505] ENGR00000000 secure boot:add support for V2012
 Secure U-Boot

- Move the original support file to directory "V2009"
- Create New support file to directory V2012
    . change for the rename from "u-boot.bin" to "u-boot.imx"
    . the new mk_secure_uboot will read DDR load address from
    u-boot.imx, don't need to explicitly specify

Signed-off-by: Eric Sun <jian.sun@freescale.com>
---
 test/mxc_secureboot/README                         | 88 ---------------------
 test/mxc_secureboot/V2009/README                   | 90 ++++++++++++++++++++++
 test/mxc_secureboot/V2009/gen_fuse                 |  9 +++
 .../mxc_secureboot/V2009/templates/genivt_template | 13 ++++
 .../V2009/templates/habimagegen_template           | 15 ++++
 .../V2009/templates/habuimagegen_template          | 19 +++++
 .../V2009/templates/ubootcsf_template              | 31 ++++++++
 .../V2009/templates/uimagecsf_template             | 31 ++++++++
 test/mxc_secureboot/V2009/u-boot/mk_secure_uboot   | 50 ++++++++++++
 test/mxc_secureboot/V2009/uImage/mk_secure_uimage  | 56 ++++++++++++++
 test/mxc_secureboot/V2012/README                   | 84 ++++++++++++++++++++
 test/mxc_secureboot/V2012/gen_fuse                 |  9 +++
 .../mxc_secureboot/V2012/templates/genivt_template | 13 ++++
 .../V2012/templates/habimagegen_template           | 15 ++++
 .../V2012/templates/habuimagegen_template          | 19 +++++
 .../V2012/templates/ubootcsf_template              | 31 ++++++++
 .../V2012/templates/uimagecsf_template             | 31 ++++++++
 test/mxc_secureboot/V2012/u-boot/mk_secure_uboot   | 51 ++++++++++++
 test/mxc_secureboot/V2012/uImage/mk_secure_uimage  | 56 ++++++++++++++
 test/mxc_secureboot/gen_fuse                       |  9 ---
 test/mxc_secureboot/templates/genivt_template      | 13 ----
 test/mxc_secureboot/templates/habimagegen_template | 15 ----
 .../mxc_secureboot/templates/habuimagegen_template | 19 -----
 test/mxc_secureboot/templates/ubootcsf_template    | 31 --------
 test/mxc_secureboot/templates/uimagecsf_template   | 31 --------
 test/mxc_secureboot/u-boot/mk_secure_uboot         | 50 ------------
 test/mxc_secureboot/uImage/mk_secure_uimage        | 56 --------------
 27 files changed, 623 insertions(+), 312 deletions(-)
 delete mode 100644 test/mxc_secureboot/README
 create mode 100644 test/mxc_secureboot/V2009/README
 create mode 100755 test/mxc_secureboot/V2009/gen_fuse
 create mode 100644 test/mxc_secureboot/V2009/templates/genivt_template
 create mode 100644 test/mxc_secureboot/V2009/templates/habimagegen_template
 create mode 100644 test/mxc_secureboot/V2009/templates/habuimagegen_template
 create mode 100644 test/mxc_secureboot/V2009/templates/ubootcsf_template
 create mode 100644 test/mxc_secureboot/V2009/templates/uimagecsf_template
 create mode 100755 test/mxc_secureboot/V2009/u-boot/mk_secure_uboot
 create mode 100755 test/mxc_secureboot/V2009/uImage/mk_secure_uimage
 create mode 100644 test/mxc_secureboot/V2012/README
 create mode 100755 test/mxc_secureboot/V2012/gen_fuse
 create mode 100644 test/mxc_secureboot/V2012/templates/genivt_template
 create mode 100644 test/mxc_secureboot/V2012/templates/habimagegen_template
 create mode 100644 test/mxc_secureboot/V2012/templates/habuimagegen_template
 create mode 100644 test/mxc_secureboot/V2012/templates/ubootcsf_template
 create mode 100644 test/mxc_secureboot/V2012/templates/uimagecsf_template
 create mode 100755 test/mxc_secureboot/V2012/u-boot/mk_secure_uboot
 create mode 100755 test/mxc_secureboot/V2012/uImage/mk_secure_uimage
 delete mode 100755 test/mxc_secureboot/gen_fuse
 delete mode 100644 test/mxc_secureboot/templates/genivt_template
 delete mode 100644 test/mxc_secureboot/templates/habimagegen_template
 delete mode 100644 test/mxc_secureboot/templates/habuimagegen_template
 delete mode 100644 test/mxc_secureboot/templates/ubootcsf_template
 delete mode 100644 test/mxc_secureboot/templates/uimagecsf_template
 delete mode 100755 test/mxc_secureboot/u-boot/mk_secure_uboot
 delete mode 100755 test/mxc_secureboot/uImage/mk_secure_uimage

diff --git a/test/mxc_secureboot/README b/test/mxc_secureboot/README
deleted file mode 100644
index 3ce6ab3..0000000
--- a/test/mxc_secureboot/README
+++ /dev/null
@@ -1,88 +0,0 @@
-These files are for convinience for secure boot testers
-
-File Description
-------------------------------------
-"gen_fuse" :
-	This script should be copied to "BLN_CST_MAIN_01.00.00/crts" and
-        run to generate SRK footprint file "SRK_1_2_3_4_fuse.bin"
-	The footprint value is also dumped out, they should be written to
-	SRK fuse later
-
-"u-boot/mk_secure_uboot"
-"uImage/mk_secure_uimage"
-"templates/"
-	Automatic secure uboot and uImage generation scripts. These files
-	are used for dynamic authentication. It is more convinient and
-	adaptive comparing to the original static way.
-
-	Copy "u-boot/mk_secure_uboot" to "BLN_CST_MAIN_01.00.00/u-boot"
-	Copy "uImage/mk_secure_uimage" to "BLN_CST_MAIN_01.00.00/uImage"
-	Copy "templates/" to "BLN_CST_MAIN_01.00.00"
-
-	For generating secure uboot
-	    . copy "u-boot.bin" to "BLN_CST_MAIN_01.00.00/u-boot"
-	    . "./mk_secure_uboot 0x87800000"
-	        - where 0x87800000 is the DDR location where u-boot is
-		  copied to by ROM code, different from platform to platform
-	    . u-boot-signed-pad.bin will be generated. It is the u-boot image
-	      with signature
-
-	For generating secure uImage
-	    . copy "uImage" to "BLN_CST_MAIN_01.00.00/uImage"
-	    . "./mk_secure_uimage 0x80800000"
-	        - where 0x80800000 is the DDR location where uImage is
-		  copied to by UBoot, different from platform to platform
-	    . uimage-signed-pad.bin will be generated. It is the uImage
-	      with signature
-
-Image Layout
-------------------------------------
-U-Boot
-    +-------------------+      DDR_START
-    |                   |
-    |    U-Boot Image   |
-    |                   |
-    +-------------------+      DDR_START + UBOOT_SIZE
-    |    PADDING        |
-    +-------------------+      align to 0x1000
-    |    CSF Data       | \
-    +-------------------+  +-- CSF + Pad,  Size : 0x2000
-    |    PADDING        | /
-    +-------------------+
-
-uImage
-
-    +-------------------+      DDR_START
-    |                   |
-    |     uImage        |
-    |                   |
-    +-------------------+      DDR_START + UIMAGE_SIZE
-    |     PADDING       |
-    +-------------------+      align to 0x1000
-    |     IVT           | ---- Size : 0x20
-    +-------------------+
-    |     CSF Data      | \
-    +-------------------+  +-- CSF + Pad,  Size : 0x2000
-    |     PADDING       | /
-    +-------------------+
-
-DDR Location Parameters
-------------------------------------
-The DDR location parameter provided to "mk_secure_uboot" script is the
-"TEXT_BASE" defined in board/freescale/<plat_name>/config.mk
-
-	MX6Q/DL ARM2 Socket Board		MX6SL ARM2 Socket Board
-	-------------------------		-------------------------
-	0x27800000				0x87800000
-
-The DDR location parameter provided to "mk_secure_uimage" script is the
-"CONFIG_LOADADDR" defined in include/configs/<plat_name>.h (default). And
-can be changed in u-boot command line by "setenv loadaddr=..." with valid
-physical address. The following are the default values
-
-	MX6Q/DL ARM2 Socket Board		MX6SL ARM2 Socket Board
-	-------------------------		-------------------------
-	0x10800000				0x80800000
-
-Please refer to "MX6 Linux High Assurance Boot (HAB) User Guide" for
-detailed test steps.
diff --git a/test/mxc_secureboot/V2009/README b/test/mxc_secureboot/V2009/README
new file mode 100644
index 0000000..b8e1162
--- /dev/null
+++ b/test/mxc_secureboot/V2009/README
@@ -0,0 +1,90 @@
+These files are for convinience for secure boot testers
+
+File Description
+------------------------------------
+"gen_fuse" :
+	This script should be copied to "BLN_CST_MAIN_01.00.00/crts" and
+        run to generate SRK footprint file "SRK_1_2_3_4_fuse.bin"
+	The footprint value is also dumped out, they should be written to
+	SRK fuse later
+
+"u-boot/mk_secure_uboot"
+"uImage/mk_secure_uimage"
+"templates/"
+	Automatic secure uboot and uImage generation scripts. These files
+	are used for dynamic authentication. It is more convinient and
+	adaptive comparing to the original static way.
+
+	Copy "u-boot/mk_secure_uboot" to "BLN_CST_MAIN_01.00.00/u-boot"
+	Copy "uImage/mk_secure_uimage" to "BLN_CST_MAIN_01.00.00/uImage"
+	Copy "templates/" to "BLN_CST_MAIN_01.00.00"
+
+Secure Boot Genreation
+------------------------------------
+For generating secure uboot
+    . copy "u-boot.bin" to "BLN_CST_MAIN_01.00.00/u-boot"
+    . "./mk_secure_uboot 0x87800000"
+	- where 0x87800000 is the DDR location where u-boot is
+	  copied to by ROM code, different from platform to platform
+    . u-boot-signed-pad.bin will be generated. It is the u-boot image
+      with signature
+
+For generating secure uImage
+    . copy "uImage" to "BLN_CST_MAIN_01.00.00/uImage"
+    . "./mk_secure_uimage 0x80800000"
+	- where 0x80800000 is the DDR location where uImage is
+	  copied to by UBoot, different from platform to platform
+    . uimage-signed-pad.bin will be generated. It is the uImage
+      with signature
+
+Image Layout
+------------------------------------
+U-Boot
+    +-------------------+      DDR_START
+    |                   |
+    |    U-Boot Image   |
+    |                   |
+    +-------------------+      DDR_START + UBOOT_SIZE
+    |    PADDING        |
+    +-------------------+      align to 0x1000
+    |    CSF Data       | \
+    +-------------------+  +-- CSF + Pad,  Size : 0x2000
+    |    PADDING        | /
+    +-------------------+
+
+uImage
+
+    +-------------------+      DDR_START
+    |                   |
+    |     uImage        |
+    |                   |
+    +-------------------+      DDR_START + UIMAGE_SIZE
+    |     PADDING       |
+    +-------------------+      align to 0x1000
+    |     IVT           | ---- Size : 0x20
+    +-------------------+
+    |     CSF Data      | \
+    +-------------------+  +-- CSF + Pad,  Size : 0x2000
+    |     PADDING       | /
+    +-------------------+
+
+DDR Location Parameters
+------------------------------------
+The DDR location parameter provided to "mk_secure_uboot" script is the
+"TEXT_BASE" defined in board/freescale/<plat_name>/config.mk
+
+	MX6Q/DL ARM2 Socket Board		MX6SL ARM2 Socket Board
+	-------------------------		-------------------------
+	0x27800000				0x87800000
+
+The DDR location parameter provided to "mk_secure_uimage" script is the
+"CONFIG_LOADADDR" defined in include/configs/<plat_name>.h (default). And
+can be changed in u-boot command line by "setenv loadaddr=..." with valid
+physical address. The following are the default values
+
+	MX6Q/DL ARM2 Socket Board		MX6SL ARM2 Socket Board
+	-------------------------		-------------------------
+	0x10800000				0x80800000
+
+Please refer to "MX6 Linux High Assurance Boot (HAB) User Guide" for
+detailed test steps.
diff --git a/test/mxc_secureboot/V2009/gen_fuse b/test/mxc_secureboot/V2009/gen_fuse
new file mode 100755
index 0000000..372f9c2
--- /dev/null
+++ b/test/mxc_secureboot/V2009/gen_fuse
@@ -0,0 +1,9 @@
+#! /bin/bash
+
+# Copy this script to "BLN_CST_MAIN_01.00.00/crts" and run to generate fuse file SRK_1_2_3_4_fuse.bin
+echo "Generate SRK Fuse file"
+../linux/srktool -h 4 -t SRK_1_2_3_4_table.bin -e SRK_1_2_3_4_fuse.bin -d sha256 -c ./SRK1_sha256_2048_65537_v3_ca_crt.pem,./SRK2_sha256_2048_65537_v3_ca_crt.pem,./SRK3_sha256_2048_65537_v3_ca_crt.pem,./SRK4_sha256_2048_65537_v3_ca_crt.pem -f 1
+
+# Dump values to be flashed into HW_OCOTP_SRK
+echo "Value to be written to HW_OCOTP_SRK0~7"
+hexdump -e '/4 "0x"' -e '/4  "%X""\n"' SRK_1_2_3_4_fuse.bin
diff --git a/test/mxc_secureboot/V2009/templates/genivt_template b/test/mxc_secureboot/V2009/templates/genivt_template
new file mode 100644
index 0000000..9d06107
--- /dev/null
+++ b/test/mxc_secureboot/V2009/templates/genivt_template
@@ -0,0 +1,13 @@
+#! /usr/bin/perl -w
+use strict;
+
+open(my $out, '>:raw', 'ivt.bin') or die "Unable to open: $!";
+print $out pack("V", 0x402000D1);	# Signature
+print $out pack("V", %jump_addr%);	# Jump Location
+print $out pack("V", 0x0);		# Reserved
+print $out pack("V", 0x0);		# DCD pointer
+print $out pack("V", 0x0);		# Boot Data
+print $out pack("V", %self_ptr%);	# Self Pointer
+print $out pack("V", %csf_ptr%);	# CSF Pointer
+print $out pack("V", 0x0);		# Reserved
+close($out);
diff --git a/test/mxc_secureboot/V2009/templates/habimagegen_template b/test/mxc_secureboot/V2009/templates/habimagegen_template
new file mode 100644
index 0000000..a325e96
--- /dev/null
+++ b/test/mxc_secureboot/V2009/templates/habimagegen_template
@@ -0,0 +1,15 @@
+#! /bin/bash
+
+echo "extend u-boot to %pad_len%..."
+objcopy -I binary -O binary --pad-to %pad_len% --gap-fill=0x5A u-boot.bin u-boot-pad.bin
+
+echo "generate csf data..."
+../linux/cst --o u-boot_csf.bin < u-boot.csf
+
+echo "merge image and csf data..."
+cat u-boot-pad.bin u-boot_csf.bin > u-boot-signed.bin
+
+echo "extend final image to %sig_len%..."
+objcopy -I binary -O binary --pad-to %sig_len% --gap-fill=0x5A u-boot-signed.bin u-boot-signed-pad.bin
+
+echo "u-boot-signed-pad.bin is ready"
diff --git a/test/mxc_secureboot/V2009/templates/habuimagegen_template b/test/mxc_secureboot/V2009/templates/habuimagegen_template
new file mode 100644
index 0000000..a1f54c6
--- /dev/null
+++ b/test/mxc_secureboot/V2009/templates/habuimagegen_template
@@ -0,0 +1,19 @@
+#! /bin/bash
+
+echo "extend uImage to %pad_len%..."
+objcopy -I binary -O binary --pad-to %pad_len% --gap-fill=0x5A uImage uImage-pad.bin
+
+echo "generate IVT"
+./genIVT
+
+echo "attach IVT..."
+cat uImage-pad.bin ivt.bin > uImage-pad-ivt.bin
+
+echo "generate csf data..."
+../linux/cst --o uImage_csf.bin < uImage.csf
+
+echo "merge image and csf data..."
+cat uImage-pad-ivt.bin uImage_csf.bin > uImage-signed.bin
+
+echo "extend final image to %sig_len%..."
+objcopy -I binary -O binary --pad-to %sig_len% --gap-fill=0x5A uImage-signed.bin uImage-signed-pad.bin
diff --git a/test/mxc_secureboot/V2009/templates/ubootcsf_template b/test/mxc_secureboot/V2009/templates/ubootcsf_template
new file mode 100644
index 0000000..56f7e28
--- /dev/null
+++ b/test/mxc_secureboot/V2009/templates/ubootcsf_template
@@ -0,0 +1,31 @@
+[Header]
+    Version = 4.0
+    Security Configuration = Open
+    Hash Algorithm = sha256
+    Engine Configuration = 0
+    Certificate Format = X509
+    Signature Format = CMS
+
+[Install SRK]
+    File = "../crts/SRK_1_2_3_4_table.bin"
+    Source index = 0
+
+[Install CSFK]
+    File = "../crts/CSF1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+[Authenticate CSF]
+
+[Install Key]
+    Verification index = 0
+    Target index = 2
+    File = "../crts/IMG1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+# Sign padded u-boot starting at the IVT through to the end with
+# length = %auth_len%
+# This covers the essential parts: IVT, boot data and DCD.
+# Blocks have the following definition:
+#    Image block start address on i.MX, Offset from start of image file,
+#    Length of block in bytes, image data file
+[Authenticate Data]
+    Verification index = 2
+    Blocks = %ram_start% %image_offset% %auth_len% "u-boot-pad.bin"
diff --git a/test/mxc_secureboot/V2009/templates/uimagecsf_template b/test/mxc_secureboot/V2009/templates/uimagecsf_template
new file mode 100644
index 0000000..a927ef1
--- /dev/null
+++ b/test/mxc_secureboot/V2009/templates/uimagecsf_template
@@ -0,0 +1,31 @@
+[Header]
+    Version = 4.0
+    Security Configuration = Open
+    Hash Algorithm = sha256
+    Engine Configuration = 0
+    Certificate Format = X509
+    Signature Format = CMS
+
+[Install SRK]
+    File = "../crts/SRK_1_2_3_4_table.bin"
+    Source index = 0
+
+[Install CSFK]
+    File = "../crts/CSF1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+[Authenticate CSF]
+
+[Install Key]
+    Verification index = 0
+    Target index = 2
+    File = "../crts/IMG1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+# Sign padded uImage start at address %ddr_addr%
+# length = %auth_len%
+# This covers the essential parts: original uImage and the attached IVT
+# Blocks have the following definition:
+#    Image block start address on i.MX, Offset from start of image file,
+#    Length of block in bytes, image data file
+[Authenticate Data]
+    Verification index = 2
+    Blocks = %ddr_addr% 0x0 %auth_len% "uImage-pad-ivt.bin"
diff --git a/test/mxc_secureboot/V2009/u-boot/mk_secure_uboot b/test/mxc_secureboot/V2009/u-boot/mk_secure_uboot
new file mode 100755
index 0000000..a1e5955
--- /dev/null
+++ b/test/mxc_secureboot/V2009/u-boot/mk_secure_uboot
@@ -0,0 +1,50 @@
+#! /bin/bash
+
+if [ $# != 1 ]
+then
+	printf "	Command Syntax:\n"
+	printf "	    mk_secure_uboot <DDR_ADDR>\n"
+	printf "	        DDR_ADDR : ddr address where u-boot is copied to RAM by ROM code\n"
+	printf "	Please try again\n"
+	exit
+fi
+
+let ddr_addr=$1
+
+if [ ! -f u-boot.bin ]
+then
+	printf "File \"u-boot.bin\" does not exist. Copy it from u-boot directory and try again\n"
+	exit 1
+fi
+printf "Make Sure Your \"u-boot.bin\" is up to date...\n"
+
+# Calculate the size
+let uboot_size=$(ls -lct u-boot.bin | awk '{print $5}')
+let pad_len=$((uboot_size - uboot_size % 0x1000 + 0x1000)) # align to 0x1000
+let sig_len=$((pad_len + 0x2000))
+let ivt_offset=0x400
+let auth_len=$((pad_len - ivt_offset))
+let ivt_start=$((ddr_addr + ivt_offset))
+
+# change value to hex string
+pad_len=`printf "0x%X" ${pad_len}`
+sig_len=`printf "0x%X" ${sig_len}`
+auth_len=`printf "0x%X" ${auth_len}`
+ivt_offset=`printf "0x%X" ${ivt_offset}`
+ivt_start=`printf "0x%X" ${ivt_start}`
+
+# Create habimagegen
+sed -e s/%pad_len%/${pad_len}/g -e s/%sig_len%/${sig_len}/g ../templates/habimagegen_template > habimagegen
+chmod +x habimagegen
+
+# Create u-boot.csf
+sed -e s/%ram_start%/${ivt_start}/g -e s/%image_offset%/${ivt_offset}/g -e s/%auth_len%/${auth_len}/g ../templates/ubootcsf_template > u-boot.csf
+
+# Generate secure boot
+./habimagegen
+
+# Remove temperory files
+rm -f habimagegen u-boot.csf u-boot_csf.bin u-boot-pad.bin u-boot-signed.bin
+
+# OK
+printf "U-Boot image with Signature \"u-boot-signed-pad.bin\" is ready to use\n"
diff --git a/test/mxc_secureboot/V2009/uImage/mk_secure_uimage b/test/mxc_secureboot/V2009/uImage/mk_secure_uimage
new file mode 100755
index 0000000..2f0857f
--- /dev/null
+++ b/test/mxc_secureboot/V2009/uImage/mk_secure_uimage
@@ -0,0 +1,56 @@
+#! /bin/bash
+if [ $# != 1 ]
+then
+	printf "	Command Syntax:\n"
+	printf "	    mk_secure_uimage <DDR_ADDR>\n"
+	printf "	        DDR_ADDR : ddr address where uImage is copied to RAM by U-Boot\n"
+	printf "	Please try again\n"
+	exit
+fi
+
+let ddr_addr=$1
+
+if [ ! -f uImage ]
+then
+	printf "File \"uImage\" does not exist. Copy it from u-boot directory and try again\n"
+	exit 1
+fi
+printf "Make Sure Your \"uImage\" is up to date...\n"
+
+# Calculate the size
+let uimage_size=$(ls -lct uImage | awk '{print $5}')
+let pad_len=$((uimage_size - uimage_size % 0x1000 + 0x1000)) # align to 0x1000
+let auth_len=$((pad_len + 0x20)) # +0x20 "IVT"
+let sig_len=$((auth_len + 0x2000))
+let self_ptr=$((ddr_addr + pad_len))
+let csf_ptr=$((ddr_addr + auth_len))
+let jump_addr=$((ddr_addr + 0x1000))
+
+# change value to hex string
+pad_len=`printf "0x%X" ${pad_len}`
+auth_len=`printf "0x%X" ${auth_len}`
+sig_len=`printf "0x%X" ${sig_len}`
+ddr_addr=`printf "0x%X" ${ddr_addr}`
+self_ptr=`printf "0x%X" ${self_ptr}`
+csf_ptr=`printf "0x%X" ${csf_ptr}`
+jump_addr=`printf "0x%X" ${jump_addr}`
+
+# Create habUimagegen
+sed -e s/%pad_len%/${pad_len}/g -e s/%sig_len%/${sig_len}/g ../templates/habuimagegen_template > habUImageGen
+chmod +x habUImageGen
+
+# Create u-boot.csf
+sed -e s/%ddr_addr%/${ddr_addr}/g -e s/%auth_len%/${auth_len}/g ../templates/uimagecsf_template > uImage.csf
+
+# Create genIVT
+sed -e s/%jump_addr%/${jump_addr}/g -e s/%self_ptr%/${self_ptr}/g -e s/%csf_ptr%/${csf_ptr}/g ../templates/genivt_template > genIVT
+chmod +x genIVT
+
+# Generate secure boot
+./habUImageGen
+
+# Remove temperory files
+rm -f genIVT habUImageGen uImage.csf uImage-pad.bin ivt.bin uImage-pad-ivt.bin uImage_csf.bin uImage-signed.bin
+
+# OK
+printf "uImage with Signature \"uImage-signed-pad.bin\" is ready to use\n"
diff --git a/test/mxc_secureboot/V2012/README b/test/mxc_secureboot/V2012/README
new file mode 100644
index 0000000..746613c
--- /dev/null
+++ b/test/mxc_secureboot/V2012/README
@@ -0,0 +1,84 @@
+These files are for convinience for secure boot testers
+
+File Description
+------------------------------------
+"gen_fuse" :
+	This script should be copied to "BLN_CST_MAIN_01.00.00/crts" and
+        run to generate SRK footprint file "SRK_1_2_3_4_fuse.bin"
+	The footprint value is also dumped out, they should be written to
+	SRK fuse later
+
+"u-boot/mk_secure_uboot"
+"uImage/mk_secure_uimage"
+"templates/"
+	Automatic secure uboot and uImage generation scripts. These files
+	are used for dynamic authentication. It is more convinient and
+	adaptive comparing to the original static way.
+
+	Copy "u-boot/mk_secure_uboot" to "BLN_CST_MAIN_01.00.00/u-boot"
+	Copy "uImage/mk_secure_uimage" to "BLN_CST_MAIN_01.00.00/uImage"
+	Copy "templates/" to "BLN_CST_MAIN_01.00.00"
+
+Secure Boot Genreation
+------------------------------------
+For generating secure uboot
+    . copy "u-boot.imx" to "BLN_CST_MAIN_01.00.00/u-boot"
+    . "./mk_secure_uboot"
+	- the script will auto read the DDR load address from u-boot.imx
+    . u-boot-signed-pad.imx will be generated. It is the u-boot image
+      with signature
+    . it is slightly differrent the script for V2009, where we should
+      explicityly specify U-Boot DDR load address as a parameter
+
+For generating secure uImage
+    . copy "uImage" to "BLN_CST_MAIN_01.00.00/uImage"
+    . "./mk_secure_uimage 0x10800000"
+	- where 0x10800000 is the DDR location where uImage is
+	  copied to by UBoot, different from platform to platform
+    . uimage-signed-pad.bin will be generated. It is the uImage
+      with signature
+
+Image Layout
+------------------------------------
+U-Boot
+    +-------------------+      DDR_START
+    |                   |
+    |    U-Boot Image   |
+    |                   |
+    +-------------------+      DDR_START + UBOOT_SIZE
+    |    PADDING        |
+    +-------------------+      align to 0x1000
+    |    CSF Data       | \
+    +-------------------+  +-- CSF + Pad,  Size : 0x2000
+    |    PADDING        | /
+    +-------------------+
+
+uImage
+
+    +-------------------+      DDR_START
+    |                   |
+    |     uImage        |
+    |                   |
+    +-------------------+      DDR_START + UIMAGE_SIZE
+    |     PADDING       |
+    +-------------------+      align to 0x1000
+    |     IVT           | ---- Size : 0x20
+    +-------------------+
+    |     CSF Data      | \
+    +-------------------+  +-- CSF + Pad,  Size : 0x2000
+    |     PADDING       | /
+    +-------------------+
+
+DDR Location Parameters
+------------------------------------
+The DDR location parameter provided to "mk_secure_uimage" script is the
+"CONFIG_LOADADDR" defined in include/configs/<plat_name>.h (default). And
+can be changed in u-boot command line by "setenv loadaddr=..." with valid
+physical address. The following are the default values
+
+	MX6Q/DL ARM2 Socket Board		MX6SL ARM2 Socket Board
+	-------------------------		-------------------------
+	0x10800000				0x80800000
+
+Please refer to "MX6 Linux High Assurance Boot (HAB) User Guide" for
+detailed test steps.
diff --git a/test/mxc_secureboot/V2012/gen_fuse b/test/mxc_secureboot/V2012/gen_fuse
new file mode 100755
index 0000000..372f9c2
--- /dev/null
+++ b/test/mxc_secureboot/V2012/gen_fuse
@@ -0,0 +1,9 @@
+#! /bin/bash
+
+# Copy this script to "BLN_CST_MAIN_01.00.00/crts" and run to generate fuse file SRK_1_2_3_4_fuse.bin
+echo "Generate SRK Fuse file"
+../linux/srktool -h 4 -t SRK_1_2_3_4_table.bin -e SRK_1_2_3_4_fuse.bin -d sha256 -c ./SRK1_sha256_2048_65537_v3_ca_crt.pem,./SRK2_sha256_2048_65537_v3_ca_crt.pem,./SRK3_sha256_2048_65537_v3_ca_crt.pem,./SRK4_sha256_2048_65537_v3_ca_crt.pem -f 1
+
+# Dump values to be flashed into HW_OCOTP_SRK
+echo "Value to be written to HW_OCOTP_SRK0~7"
+hexdump -e '/4 "0x"' -e '/4  "%X""\n"' SRK_1_2_3_4_fuse.bin
diff --git a/test/mxc_secureboot/V2012/templates/genivt_template b/test/mxc_secureboot/V2012/templates/genivt_template
new file mode 100644
index 0000000..9d06107
--- /dev/null
+++ b/test/mxc_secureboot/V2012/templates/genivt_template
@@ -0,0 +1,13 @@
+#! /usr/bin/perl -w
+use strict;
+
+open(my $out, '>:raw', 'ivt.bin') or die "Unable to open: $!";
+print $out pack("V", 0x402000D1);	# Signature
+print $out pack("V", %jump_addr%);	# Jump Location
+print $out pack("V", 0x0);		# Reserved
+print $out pack("V", 0x0);		# DCD pointer
+print $out pack("V", 0x0);		# Boot Data
+print $out pack("V", %self_ptr%);	# Self Pointer
+print $out pack("V", %csf_ptr%);	# CSF Pointer
+print $out pack("V", 0x0);		# Reserved
+close($out);
diff --git a/test/mxc_secureboot/V2012/templates/habimagegen_template b/test/mxc_secureboot/V2012/templates/habimagegen_template
new file mode 100644
index 0000000..ecefbc4
--- /dev/null
+++ b/test/mxc_secureboot/V2012/templates/habimagegen_template
@@ -0,0 +1,15 @@
+#! /bin/bash
+
+echo "extend u-boot to %pad_len%..."
+objcopy -I binary -O binary --pad-to %pad_len% --gap-fill=0x5A u-boot.imx u-boot-pad.imx
+
+echo "generate csf data..."
+../linux/cst --o u-boot_csf.bin < u-boot.csf
+
+echo "merge image and csf data..."
+cat u-boot-pad.imx u-boot_csf.bin > u-boot-signed.imx
+
+echo "extend final image to %sig_len%..."
+objcopy -I binary -O binary --pad-to %sig_len% --gap-fill=0x5A u-boot-signed.imx u-boot-signed-pad.imx
+
+echo "u-boot-signed-pad.imx is ready"
diff --git a/test/mxc_secureboot/V2012/templates/habuimagegen_template b/test/mxc_secureboot/V2012/templates/habuimagegen_template
new file mode 100644
index 0000000..a1f54c6
--- /dev/null
+++ b/test/mxc_secureboot/V2012/templates/habuimagegen_template
@@ -0,0 +1,19 @@
+#! /bin/bash
+
+echo "extend uImage to %pad_len%..."
+objcopy -I binary -O binary --pad-to %pad_len% --gap-fill=0x5A uImage uImage-pad.bin
+
+echo "generate IVT"
+./genIVT
+
+echo "attach IVT..."
+cat uImage-pad.bin ivt.bin > uImage-pad-ivt.bin
+
+echo "generate csf data..."
+../linux/cst --o uImage_csf.bin < uImage.csf
+
+echo "merge image and csf data..."
+cat uImage-pad-ivt.bin uImage_csf.bin > uImage-signed.bin
+
+echo "extend final image to %sig_len%..."
+objcopy -I binary -O binary --pad-to %sig_len% --gap-fill=0x5A uImage-signed.bin uImage-signed-pad.bin
diff --git a/test/mxc_secureboot/V2012/templates/ubootcsf_template b/test/mxc_secureboot/V2012/templates/ubootcsf_template
new file mode 100644
index 0000000..a7ed7c9
--- /dev/null
+++ b/test/mxc_secureboot/V2012/templates/ubootcsf_template
@@ -0,0 +1,31 @@
+[Header]
+    Version = 4.0
+    Security Configuration = Open
+    Hash Algorithm = sha256
+    Engine Configuration = 0
+    Certificate Format = X509
+    Signature Format = CMS
+
+[Install SRK]
+    File = "../crts/SRK_1_2_3_4_table.bin"
+    Source index = 0
+
+[Install CSFK]
+    File = "../crts/CSF1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+[Authenticate CSF]
+
+[Install Key]
+    Verification index = 0
+    Target index = 2
+    File = "../crts/IMG1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+# Sign padded u-boot starting at the IVT through to the end with
+# length = %auth_len%
+# This covers the essential parts: IVT, boot data and DCD.
+# Blocks have the following definition:
+#    Image block start address on i.MX, Offset from start of image file,
+#    Length of block in bytes, image data file
+[Authenticate Data]
+    Verification index = 2
+    Blocks = %ram_start% %image_offset% %auth_len% "u-boot-pad.imx"
diff --git a/test/mxc_secureboot/V2012/templates/uimagecsf_template b/test/mxc_secureboot/V2012/templates/uimagecsf_template
new file mode 100644
index 0000000..a927ef1
--- /dev/null
+++ b/test/mxc_secureboot/V2012/templates/uimagecsf_template
@@ -0,0 +1,31 @@
+[Header]
+    Version = 4.0
+    Security Configuration = Open
+    Hash Algorithm = sha256
+    Engine Configuration = 0
+    Certificate Format = X509
+    Signature Format = CMS
+
+[Install SRK]
+    File = "../crts/SRK_1_2_3_4_table.bin"
+    Source index = 0
+
+[Install CSFK]
+    File = "../crts/CSF1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+[Authenticate CSF]
+
+[Install Key]
+    Verification index = 0
+    Target index = 2
+    File = "../crts/IMG1_1_sha256_2048_65537_v3_usr_crt.pem"
+
+# Sign padded uImage start at address %ddr_addr%
+# length = %auth_len%
+# This covers the essential parts: original uImage and the attached IVT
+# Blocks have the following definition:
+#    Image block start address on i.MX, Offset from start of image file,
+#    Length of block in bytes, image data file
+[Authenticate Data]
+    Verification index = 2
+    Blocks = %ddr_addr% 0x0 %auth_len% "uImage-pad-ivt.bin"
diff --git a/test/mxc_secureboot/V2012/u-boot/mk_secure_uboot b/test/mxc_secureboot/V2012/u-boot/mk_secure_uboot
new file mode 100755
index 0000000..5458178
--- /dev/null
+++ b/test/mxc_secureboot/V2012/u-boot/mk_secure_uboot
@@ -0,0 +1,51 @@
+#! /bin/bash
+
+if [ $# != 0 ]
+then
+	printf "	Command Syntax:\n"
+	printf "	    mk_secure_uboot\n"
+	printf "	Please try again\n"
+	exit
+fi
+
+
+if [ ! -f u-boot.imx ]
+then
+	printf "File \"u-boot.imx\" does not exist. Copy it from u-boot directory and try again\n"
+	exit 1
+fi
+printf "Make Sure Your \"u-boot.imx\" is up to date...\n"
+
+
+let ddr_addr=$(hexdump -n 4 -s 32 -e '/4 "0x%08x\t" "\n"' u-boot.imx)
+
+# Calculate the size
+let uboot_size=$(ls -lct u-boot.imx | awk '{print $5}')
+let pad_len=$(((uboot_size + 0xfff) & 0xfffff000)) # align to 0x1000
+let sig_len=$((pad_len + 0x2000))
+let ivt_offset=0x0
+let auth_len=$((pad_len - ivt_offset))
+let ivt_start=$((ddr_addr + 0x400))  # 0x400 is the boot medium blank space
+
+# change value to hex string
+pad_len=`printf "0x%X" ${pad_len}`
+sig_len=`printf "0x%X" ${sig_len}`
+auth_len=`printf "0x%X" ${auth_len}`
+ivt_offset=`printf "0x%X" ${ivt_offset}`
+ivt_start=`printf "0x%X" ${ivt_start}`
+
+# Create habimagegen
+sed -e s/%pad_len%/${pad_len}/g -e s/%sig_len%/${sig_len}/g ../templates/habimagegen_template > habimagegen
+chmod +x habimagegen
+
+# Create u-boot.csf
+sed -e s/%ram_start%/${ivt_start}/g -e s/%image_offset%/${ivt_offset}/g -e s/%auth_len%/${auth_len}/g ../templates/ubootcsf_template > u-boot.csf
+
+# Generate secure boot
+./habimagegen
+
+# Remove temperory files
+rm -f habimagegen u-boot.csf u-boot_csf.bin u-boot-pad.imx u-boot-signed.imx
+
+# OK
+printf "U-Boot image with Signature \"u-boot-signed-pad.imx\" is ready to use\n"
diff --git a/test/mxc_secureboot/V2012/uImage/mk_secure_uimage b/test/mxc_secureboot/V2012/uImage/mk_secure_uimage
new file mode 100755
index 0000000..2f0857f
--- /dev/null
+++ b/test/mxc_secureboot/V2012/uImage/mk_secure_uimage
@@ -0,0 +1,56 @@
+#! /bin/bash
+if [ $# != 1 ]
+then
+	printf "	Command Syntax:\n"
+	printf "	    mk_secure_uimage <DDR_ADDR>\n"
+	printf "	        DDR_ADDR : ddr address where uImage is copied to RAM by U-Boot\n"
+	printf "	Please try again\n"
+	exit
+fi
+
+let ddr_addr=$1
+
+if [ ! -f uImage ]
+then
+	printf "File \"uImage\" does not exist. Copy it from u-boot directory and try again\n"
+	exit 1
+fi
+printf "Make Sure Your \"uImage\" is up to date...\n"
+
+# Calculate the size
+let uimage_size=$(ls -lct uImage | awk '{print $5}')
+let pad_len=$((uimage_size - uimage_size % 0x1000 + 0x1000)) # align to 0x1000
+let auth_len=$((pad_len + 0x20)) # +0x20 "IVT"
+let sig_len=$((auth_len + 0x2000))
+let self_ptr=$((ddr_addr + pad_len))
+let csf_ptr=$((ddr_addr + auth_len))
+let jump_addr=$((ddr_addr + 0x1000))
+
+# change value to hex string
+pad_len=`printf "0x%X" ${pad_len}`
+auth_len=`printf "0x%X" ${auth_len}`
+sig_len=`printf "0x%X" ${sig_len}`
+ddr_addr=`printf "0x%X" ${ddr_addr}`
+self_ptr=`printf "0x%X" ${self_ptr}`
+csf_ptr=`printf "0x%X" ${csf_ptr}`
+jump_addr=`printf "0x%X" ${jump_addr}`
+
+# Create habUimagegen
+sed -e s/%pad_len%/${pad_len}/g -e s/%sig_len%/${sig_len}/g ../templates/habuimagegen_template > habUImageGen
+chmod +x habUImageGen
+
+# Create u-boot.csf
+sed -e s/%ddr_addr%/${ddr_addr}/g -e s/%auth_len%/${auth_len}/g ../templates/uimagecsf_template > uImage.csf
+
+# Create genIVT
+sed -e s/%jump_addr%/${jump_addr}/g -e s/%self_ptr%/${self_ptr}/g -e s/%csf_ptr%/${csf_ptr}/g ../templates/genivt_template > genIVT
+chmod +x genIVT
+
+# Generate secure boot
+./habUImageGen
+
+# Remove temperory files
+rm -f genIVT habUImageGen uImage.csf uImage-pad.bin ivt.bin uImage-pad-ivt.bin uImage_csf.bin uImage-signed.bin
+
+# OK
+printf "uImage with Signature \"uImage-signed-pad.bin\" is ready to use\n"
diff --git a/test/mxc_secureboot/gen_fuse b/test/mxc_secureboot/gen_fuse
deleted file mode 100755
index 372f9c2..0000000
--- a/test/mxc_secureboot/gen_fuse
+++ /dev/null
@@ -1,9 +0,0 @@
-#! /bin/bash
-
-# Copy this script to "BLN_CST_MAIN_01.00.00/crts" and run to generate fuse file SRK_1_2_3_4_fuse.bin
-echo "Generate SRK Fuse file"
-../linux/srktool -h 4 -t SRK_1_2_3_4_table.bin -e SRK_1_2_3_4_fuse.bin -d sha256 -c ./SRK1_sha256_2048_65537_v3_ca_crt.pem,./SRK2_sha256_2048_65537_v3_ca_crt.pem,./SRK3_sha256_2048_65537_v3_ca_crt.pem,./SRK4_sha256_2048_65537_v3_ca_crt.pem -f 1
-
-# Dump values to be flashed into HW_OCOTP_SRK
-echo "Value to be written to HW_OCOTP_SRK0~7"
-hexdump -e '/4 "0x"' -e '/4  "%X""\n"' SRK_1_2_3_4_fuse.bin
diff --git a/test/mxc_secureboot/templates/genivt_template b/test/mxc_secureboot/templates/genivt_template
deleted file mode 100644
index 9d06107..0000000
--- a/test/mxc_secureboot/templates/genivt_template
+++ /dev/null
@@ -1,13 +0,0 @@
-#! /usr/bin/perl -w
-use strict;
-
-open(my $out, '>:raw', 'ivt.bin') or die "Unable to open: $!";
-print $out pack("V", 0x402000D1);	# Signature
-print $out pack("V", %jump_addr%);	# Jump Location
-print $out pack("V", 0x0);		# Reserved
-print $out pack("V", 0x0);		# DCD pointer
-print $out pack("V", 0x0);		# Boot Data
-print $out pack("V", %self_ptr%);	# Self Pointer
-print $out pack("V", %csf_ptr%);	# CSF Pointer
-print $out pack("V", 0x0);		# Reserved
-close($out);
diff --git a/test/mxc_secureboot/templates/habimagegen_template b/test/mxc_secureboot/templates/habimagegen_template
deleted file mode 100644
index a325e96..0000000
--- a/test/mxc_secureboot/templates/habimagegen_template
+++ /dev/null
@@ -1,15 +0,0 @@
-#! /bin/bash
-
-echo "extend u-boot to %pad_len%..."
-objcopy -I binary -O binary --pad-to %pad_len% --gap-fill=0x5A u-boot.bin u-boot-pad.bin
-
-echo "generate csf data..."
-../linux/cst --o u-boot_csf.bin < u-boot.csf
-
-echo "merge image and csf data..."
-cat u-boot-pad.bin u-boot_csf.bin > u-boot-signed.bin
-
-echo "extend final image to %sig_len%..."
-objcopy -I binary -O binary --pad-to %sig_len% --gap-fill=0x5A u-boot-signed.bin u-boot-signed-pad.bin
-
-echo "u-boot-signed-pad.bin is ready"
diff --git a/test/mxc_secureboot/templates/habuimagegen_template b/test/mxc_secureboot/templates/habuimagegen_template
deleted file mode 100644
index a1f54c6..0000000
--- a/test/mxc_secureboot/templates/habuimagegen_template
+++ /dev/null
@@ -1,19 +0,0 @@
-#! /bin/bash
-
-echo "extend uImage to %pad_len%..."
-objcopy -I binary -O binary --pad-to %pad_len% --gap-fill=0x5A uImage uImage-pad.bin
-
-echo "generate IVT"
-./genIVT
-
-echo "attach IVT..."
-cat uImage-pad.bin ivt.bin > uImage-pad-ivt.bin
-
-echo "generate csf data..."
-../linux/cst --o uImage_csf.bin < uImage.csf
-
-echo "merge image and csf data..."
-cat uImage-pad-ivt.bin uImage_csf.bin > uImage-signed.bin
-
-echo "extend final image to %sig_len%..."
-objcopy -I binary -O binary --pad-to %sig_len% --gap-fill=0x5A uImage-signed.bin uImage-signed-pad.bin
diff --git a/test/mxc_secureboot/templates/ubootcsf_template b/test/mxc_secureboot/templates/ubootcsf_template
deleted file mode 100644
index 56f7e28..0000000
--- a/test/mxc_secureboot/templates/ubootcsf_template
+++ /dev/null
@@ -1,31 +0,0 @@
-[Header]
-    Version = 4.0
-    Security Configuration = Open
-    Hash Algorithm = sha256
-    Engine Configuration = 0
-    Certificate Format = X509
-    Signature Format = CMS
-
-[Install SRK]
-    File = "../crts/SRK_1_2_3_4_table.bin"
-    Source index = 0
-
-[Install CSFK]
-    File = "../crts/CSF1_1_sha256_2048_65537_v3_usr_crt.pem"
-
-[Authenticate CSF]
-
-[Install Key]
-    Verification index = 0
-    Target index = 2
-    File = "../crts/IMG1_1_sha256_2048_65537_v3_usr_crt.pem"
-
-# Sign padded u-boot starting at the IVT through to the end with
-# length = %auth_len%
-# This covers the essential parts: IVT, boot data and DCD.
-# Blocks have the following definition:
-#    Image block start address on i.MX, Offset from start of image file,
-#    Length of block in bytes, image data file
-[Authenticate Data]
-    Verification index = 2
-    Blocks = %ram_start% %image_offset% %auth_len% "u-boot-pad.bin"
diff --git a/test/mxc_secureboot/templates/uimagecsf_template b/test/mxc_secureboot/templates/uimagecsf_template
deleted file mode 100644
index a927ef1..0000000
--- a/test/mxc_secureboot/templates/uimagecsf_template
+++ /dev/null
@@ -1,31 +0,0 @@
-[Header]
-    Version = 4.0
-    Security Configuration = Open
-    Hash Algorithm = sha256
-    Engine Configuration = 0
-    Certificate Format = X509
-    Signature Format = CMS
-
-[Install SRK]
-    File = "../crts/SRK_1_2_3_4_table.bin"
-    Source index = 0
-
-[Install CSFK]
-    File = "../crts/CSF1_1_sha256_2048_65537_v3_usr_crt.pem"
-
-[Authenticate CSF]
-
-[Install Key]
-    Verification index = 0
-    Target index = 2
-    File = "../crts/IMG1_1_sha256_2048_65537_v3_usr_crt.pem"
-
-# Sign padded uImage start at address %ddr_addr%
-# length = %auth_len%
-# This covers the essential parts: original uImage and the attached IVT
-# Blocks have the following definition:
-#    Image block start address on i.MX, Offset from start of image file,
-#    Length of block in bytes, image data file
-[Authenticate Data]
-    Verification index = 2
-    Blocks = %ddr_addr% 0x0 %auth_len% "uImage-pad-ivt.bin"
diff --git a/test/mxc_secureboot/u-boot/mk_secure_uboot b/test/mxc_secureboot/u-boot/mk_secure_uboot
deleted file mode 100755
index a1e5955..0000000
--- a/test/mxc_secureboot/u-boot/mk_secure_uboot
+++ /dev/null
@@ -1,50 +0,0 @@
-#! /bin/bash
-
-if [ $# != 1 ]
-then
-	printf "	Command Syntax:\n"
-	printf "	    mk_secure_uboot <DDR_ADDR>\n"
-	printf "	        DDR_ADDR : ddr address where u-boot is copied to RAM by ROM code\n"
-	printf "	Please try again\n"
-	exit
-fi
-
-let ddr_addr=$1
-
-if [ ! -f u-boot.bin ]
-then
-	printf "File \"u-boot.bin\" does not exist. Copy it from u-boot directory and try again\n"
-	exit 1
-fi
-printf "Make Sure Your \"u-boot.bin\" is up to date...\n"
-
-# Calculate the size
-let uboot_size=$(ls -lct u-boot.bin | awk '{print $5}')
-let pad_len=$((uboot_size - uboot_size % 0x1000 + 0x1000)) # align to 0x1000
-let sig_len=$((pad_len + 0x2000))
-let ivt_offset=0x400
-let auth_len=$((pad_len - ivt_offset))
-let ivt_start=$((ddr_addr + ivt_offset))
-
-# change value to hex string
-pad_len=`printf "0x%X" ${pad_len}`
-sig_len=`printf "0x%X" ${sig_len}`
-auth_len=`printf "0x%X" ${auth_len}`
-ivt_offset=`printf "0x%X" ${ivt_offset}`
-ivt_start=`printf "0x%X" ${ivt_start}`
-
-# Create habimagegen
-sed -e s/%pad_len%/${pad_len}/g -e s/%sig_len%/${sig_len}/g ../templates/habimagegen_template > habimagegen
-chmod +x habimagegen
-
-# Create u-boot.csf
-sed -e s/%ram_start%/${ivt_start}/g -e s/%image_offset%/${ivt_offset}/g -e s/%auth_len%/${auth_len}/g ../templates/ubootcsf_template > u-boot.csf
-
-# Generate secure boot
-./habimagegen
-
-# Remove temperory files
-rm -f habimagegen u-boot.csf u-boot_csf.bin u-boot-pad.bin u-boot-signed.bin
-
-# OK
-printf "U-Boot image with Signature \"u-boot-signed-pad.bin\" is ready to use\n"
diff --git a/test/mxc_secureboot/uImage/mk_secure_uimage b/test/mxc_secureboot/uImage/mk_secure_uimage
deleted file mode 100755
index 2f0857f..0000000
--- a/test/mxc_secureboot/uImage/mk_secure_uimage
+++ /dev/null
@@ -1,56 +0,0 @@
-#! /bin/bash
-if [ $# != 1 ]
-then
-	printf "	Command Syntax:\n"
-	printf "	    mk_secure_uimage <DDR_ADDR>\n"
-	printf "	        DDR_ADDR : ddr address where uImage is copied to RAM by U-Boot\n"
-	printf "	Please try again\n"
-	exit
-fi
-
-let ddr_addr=$1
-
-if [ ! -f uImage ]
-then
-	printf "File \"uImage\" does not exist. Copy it from u-boot directory and try again\n"
-	exit 1
-fi
-printf "Make Sure Your \"uImage\" is up to date...\n"
-
-# Calculate the size
-let uimage_size=$(ls -lct uImage | awk '{print $5}')
-let pad_len=$((uimage_size - uimage_size % 0x1000 + 0x1000)) # align to 0x1000
-let auth_len=$((pad_len + 0x20)) # +0x20 "IVT"
-let sig_len=$((auth_len + 0x2000))
-let self_ptr=$((ddr_addr + pad_len))
-let csf_ptr=$((ddr_addr + auth_len))
-let jump_addr=$((ddr_addr + 0x1000))
-
-# change value to hex string
-pad_len=`printf "0x%X" ${pad_len}`
-auth_len=`printf "0x%X" ${auth_len}`
-sig_len=`printf "0x%X" ${sig_len}`
-ddr_addr=`printf "0x%X" ${ddr_addr}`
-self_ptr=`printf "0x%X" ${self_ptr}`
-csf_ptr=`printf "0x%X" ${csf_ptr}`
-jump_addr=`printf "0x%X" ${jump_addr}`
-
-# Create habUimagegen
-sed -e s/%pad_len%/${pad_len}/g -e s/%sig_len%/${sig_len}/g ../templates/habuimagegen_template > habUImageGen
-chmod +x habUImageGen
-
-# Create u-boot.csf
-sed -e s/%ddr_addr%/${ddr_addr}/g -e s/%auth_len%/${auth_len}/g ../templates/uimagecsf_template > uImage.csf
-
-# Create genIVT
-sed -e s/%jump_addr%/${jump_addr}/g -e s/%self_ptr%/${self_ptr}/g -e s/%csf_ptr%/${csf_ptr}/g ../templates/genivt_template > genIVT
-chmod +x genIVT
-
-# Generate secure boot
-./habUImageGen
-
-# Remove temperory files
-rm -f genIVT habUImageGen uImage.csf uImage-pad.bin ivt.bin uImage-pad-ivt.bin uImage_csf.bin uImage-signed.bin
-
-# OK
-printf "uImage with Signature \"uImage-signed-pad.bin\" is ready to use\n"
-- 
1.8.0

