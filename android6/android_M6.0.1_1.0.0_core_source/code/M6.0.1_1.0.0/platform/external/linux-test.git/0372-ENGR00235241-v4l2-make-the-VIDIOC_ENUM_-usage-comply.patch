From d762da8223725d3056e346e75975f7fc9b47f58f Mon Sep 17 00:00:00 2001
From: Robby Cai <R63905@freescale.com>
Date: Wed, 5 Dec 2012 18:21:13 +0800
Subject: [PATCH 372/505] ENGR00235241 v4l2: make the VIDIOC_ENUM_* usage
 comply with the spec

make VIDIOC_ENUM_FMT and VIDIOC_ENUM_FRAMESIZES usage comply with the V4L2 spec.

Signed-off-by: Robby Cai <R63905@freescale.com>
---
 test/mxc_v4l2_test/mxc_v4l2_capture.c | 35 +++++++++++++++++-----------------
 test/mxc_v4l2_test/mxc_v4l2_overlay.c | 36 ++++++++++++++++++-----------------
 2 files changed, 37 insertions(+), 34 deletions(-)

diff --git a/test/mxc_v4l2_test/mxc_v4l2_capture.c b/test/mxc_v4l2_test/mxc_v4l2_capture.c
index b542b37..08197d4 100644
--- a/test/mxc_v4l2_test/mxc_v4l2_capture.c
+++ b/test/mxc_v4l2_test/mxc_v4l2_capture.c
@@ -74,6 +74,14 @@ int g_extra_pixel = 0;
 int g_capture_mode = 0;
 char g_v4l_device[100] = "/dev/video0";
 
+static int print_pixelformat(char *prefix, int val)
+{
+	printf("%s: %c%c%c%c\n", prefix ? prefix : "pixelformat",
+					val & 0xff,
+					(val >> 8) & 0xff,
+					(val >> 16) & 0xff,
+					(val >> 24) & 0xff);
+}
 
 int start_capturing(int fd_v4l)
 {
@@ -160,26 +168,19 @@ int v4l_capture_setup(void)
 	}
 	printf("sensor chip is %s\n", chip.match.name);
 
-	fsize.index = g_capture_mode;
-	if (ioctl(fd_v4l, VIDIOC_ENUM_FRAMESIZES, &fsize) < 0)
-	{
-	        printf("VIDIOC_ENUM_FRAMESIZES failed\n");
-	        return -1;
-	}
-
-	printf("sensor frame size is %dx%d\n", fsize.discrete.width,
+	printf("sensor supported frame size:\n");
+	fsize.index = 0;
+	while (ioctl(fd_v4l, VIDIOC_ENUM_FRAMESIZES, &fsize) >= 0) {
+		printf(" %dx%d\n", fsize.discrete.width,
 					       fsize.discrete.height);
+		fsize.index++;
+	}
 
-	ffmt.index = g_capture_mode;
-	if (ioctl(fd_v4l, VIDIOC_ENUM_FMT, &ffmt) < 0)
-	{
-	        printf("VIDIOC_ENUM_FMT failed\n");
-	        return -1;
+	ffmt.index = 0;
+	while (ioctl(fd_v4l, VIDIOC_ENUM_FMT, &ffmt) >= 0) {
+		print_pixelformat("sensor frame format", ffmt.pixelformat);
+		ffmt.index++;
 	}
-	if (ffmt.pixelformat == V4L2_PIX_FMT_YUYV)
-		printf("sensor frame format is YUYV\n");
-	else if (ffmt.pixelformat == V4L2_PIX_FMT_UYVY)
-		printf("sensor frame format is UYVY\n");
 
 	parm.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
 	parm.parm.capture.timeperframe.numerator = 1;
diff --git a/test/mxc_v4l2_test/mxc_v4l2_overlay.c b/test/mxc_v4l2_test/mxc_v4l2_overlay.c
index f9257da..71c056f 100644
--- a/test/mxc_v4l2_test/mxc_v4l2_overlay.c
+++ b/test/mxc_v4l2_test/mxc_v4l2_overlay.c
@@ -94,6 +94,15 @@ int alpha_buf_size = 0;
 int ctrl_c_rev = 0;
 int g_fd_fb_fg = 0;
 
+static int print_pixelformat(char *prefix, int val)
+{
+	printf("%s: %c%c%c%c\n", prefix ? prefix : "pixelformat",
+					val & 0xff,
+					(val >> 8) & 0xff,
+					(val >> 16) & 0xff,
+					(val >> 24) & 0xff);
+}
+
 void ctrl_c_handler(int signum, siginfo_t *info, void *myact)
 {
 	ctrl_c_rev = 1;
@@ -404,26 +413,19 @@ mxc_v4l_overlay_setup(struct v4l2_format *fmt)
 	struct v4l2_frmsizeenum fsize;
 	struct v4l2_fmtdesc ffmt;
 
-	fsize.index = g_capture_mode;
-	if (ioctl(fd_v4l, VIDIOC_ENUM_FRAMESIZES, &fsize) < 0)
-	{
-	        printf("VIDIOC_ENUM_FRAMESIZES failed\n");
-	        return TFAIL;
-	}
-
-	printf("sensor frame size is %dx%d\n", fsize.discrete.width,
+	printf("sensor supported frame size:\n");
+	fsize.index = 0;
+	while (ioctl(fd_v4l, VIDIOC_ENUM_FRAMESIZES, &fsize) >= 0) {
+		printf(" %dx%d\n", fsize.discrete.width,
 					       fsize.discrete.height);
+		fsize.index++;
+	}
 
-	ffmt.index = g_capture_mode;
-	if (ioctl(fd_v4l, VIDIOC_ENUM_FMT, &ffmt) < 0)
-	{
-	        printf("VIDIOC_ENUM_FMT failed\n");
-	        return TFAIL;
+	ffmt.index = 0;
+	while (ioctl(fd_v4l, VIDIOC_ENUM_FMT, &ffmt) >= 0) {
+		print_pixelformat("sensor frame format", ffmt.pixelformat);
+		ffmt.index++;
 	}
-	if (ffmt.pixelformat == V4L2_PIX_FMT_YUYV)
-		printf("sensor frame format is YUYV\n");
-	else if (ffmt.pixelformat == V4L2_PIX_FMT_UYVY)
-		printf("sensor frame format is UYVY\n");
 
 	parm.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
 	parm.parm.capture.timeperframe.numerator = 1;
-- 
1.8.0

