From 6bccc2ca3b3212782fc0f2f08e9e998904a00df7 Mon Sep 17 00:00:00 2001
From: Jason Chen <b02280@freescale.com>
Date: Mon, 14 Nov 2011 10:47:10 +0800
Subject: [PATCH 242/505] ENGR00161948 v4l2 output test: not dequeue all the
 buf before streamoff

take care of ENGR00161948 in driver change, app need take care of last buffer:

in driver change:
When previous videobuf finish show and next videobuf ready to show, set
VIDEOBUF_DONE state to avoid tearing issue, which make sure showing buffer will
not be dequeue to write new data. It also bring side-effect that the last buffer
can not be dequeue correctly, app need take care about it.

Signed-off-by: Jason Chen <b02280@freescale.com>
---
 test/mxc_vpu_test/display.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/test/mxc_vpu_test/display.c b/test/mxc_vpu_test/display.c
index 6821aeb..6b14335 100644
--- a/test/mxc_vpu_test/display.c
+++ b/test/mxc_vpu_test/display.c
@@ -878,6 +878,7 @@ err:
 void v4l_display_close(struct vpu_display *disp)
 {
 	int type = V4L2_BUF_TYPE_VIDEO_OUTPUT;
+	int threshold = 0;
 
 	if (disp) {
 		if (vpu_v4l_performance_test) {
@@ -887,7 +888,11 @@ void v4l_display_close(struct vpu_display *disp)
 			sem_destroy(&disp->avaiable_dequeue_frame);
 		}
 
-		while (disp->queued_count > 0) {
+		/* take care of ENGR00161948 */
+		if (cpu_is_mx6q())
+			threshold = 1;
+
+		while (disp->queued_count > threshold) {
 			disp->buf.type = V4L2_BUF_TYPE_VIDEO_OUTPUT;
 			disp->buf.memory = V4L2_MEMORY_MMAP;
 			if (ioctl(disp->fd, VIDIOC_DQBUF, &disp->buf) < 0)
-- 
1.8.0

