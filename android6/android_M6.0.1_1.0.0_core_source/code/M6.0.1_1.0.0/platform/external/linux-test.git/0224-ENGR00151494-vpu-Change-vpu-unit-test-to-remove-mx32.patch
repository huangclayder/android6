From fed9463e69efa9ddfb648133361e48f8ed05f7fe Mon Sep 17 00:00:00 2001
From: Sammy He <r62914@freescale.com>
Date: Wed, 15 Jun 2011 21:48:43 +0800
Subject: [PATCH 224/505] ENGR00151494 vpu: Change vpu unit test to remove
 mx32/mx37 platform

Change vpu unit test to remove mx32/mx37 platform since all the
platforms weren't built for long time and won't be supported again.

Signed-off-by: Sammy He <r62914@freescale.com>
---
 test/mxc_vpu_test/Makefile   |  2 +-
 test/mxc_vpu_test/dec.c      | 22 +++++++---------------
 test/mxc_vpu_test/display.c  |  4 ++--
 test/mxc_vpu_test/fb.c       |  6 +++---
 test/mxc_vpu_test/loopback.c |  4 ++--
 test/mxc_vpu_test/main.c     |  4 ++--
 6 files changed, 17 insertions(+), 25 deletions(-)

diff --git a/test/mxc_vpu_test/Makefile b/test/mxc_vpu_test/Makefile
index 44100b2..ca4a451 100644
--- a/test/mxc_vpu_test/Makefile
+++ b/test/mxc_vpu_test/Makefile
@@ -11,7 +11,7 @@ OBJ = main.o \
       loopback.o
 
 # list of platforms which want this test case
-INCLUDE_LIST:=IMX27ADS IMX31ADS IMX37_3STACK IMX51 IMX53
+INCLUDE_LIST:=IMX27ADS IMX51 IMX53
 
 ifeq ($(PLATFORM),$(findstring $(PLATFORM),$(INCLUDE_LIST)))
 TARGET = mxc_vpu_test.out
diff --git a/test/mxc_vpu_test/dec.c b/test/mxc_vpu_test/dec.c
index 984ec9d..7ef15b9 100644
--- a/test/mxc_vpu_test/dec.c
+++ b/test/mxc_vpu_test/dec.c
@@ -683,7 +683,7 @@ decoder_start(struct decode *dec)
 			&& (dec->cmdl->ipu_rot_en))
 		rot_en = 0;
 
-	/* deblock_en is zero on mx37 and mx51 since it is cleared in decode_open() function. */
+	/* deblock_en is zero on mx5x since it is cleared in decode_open() function. */
 	if (rot_en || dering_en) {
 		rotid = dec->fbcount;
 		if (deblock_en) {
@@ -809,14 +809,6 @@ decoder_start(struct decode *dec)
 			}
 		}
 
-		if (cpu_is_mx37()) {
-			DbkOffset dbkOffset;
-			dbkOffset.DbkOffsetEnable = 0;
-			dbkOffset.DbkOffsetA = 7;
-			dbkOffset.DbkOffsetB = 7;
-			vpu_DecGiveCommand(handle, SET_DBK_OFFSET, &dbkOffset);
-		}
-
 		gettimeofday(&tdec_begin, NULL);
 		ret = vpu_DecStartOneFrame(handle, &decparam);
 		if (ret != RETCODE_SUCCESS) {
@@ -1197,7 +1189,7 @@ decoder_free_framebuffer(struct decode *dec)
 		}
 	}
 
-	/* deblock_en is zero on mx37 and mx51 since it is cleared in decode_open() function. */
+	/* deblock_en is zero on mx5x since it is cleared in decode_open() function. */
 	if (((dec->cmdl->dst_scheme != PATH_V4L2) && (dec->cmdl->dst_scheme != PATH_IPU)) ||
 			(((dec->cmdl->dst_scheme == PATH_V4L2) || (dec->cmdl->dst_scheme == PATH_IPU))
 			 && deblock_en)) {
@@ -1331,7 +1323,7 @@ decoder_allocate_framebuffer(struct decode *dec)
 			fb[i].bufY = pfbpool[i]->addrY;
 			fb[i].bufCb = pfbpool[i]->addrCb;
 			fb[i].bufCr = pfbpool[i]->addrCr;
-			if (cpu_is_mx37() || cpu_is_mx5x()) {
+			if (cpu_is_mx5x()) {
 				fb[i].bufMvCol = pfbpool[i]->mvColBuf;
 			}
 		}
@@ -1367,7 +1359,7 @@ decoder_allocate_framebuffer(struct decode *dec)
 		if (deblock_en == 0) {
 			img_size = dec->stride * dec->picheight;
 
-			if (cpu_is_mx37() || cpu_is_mx5x()) {
+			if (cpu_is_mx5x()) {
 				mvcol_md = dec->mvcol_memdesc =
 					calloc(totalfb, sizeof(vpu_mem_desc));
 			}
@@ -1380,7 +1372,7 @@ decoder_allocate_framebuffer(struct decode *dec)
 				fb[i].bufCb = fb[i].bufY + img_size;
 				fb[i].bufCr = fb[i].bufCb + (img_size / divX / divY);
 				/* allocate MvCol buffer here */
-				if (cpu_is_mx37() || cpu_is_mx5x()) {
+				if (cpu_is_mx5x()) {
 					memset(&mvcol_md[i], 0,
 							sizeof(vpu_mem_desc));
 					mvcol_md[i].size = img_size / divX / divY;
@@ -1777,7 +1769,7 @@ decoder_open(struct decode *dec)
 	 * quality. In other words, mpeg4 deblocking is post processing.
 	 * So, host application need to allocate new frame buffer.
 	 * - On MX27, VPU doesn't support mpeg4 out loop deblocking filtering.
-	 * - On MX37 and MX51, VPU control the buffer internally and return one
+	 * - On MX5X, VPU control the buffer internally and return one
 	 *   more buffer after vpu_DecGetInitialInfo().
 	 * - On MX32, host application need to set frame buffer externally via
 	 *   the command DEC_SET_DEBLOCK_OUTPUT.
@@ -1786,7 +1778,7 @@ decoder_open(struct decode *dec)
 		if (cpu_is_mx27()) {
 			warn_msg("MP4 deblocking NOT supported on MX27 VPU.\n");
 			oparam.mp4DeblkEnable = dec->cmdl->deblock_en = 0;
-		} else if (!cpu_is_mx32()) {	/* do not need extra framebuf */
+		} else {	/* do not need extra framebuf */
 			dec->cmdl->deblock_en = 0;
 		}
 	}
diff --git a/test/mxc_vpu_test/display.c b/test/mxc_vpu_test/display.c
index 1ef7cdb..a47a0dd 100644
--- a/test/mxc_vpu_test/display.c
+++ b/test/mxc_vpu_test/display.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2004-2010 Freescale Semiconductor, Inc.
+ * Copyright 2004-2011 Freescale Semiconductor, Inc.
  *
  * Copyright (c) 2006, Chips & Media.  All rights reserved.
  */
@@ -617,7 +617,7 @@ v4l_display_open(struct decode *dec, int nframes, struct rot rotation, Rect crop
 	if ((disp_width != 0) && (disp_height!= 0 )) {
 		crop.c.width = disp_width;
 		crop.c.height = disp_height;
-	} else if (cpu_is_mx37() || cpu_is_mx5x()) {
+	} else if (cpu_is_mx5x()) {
 		crop.c.width = cropcap.bounds.width;
 		crop.c.height = cropcap.bounds.height;
 	}
diff --git a/test/mxc_vpu_test/fb.c b/test/mxc_vpu_test/fb.c
index 5abab1d..19712b7 100644
--- a/test/mxc_vpu_test/fb.c
+++ b/test/mxc_vpu_test/fb.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2004-2010 Freescale Semiconductor, Inc.
+ * Copyright 2004-2011 Freescale Semiconductor, Inc.
  *
  * Copyright (c) 2006, Chips & Media.  All rights reserved.
  */
@@ -78,7 +78,7 @@ struct frame_buf *framebuf_alloc(int stdMode, int format, int strideY, int heigh
 
 	memset(&(fb->desc), 0, sizeof(vpu_mem_desc));
 	fb->desc.size = (strideY * height  + strideY / divX * height / divY * 2);
-	if (cpu_is_mx37() || cpu_is_mx5x())
+	if (!cpu_is_mx27())
 		fb->desc.size += strideY / divX * height / divY;
 
 	err = IOGetPhyMem(&fb->desc);
@@ -94,7 +94,7 @@ struct frame_buf *framebuf_alloc(int stdMode, int format, int strideY, int heigh
 	fb->strideY = strideY;
 	fb->strideC =  strideY / divX;
 
-	if (cpu_is_mx37() || cpu_is_mx5x()) {
+	if (!cpu_is_mx27()) {
 		if (stdMode==STD_MJPG)
 			fb->mvColBuf = fb->addrCr;
 		else
diff --git a/test/mxc_vpu_test/loopback.c b/test/mxc_vpu_test/loopback.c
index ef6d242..720b003 100644
--- a/test/mxc_vpu_test/loopback.c
+++ b/test/mxc_vpu_test/loopback.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2004-2010 Freescale Semiconductor, Inc.
+ * Copyright 2004-2011 Freescale Semiconductor, Inc.
  *
  * Copyright (c) 2006, Chips & Media.  All rights reserved.
  */
@@ -167,7 +167,7 @@ encoder_fill_headers(void)
 
 	/* Must put encode header before encoding */
 	if (enc->cmdl->format == STD_MPEG4) {
-		if (!cpu_is_mx5x()) {
+		if (cpu_is_mx27()) {
 			enchdr_param.headerType = VOS_HEADER;
 			vpu_EncGiveCommand(handle, ENC_PUT_MP4_HEADER, &enchdr_param);
 
diff --git a/test/mxc_vpu_test/main.c b/test/mxc_vpu_test/main.c
index ad21fdc..b14b1d8 100644
--- a/test/mxc_vpu_test/main.c
+++ b/test/mxc_vpu_test/main.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2004-2010 Freescale Semiconductor, Inc.
+ * Copyright 2004-2011 Freescale Semiconductor, Inc.
  *
  * Copyright (c) 2006, Chips & Media.  All rights reserved.
  */
@@ -252,7 +252,7 @@ parse_args(int argc, char *argv[], int i)
 				input_arg[i].cmd.dst_scheme = PATH_IPU;
 				info_msg("Display through IPU LIB\n");
 			}
-			if (!cpu_is_mx37() && !cpu_is_mx5x() &&
+			if (cpu_is_mx27() &&
 				(input_arg[i].cmd.dst_scheme == PATH_IPU)) {
 				input_arg[i].cmd.dst_scheme = PATH_V4L2;
 				warn_msg("ipu lib disp only support in ipuv3\n");
-- 
1.8.0

