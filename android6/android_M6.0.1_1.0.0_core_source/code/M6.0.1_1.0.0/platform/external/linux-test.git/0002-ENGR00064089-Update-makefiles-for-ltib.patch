From 39d022af6822b178f613e762cc48f04a07ebd992 Mon Sep 17 00:00:00 2001
From: Rob Herring <r.herring@freescale.com>
Date: Tue, 29 Jan 2008 11:47:06 -0600
Subject: [PATCH 002/505] ENGR00064089 Update makefiles for ltib

Update makefiles for ltib install.
Support returning error codes for sub-make calls
Add ltib directory build spec file.

Signed-off-by: Rob Herring <r.herring@freescale.com>
---
 Makefile               | 52 +++++++++------------------------
 imx-test-dirbuild.spec | 79 ++++++++++++++++++++++++++++++++++++++++++++++++++
 test/Makefile          | 30 ++++++-------------
 3 files changed, 102 insertions(+), 59 deletions(-)
 create mode 100644 imx-test-dirbuild.spec

diff --git a/Makefile b/Makefile
index e946565..b4d40e9 100644
--- a/Makefile
+++ b/Makefile
@@ -1,15 +1,9 @@
 TOPDIR	:= $(shell /bin/pwd)
 OBJDIR=$(TOPDIR)/platform/$(PLATFORM)/
 
-# Suffix for install dir (e.g. DESTDIR_SUFFIX=unittests)
-DESTDIR_SUFFIX=
-
 MISC_DIR := $(shell echo $(TOPDIR) | sed 's/^.*\///')
 PKG_NAME := $(MISC_DIR).tar.gz
 
-EXCLUDES := $(foreach ex, $(PKG_EXCLUDES), --exclude $(ex))
-EXCLUDES += --exclude $(PKG_NAME)
-
 #
 # ltib requires CROSS_COMPILE to be undefined
 #
@@ -32,38 +26,19 @@ install_target=$(shell if [ -d $(TOPDIR)/platform/$(PLATFORM) ]; then echo insta
 		       else echo install_dummy; fi; )
 endif
 
-# remove the string './test/' from the list of targets
-app_targets = $(subst ./test/, ,$(app_dir))
-
 #
 # Export all variables that might be needed by other Makefiles
 #
 export INC CROSS_COMPILE LINUXPATH PLATFORM TOPDIR OBJDIR
 
-.PHONY: test misc demo tool module_test clean pkg
-.PHONY: $(app_targets)
+.PHONY: test module_test clean pkg install
 
-all  : misc test module_test
+all : test module_test
 
-misc:
-	@mkdir -p $(OBJDIR)
-	@echo "CFLAGS:    $(CFLAGS)"
-	@echo "AFLAGS:    $(AFLAGS)"
-	@echo "OBJDIR:    $(OBJDIR)"
-	@echo ""
-
-test: 
+test:
 	@echo
 	@echo Invoking test make...
 	$(MAKE) -C $(TOPDIR)/test
-	@for script in autorun.sh test-utils.sh autorun-suite.txt misc-testdatabase.txt; do \
-		echo "copying $$script..."; \
-		cp -af $(TOPDIR)/$$script $(OBJDIR)/; \
-		chmod u+x $(OBJDIR)/$$script; \
-	done
-
-%::
-	$(MAKE) -C $(TOPDIR)/test $@
 
 module_test:
 	@echo
@@ -77,18 +52,19 @@ install_dummy:
 	@echo -e "**If build is complete files will be under $(TOPDIR)/platform/$(PLATFORM)/ dir."
 
 install_actual:
-	@echo -e "\nInstalling files from platform/$(PLATFORM)/ to $(DESTDIR)/$(DESTDIR_SUFFIX)/"
-	mkdir -p $(DESTDIR)/$(DESTDIR_SUFFIX)
-	-rm -rf $(DESTDIR)/$(DESTDIR_SUFFIX)
-	mv $(TOPDIR)/platform/$(PLATFORM) $(DESTDIR)/$(DESTDIR_SUFFIX)
+	@echo -e "\nInstalling files from platform/$(PLATFORM) to $(DESTDIR)"
+	mkdir -p $(DESTDIR)
+	-rm -rf $(DESTDIR)/*
+	cp -rf $(OBJDIR)/* $(DESTDIR)
+	cp autorun.sh test-utils.sh autorun-suite.txt misc-testdatabase.txt $(DESTDIR)
 
 clean :
-	@for X in test module_test $(shell /bin/ls -d lib/*); do \
-		if [ -r "$$X/Makefile" ]; then \
-			$(MAKE) -C $$X clean; \
-		fi \
-	done
+	$(MAKE) -C $(TOPDIR)/test $@
+	$(MAKE) -C $(TOPDIR)/module_test $@
 	-rm -rf platform
 
 pkg : clean
-	tar --exclude CVS -C .. $(EXCLUDES) -czf $(PKG_NAME) $(MISC_DIR)
\ No newline at end of file
+	tar --exclude CVS -C .. $(EXCLUDES) -czf $(PKG_NAME) $(MISC_DIR)
+
+%::
+	$(MAKE) -C $(TOPDIR)/test $@
diff --git a/imx-test-dirbuild.spec b/imx-test-dirbuild.spec
new file mode 100644
index 0000000..a0ce18b
--- /dev/null
+++ b/imx-test-dirbuild.spec
@@ -0,0 +1,79 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : platform specific unit tests for mxc platform
+Name            : imx-test-dirbuild
+Version         : 1
+Release         : 1
+License         : GPL/Other
+Vendor          : Freescale
+Packager        : Alan Tull
+Group           : Test
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+
+%Description
+%{summary}
+
+%Prep
+
+%Build
+if [ -z "$PKG_KERNEL_KBUILD_PRECONFIG" ]
+then
+      KERNELDIR="$PWD/../linux"
+      KBUILD_OUTPUT="$PWD/../linux"
+else
+      KERNELDIR="$PKG_KERNEL_PATH_PRECONFIG"
+      KBUILD_OUTPUT="$(eval echo ${PKG_KERNEL_KBUILD_PRECONFIG})"
+fi
+
+if [ -z "$IMX_TEST_DIR" ]
+then
+	echo IMX_TEST_DIR must be set
+	exit 1
+fi
+cd $IMX_TEST_DIR
+
+PLATFORM_UPPER="$(echo $PLATFORM | awk '{print toupper($0)}')"
+
+# Build modules
+make -C module_test KBUILD_OUTPUT=$KBUILD_OUTPUT LINUXPATH=$KERNELDIR
+
+# Build test apps
+INCLUDE="-I$DEV_IMAGE/usr/src/linux/include \
+-I$KERNELDIR/drivers/mxc/security/rng/include \
+-I$KERNELDIR/drivers/mxc/security/sahara2/include"
+make -j1 PLATFORM=$PLATFORM_UPPER INCLUDE="$INCLUDE" test
+
+%Install
+if [ -z "$PKG_KERNEL_KBUILD_PRECONFIG" ]
+then
+      KERNELDIR="$PWD/../linux"
+      KBUILD_OUTPUT="$PWD/../linux"
+else
+      KERNELDIR="$PKG_KERNEL_PATH_PRECONFIG"
+      KBUILD_OUTPUT="$(eval echo ${PKG_KERNEL_KBUILD_PRECONFIG})"
+fi
+
+rm -rf $RPM_BUILD_ROOT
+mkdir -p $RPM_BUILD_ROOT/%{pfx}/unit_tests
+
+if [ -z "$IMX_TEST_DIR" ]
+then
+	echo IMX_TEST_DIR must be set
+	exit 1
+fi
+cd $IMX_TEST_DIR
+
+# install modules
+make -C module_test -j1 LINUXPATH=$KERNELDIR KBUILD_OUTPUT=$KBUILD_OUTPUT \
+       DEPMOD=/bin/true INSTALL_MOD_PATH=$RPM_BUILD_ROOT/%{pfx} install
+
+PLATFORM_UPPER="$(echo $PLATFORM | awk '{print toupper($0)}')"
+make PLATFORM=$PLATFORM_UPPER DESTDIR=$RPM_BUILD_ROOT/%{pfx}/unit_tests install
+
+%Clean
+rm -rf $RPM_BUILD_ROOT
+
+%Files
+%defattr(755,root,root)
+%{pfx}/*
diff --git a/test/Makefile b/test/Makefile
index 0ca4ea2..7f1f3c0 100644
--- a/test/Makefile
+++ b/test/Makefile
@@ -1,24 +1,12 @@
 export INC = -I$(TOPDIR)/include $(INCLUDE)
+ 
+# Get all dirs with a Makefile
+TMP_DIRS := $(foreach dir, $(wildcard *), $(wildcard $(dir)/Makefile))
+DIRS := $(patsubst %/Makefile,%,$(TMP_DIRS))
 
-subdirs 	= $(shell /bin/ls -d */)
+.PHONY: all
+.PHONY: $(DIRS)
+all: $(DIRS)
 
-all:
-	@for X in $(subdirs); do        \
-	    if [ -r "$$X/Makefile" ]; then \
-		$(MAKE) -C $$X MODULE_NAME=$$X OBJDIR=$$TOPDIR/platform/$$PLATFORM/$$X; \
-	    fi; 			\
-	done
-
-.PHONY: clean
-clean:
-	@for X in $(subdirs); do        \
-	    if [ -r "$$X/Makefile" ]; then \
-		$(MAKE) -C $$X MODULE_NAME=$$X clean; \
-	    fi; 			\
-	done
-
-%::
-	if [ -r "$$X/Makefile" ]; then \
-		$(MAKE) -C $@ MODULE_NAME=$@ OBJDIR=$$TOPDIR/platform/$$PLATFORM/$@; \
-	fi;
-	
+$(DIRS):
+	-$(MAKE) -C $< $@
-- 
1.8.0

