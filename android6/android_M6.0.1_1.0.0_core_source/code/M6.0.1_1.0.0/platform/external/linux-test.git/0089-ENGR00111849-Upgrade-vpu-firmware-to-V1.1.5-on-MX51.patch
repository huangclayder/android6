From ae80dcd8eb0c88e967d439387659ee3dcdd2e5ff Mon Sep 17 00:00:00 2001
From: Sammy He <r62914@freescale.com>
Date: Sun, 26 Apr 2009 19:13:25 +0800
Subject: [PATCH 089/505] ENGR00111849 Upgrade vpu firmware to V1.1.5 on MX51

Upgrade vpu firmware to V1.1.5 on MX51

Signed-off-by: Sammy He <r62914@freescale.com>
---
 test/mxc_vpu_test/configs/config_dec |  3 +++
 test/mxc_vpu_test/configs/config_net |  3 +++
 test/mxc_vpu_test/dec.c              |  1 +
 test/mxc_vpu_test/main.c             | 10 ++++++++--
 test/mxc_vpu_test/readme             |  5 ++++-
 test/mxc_vpu_test/utils.c            | 30 ++++++++++++++++++++++++++++++
 test/mxc_vpu_test/vpu_test.h         |  1 +
 7 files changed, 50 insertions(+), 3 deletions(-)

diff --git a/test/mxc_vpu_test/configs/config_dec b/test/mxc_vpu_test/configs/config_dec
index c6a3b39..4a7b783 100644
--- a/test/mxc_vpu_test/configs/config_dec
+++ b/test/mxc_vpu_test/configs/config_dec
@@ -14,6 +14,9 @@ output=
 # 6 - RV, 7 - MJPG
 format=0
 
+# mp4Class; 0 - MPEG4, 1 - DIVX 5.0 or higher, 2 - XVID, 5 - DIVX 4.0
+mp4Class=
+
 # chromaInterleave, 1 - CbCr is interleaved
 chromaInterleave=
 
diff --git a/test/mxc_vpu_test/configs/config_net b/test/mxc_vpu_test/configs/config_net
index c074634..0528014 100644
--- a/test/mxc_vpu_test/configs/config_net
+++ b/test/mxc_vpu_test/configs/config_net
@@ -20,6 +20,9 @@ port=
 # format; 0 - MPEG4, 1 - H.263, 2 - H.264, 3 - VC1, 7 - MJPG
 format=2
 
+# mp4Class; 0 - MPEG4, 1 - DIVX 5.0 or higher, 2 - XVID, 5 - DIVX 4.0
+mp4Class=
+
 # rotation angle (0, 90, 180, 270). Do not specify anything if not needed.
 rotation=90
 
diff --git a/test/mxc_vpu_test/dec.c b/test/mxc_vpu_test/dec.c
index 9a84563..f5b829a 100644
--- a/test/mxc_vpu_test/dec.c
+++ b/test/mxc_vpu_test/dec.c
@@ -1564,6 +1564,7 @@ decoder_open(struct decode *dec)
 	oparam.reorderEnable = dec->reorderEnable;
 	oparam.mp4DeblkEnable = dec->cmdl->deblock_en;
 	oparam.chromaInterleave = dec->cmdl->chromaInterleave;
+	oparam.mp4Class = dec->cmdl->mp4Class;
 
 	/*
 	 * mp4 deblocking filtering is optional out-loop filtering for image
diff --git a/test/mxc_vpu_test/main.c b/test/mxc_vpu_test/main.c
index 65a1fd3..ba501b0 100644
--- a/test/mxc_vpu_test/main.c
+++ b/test/mxc_vpu_test/main.c
@@ -36,8 +36,11 @@ char *usage = "Usage: ./mxc_vpu_test.out -D \"<decode options>\" "\
 	       "  -o <output file> Write output to file \n "\
 	       "	If no output is specified, default is LCD \n "\
 	       "  -f <format> 0 - MPEG4, 1 - H.263, 2 - H.264, 3 - VC1, \n "\
-	       "	4 - MPEG2, 5 - DIVX, 6 - RV, 7 - MJPG, \n "\
+	       "	4 - MPEG2, 5 - DIV3, 6 - RV, 7 - MJPG, \n "\
 	       "	If no format specified, default is 0 (MPEG4) \n "\
+	       "  -l <mp4Class> 0 - MPEG4, 1 - DIVX 5.0 or higher, 2 - XVID, \n "\
+	       "        5 - DIVX4.0 \n "\
+	       "        This flag is effective when 'f' flag is 0 (MPEG4).\n "\
 	       "  -p <port number> UDP port number to bind \n "\
 	       "	If no port number is secified, 5555 is used \n "\
 	       "  -c <count> Number of frames to decode \n "\
@@ -122,7 +125,7 @@ int encdec_test(void *arg);
 static char *mainopts = "HE:D:L:C:";
 
 /* Options for encode and decode */
-static char *options = "i:o:n:p:r:f:c:w:h:g:b:d:e:m:u:t:s:";
+static char *options = "i:o:n:p:r:f:c:w:h:g:b:d:e:m:u:t:s:l:";
 
 int
 parse_config_file(char *file_name)
@@ -287,6 +290,9 @@ parse_args(int argc, char *argv[], int i)
 		case 't':
 			input_arg[i].cmd.chromaInterleave = atoi(optarg);
 			break;
+		case 'l':
+		 	input_arg[i].cmd.mp4Class = atoi(optarg);
+			break;
 		case -1:
 			break;
 		default:
diff --git a/test/mxc_vpu_test/readme b/test/mxc_vpu_test/readme
index 35c5d0c..ab826c1 100755
--- a/test/mxc_vpu_test/readme
+++ b/test/mxc_vpu_test/readme
@@ -38,8 +38,11 @@ decode options
    -o <output file> Write output to file
         If no output is specified, default is LCD
    -f <format> 0 - MPEG4, 1 - H.263, 2 - H.264, 3 - VC1,
-        4 - MPEG2, 5 - DIVX, 6 - RV, 7 - MJPG,
+        4 - MPEG2, 5 - DIV3, 6 - RV, 7 - MJPG,
         If no format specified, default is 0 (MPEG4)
+   -l <mp4Class> 0 - MPEG4, 1 - DIVX 5.0 or higher, 2 - XVID,
+         5 - DIVX4.0
+         This flag is effective when 'f' flag is 0 (MPEG4).
    -p <port number> UDP port number to bind
         If no port number is secified, 5555 is used
    -c <count> Number of frames to decode
diff --git a/test/mxc_vpu_test/utils.c b/test/mxc_vpu_test/utils.c
index 57d7566..a8617b1 100644
--- a/test/mxc_vpu_test/utils.c
+++ b/test/mxc_vpu_test/utils.c
@@ -434,6 +434,23 @@ check_params(struct cmd_line *cmd, int op)
 	switch (cmd->format) {
 	case STD_MPEG4:
 		info_msg("Format: STD_MPEG4\n");
+		switch (cmd->mp4Class) {
+		case 0:
+			info_msg("MPEG4 class: MPEG4\n");
+			break;
+		case 1:
+			info_msg("MPEG4 class: DIVX5.0 or higher\n");
+			break;
+		case 2:
+			info_msg("MPEG4 class: XVID\n");
+			break;
+		case 5:
+			info_msg("MPEG4 class: DIVX4.0\n");
+			break;
+		default:
+			err_msg("Unsupported MPEG4 Class!\n");
+			break;
+		}
 		break;
 	case STD_H263:
 		info_msg("Format: STD_H263\n");
@@ -702,6 +719,19 @@ int parse_options(char *buf, struct cmd_line *cmd, int *mode)
 		return 0;
 	}
 
+	str = strstr(buf, "mp4Class");
+	if (str != NULL) {
+		str = index(buf, '=');
+		if (str != NULL) {
+			str++;
+			if (*str != '\0') {
+				cmd->mp4Class = strtol(str, NULL, 10);
+			}
+		}
+
+		return 0;
+	}
+
 	str = strstr(buf, "deblock");
 	if (str != NULL) {
 		str = index(buf, '=');
diff --git a/test/mxc_vpu_test/vpu_test.h b/test/mxc_vpu_test/vpu_test.h
index fdb263c..5a35d80 100644
--- a/test/mxc_vpu_test/vpu_test.h
+++ b/test/mxc_vpu_test/vpu_test.h
@@ -138,6 +138,7 @@ struct cmd_line {
 	u16 port; /* udp port number */
 	u16 complete; /* wait for the requested buf to be filled completely */
 	int iframe;
+	int mp4Class;
 };
 
 struct decode {
-- 
1.8.0

