From e3f02fe3478d729659f8cfec16ff0252f09d308d Mon Sep 17 00:00:00 2001
From: Terry Lv <r65388@freescale.com>
Date: Thu, 19 Jul 2012 16:38:55 +0800
Subject: [PATCH 333/505] ENGR00217610: Add DCP/RNGB test doc for mx6sl

Add DCP/RNGB test doc for mx6sl.

Signed-off-by: Terry Lv <r65388@freescale.com>
---
 test/doc/ut_um.toc                       |  8 ++++
 test/mxc_dcp_test/doc/FSL-UT-DCP-001.txt | 38 +++++++++++++++++++
 test/mxc_rng_test/doc/FSL-UT-RNG-001.txt | 63 ++++++++++++++++++++++++++++++++
 3 files changed, 109 insertions(+)
 create mode 100644 test/mxc_dcp_test/doc/FSL-UT-DCP-001.txt
 create mode 100644 test/mxc_rng_test/doc/FSL-UT-RNG-001.txt

diff --git a/test/doc/ut_um.toc b/test/doc/ut_um.toc
index bc78083..ca52974 100644
--- a/test/doc/ut_um.toc
+++ b/test/doc/ut_um.toc
@@ -22,6 +22,10 @@ include::../can/doc/FSL-UT-CAN-002.txt[]
 include::../can/doc/FSL-UT-CAN-003.txt[]
 include::../can/doc/FSL-UT-CAN-004.txt[]
 
+DCP
+---
+include::..//mxc_dcp_test/doc/FSL-UT-DCP-001.txt[]
+
 EPDC
 ----
 include::../mxc_fb_test/doc/FSL-UT-EPDC-001.txt[]
@@ -100,6 +104,10 @@ PXP
 include::../pxp_lib_test/doc/FSL-UT-PXP-001.txt[]
 include::../pxp_v4l2_test/doc/FSL-UT-PXP-002.txt[]
 
+RNG
+---
+include::../mxc_rng_test/doc/FSL-UT-RNG-001.txt[]
+
 RTC
 ---
 include::../mxc_rtc/doc/FSL-UT-RTC-001.txt[]
diff --git a/test/mxc_dcp_test/doc/FSL-UT-DCP-001.txt b/test/mxc_dcp_test/doc/FSL-UT-DCP-001.txt
new file mode 100644
index 0000000..2880129
--- /dev/null
+++ b/test/mxc_dcp_test/doc/FSL-UT-DCP-001.txt
@@ -0,0 +1,38 @@
+FSL-UT-DCP-001
+~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+DCP test on i.mx50 and i.mx6sl.
+
+| Automated |
+No
+
+| Kernel Config Option |
+CONFIG_IMX_HAVE_PLATFORM_IMX_DCP=y
+CONFIG_CRYPTO_DEV_DCP=y
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+. For AES (ECB & CBC) encryption: "modprobe tcrypt mode=10"
+
+. For SHA1 hash: "modprobe tcrypt mode=2"
+
+. For SHA256 hash: "modprobe tcrypt mode=6"
+
+| Expected Result |
+No error messages containing ecb(aes) or cbc(aes).
+No error messages containing sha1.
+No error messages containing sha256.
+
+|====================================================================
+
+<<<
diff --git a/test/mxc_rng_test/doc/FSL-UT-RNG-001.txt b/test/mxc_rng_test/doc/FSL-UT-RNG-001.txt
new file mode 100644
index 0000000..eb20910
--- /dev/null
+++ b/test/mxc_rng_test/doc/FSL-UT-RNG-001.txt
@@ -0,0 +1,63 @@
+FSL-UT-RNG-001
+~~~~~~~~~~~~~~~
+
+[cols=">s,6a",frame="topbot",options="header"]
+|====================================================================
+|Name | Description
+
+| Summary |
+RNG test on i.mx50 and i.mx6sl.
+
+| Automated |
+No
+
+| Kernel Config Option |
+CONFIG_HW_RANDOM_FSL_RNGC=y
+CONFIG_IMX_HAVE_PLATFORM_RANDOM_RNGC=y
+CONFIG_ARCH_HAS_RNGC=y
+
+| Software Dependency |
+N/A
+
+| Non-default Hardware Configuration |
+N/A
+
+| Test Procedure |
+ $ dd if=/dev/hwrng bs=1 count=100 \| hexdump
+
+ The above command should print out 100 bytes of random data on the console.
+ Do this twice to ensure that the same data is not generated the 2nd time.
+
+| Expected Result |
+ $ dd if=/dev/hwrng bs=1 count=100 \| hexdump
+0000000 04a1 b192 8fa3 2273 0a93 17ab f581 68ca
+0000010 98a1 325d 15b2 3810 f305 70ab 12e3 ee63
+0000020 c93a b127 78fa 0bb6 b8c8 ecaa 78d8 38e8
+0000030 9bf3 4fae db6c 589e d988 2f1a eeda 0db1
+0000040 4c16 55ca b361 fe8b efc9 8e15 8f8b 68ca
+0000050 9cbe 6e52 f685 2a86 2942 f771 ac45 b728
+0000060 4878 a53c
+0000064
+100+0 records in
+100+0 records out
+100 bytes (100B) copied, 0.003082 seconds, 31.7KB/s
+ $ dd if=/dev/hwrng bs=1 count=100 \| hexdump
+0000000 7a50 9544 1cfd ac8b d0e4 a415 a229 d578
+0000010 a73c 1709 fda2 c18c b6d6 b134 ef15 e553
+0000020 ed50 0065 1a2e 5726 2c57 109c 1b08 c2ff
+0000030 d2cc e9a4 70eb 16b4 2344 7ee6 6236 c910
+0000040 e5e7 3f5c 4038 7f20 cc75 7e32 5597 b20a
+0000050 186f b1e6 7ddb 3cb5 4c7e 2f92 68c6 592d
+0000060 2add 9568
+0000064
+100+0 records in
+100+0 records out
+100 bytes (100B) copied, 0.009985 seconds, 9.8KB/s
+
+Note:
+ The above command should print out 100 bytes of random data on the console.
+ Do this twice to ensure that the same data is not generated the 2nd time.
+
+|====================================================================
+
+<<<
-- 
1.8.0

