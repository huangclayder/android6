From 124a85a8e46fae7b19b6b518f6a3675a6be7fa40 Mon Sep 17 00:00:00 2001
From: Michael Minnick <michael.minnick@freescale.com>
Date: Tue, 6 Nov 2012 15:58:11 -0600
Subject: [PATCH 364/505] ENGR00232488 EPDC TEST: Add dithering feature tests

Add tests for dithering Y8->Y1 and dithering Y8->Y4.

Changed test map initialization to maintain the behavior that
all tests except Stress Test are run when the program is
invoked with no arguments.

Signed-off-by: Michael Minnick <michael.minnick@freescale.com>
---
 test/mxc_fb_test/mxc_epdc_fb_test.c | 63 ++++++++++++++++++++++++++++++++++---
 1 file changed, 59 insertions(+), 4 deletions(-)

diff --git a/test/mxc_fb_test/mxc_epdc_fb_test.c b/test/mxc_fb_test/mxc_epdc_fb_test.c
index fd03f74..61cb1e9 100644
--- a/test/mxc_fb_test/mxc_epdc_fb_test.c
+++ b/test/mxc_fb_test/mxc_epdc_fb_test.c
@@ -77,7 +77,7 @@ extern "C"{
 #define ALLOW_COLLISIONS	0
 #define NO_COLLISIONS		1
 
-#define NUM_TESTS		14
+#define NUM_TESTS		16
 
 __u32 pwrdown_delay = 0;
 __u32 scheme = UPDATE_SCHEME_QUEUE_AND_MERGE;
@@ -1984,6 +1984,56 @@ static int test_stress(void)
 	return retval;
 }
 
+static int test_dithering_y8_y1(void)
+{
+	/* FB to white */
+	printf("Background to white\n");
+	memset(fb, 0xff, screen_info.xres*screen_info.yres *
+		screen_info.bits_per_pixel/8);
+	update_to_display(0, 0, screen_info.xres, screen_info.yres,
+		WAVEFORM_MODE_GC16, TRUE, 0);
+
+	printf("Ginger dithering Y8->Y1 update\n");
+	copy_image_to_buffer(0, 0, 800, 600, ginger_rgb_800x600,
+		BUFFER_FB, &screen_info);
+
+	update_to_display(0, 0, 400, 300, 2, TRUE,
+		EPDC_FLAG_USE_DITHERING_Y1);
+	update_to_display(400, 300, 400, 300, 2, TRUE,
+		EPDC_FLAG_USE_DITHERING_Y1);
+	update_to_display(450, 50, 300, 200, 2, TRUE,
+		EPDC_FLAG_USE_DITHERING_Y1);
+	update_to_display(50, 350, 300, 200, 2, TRUE,
+		EPDC_FLAG_USE_DITHERING_Y1);
+	sleep(2);
+	return 0;
+}
+
+static int test_dithering_y8_y4(void)
+{
+	/* FB to white */
+	printf("Background to white\n");
+	memset(fb, 0xff, screen_info.xres*screen_info.yres *
+		screen_info.bits_per_pixel/8);
+	update_to_display(0, 0, screen_info.xres, screen_info.yres,
+		WAVEFORM_MODE_GC16, TRUE, 0);
+
+	printf("Ginger dithering Y8->Y4 update\n");
+	copy_image_to_buffer(0, 0, 800, 600, ginger_rgb_800x600,
+		BUFFER_FB, &screen_info);
+
+	update_to_display(0, 0, 400, 300, 2, TRUE,
+		EPDC_FLAG_USE_DITHERING_Y4);
+	update_to_display(400, 300, 400, 300, 2, TRUE,
+		EPDC_FLAG_USE_DITHERING_Y4);
+	update_to_display(450, 50, 300, 200, 2, TRUE,
+		EPDC_FLAG_USE_DITHERING_Y4);
+	update_to_display(50, 350, 300, 200, 2, TRUE,
+		EPDC_FLAG_USE_DITHERING_Y4);
+	sleep(2);
+	return 0;
+}
+
 void usage(char *app)
 {
 	printf("EPDC framebuffer driver test program.\n");
@@ -2000,7 +2050,7 @@ void usage(char *app)
 	printf("\t\t  m - Queue and merge update scheme (default)\n");
 	printf("\t-n\t  Execute the tests specified in expression\n");
 	printf("\t\t  Expression is a set of comma-separated numeric ranges\n");
-	printf("\t\t  If not specified, tests 1-13 are run\n");
+	printf("\t\t  If not specified, all tests except Stress are run\n");
 	printf("Example:\n");
 	printf("%s -n 1-3,5,7\n", app);
 	printf("\nEPDC tests:\n");
@@ -2018,6 +2068,8 @@ void usage(char *app)
 	printf("12 - Colormap Updates\n");
 	printf("13 - Collision Test Mode\n");
 	printf("14 - Stress Test\n");
+	printf("15 - Dithering Y8->Y1 Test\n");
+	printf("16 - Dithering Y8->Y4 Test\n");
 }
 
 int parse_test_nums(char *num_str)
@@ -2074,8 +2126,9 @@ main(int argc, char **argv)
 	int i, rt;
 
 	/* Initialize test map so all tests (except stress test) will run */
-	for(i = 0; i < NUM_TESTS - 1; i++)
-		test_map[i] = TRUE;
+	for (i = 0; i < NUM_TESTS; i++)
+		if (i != 13)
+			test_map[i] = TRUE;
 
 	while ((rt = getopt(argc, argv, "hau:n:p:f:")) >= 0) {
 		switch (rt) {
@@ -2240,6 +2293,8 @@ main(int argc, char **argv)
 	testfunc_array[11] = &test_colormap;
 	testfunc_array[12] = &test_dry_run;
 	testfunc_array[13] = &test_stress;
+	testfunc_array[14] = &test_dithering_y8_y1;
+	testfunc_array[15] = &test_dithering_y8_y4;
 
 	for (i = 0; i < NUM_TESTS; i++)
 		if (test_map[i])
-- 
1.8.0

