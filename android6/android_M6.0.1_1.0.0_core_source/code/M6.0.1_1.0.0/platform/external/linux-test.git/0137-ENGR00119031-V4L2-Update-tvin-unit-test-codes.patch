From 623e90572f19a1f0891b3a43cb8fb034d91cf0cb Mon Sep 17 00:00:00 2001
From: Wallace Wang <r59996@freescale.com>
Date: Sat, 5 Dec 2009 22:15:19 +0800
Subject: [PATCH 137/505] ENGR00119031 V4L2: Update tvin unit test codes

Kernel driver changes (ENGR00117261) cause
VIDIOC_S_PARM must be called before VIDIOC_S_CROP.
And if TVIN mode changed, VIDIOC_S_CROP must be set
again except for VIDIOC_S_PARM

Signed-off-by: Wallace Wang <r59996@freescale.com>
---
 test/mxc_v4l2_test/mxc_v4l2_tvin.c | 52 +++++++++++++++++++++++---------------
 1 file changed, 31 insertions(+), 21 deletions(-)

diff --git a/test/mxc_v4l2_test/mxc_v4l2_tvin.c b/test/mxc_v4l2_test/mxc_v4l2_tvin.c
index f2cc005..8ebac5e 100644
--- a/test/mxc_v4l2_test/mxc_v4l2_tvin.c
+++ b/test/mxc_v4l2_test/mxc_v4l2_tvin.c
@@ -72,6 +72,7 @@ mxc_v4l_tvin_test(void)
         int overlay = 1;
 	v4l2_std_id id;
 	struct v4l2_streamparm parm;
+	struct v4l2_crop crop;
 
         parm.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
         parm.parm.capture.timeperframe.numerator = 1;
@@ -103,6 +104,16 @@ mxc_v4l_tvin_test(void)
 		    g_cap_mode = (g_cap_mode + 1) % 2;
 		    parm.parm.capture.capturemode = g_cap_mode;
 		    ioctl(fd_v4l, VIDIOC_S_PARM, &parm);
+		    crop.type = V4L2_BUF_TYPE_VIDEO_OVERLAY;
+		    crop.c.left = 0;
+		    crop.c.top = 0;
+		    crop.c.width = PAL_WIDTH;
+		    crop.c.height = PAL_HEIGHT;
+		    if (ioctl(fd_v4l, VIDIOC_S_CROP, &crop) < 0)
+        	    {
+			printf("set cropping failed\n");
+			return TFAIL;
+		    }
 		    g_current_std = id;
                     sleep(1);
 		    continue;
@@ -135,6 +146,26 @@ mxc_v4l_tvin_setup(struct v4l2_format *fmt)
                 return TFAIL;
         }
 
+	parm.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
+        parm.parm.capture.timeperframe.numerator = 1;
+        parm.parm.capture.timeperframe.denominator = 0;
+        parm.parm.capture.capturemode = 0;
+	if (ioctl(fd_v4l, VIDIOC_S_PARM, &parm) < 0)
+        {
+                printf("VIDIOC_S_PARM failed\n");
+                return TFAIL;
+        }
+
+	parm.parm.capture.timeperframe.numerator = 0;
+        parm.parm.capture.timeperframe.denominator = 0;
+	if (ioctl(fd_v4l, VIDIOC_G_PARM, &parm) < 0)
+        {
+                printf("get frame rate failed\n");
+                return TFAIL;
+        }
+
+	g_cap_mode = parm.parm.capture.capturemode;
+        printf("cap_mode is %d\n", parm.parm.capture.capturemode);
         crop.type = V4L2_BUF_TYPE_VIDEO_OVERLAY;
         crop.c.left = 0;
         crop.c.top = 0;
@@ -158,27 +189,6 @@ mxc_v4l_tvin_setup(struct v4l2_format *fmt)
                 return TFAIL;
         }
 
-        parm.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
-        parm.parm.capture.timeperframe.numerator = 1;
-        parm.parm.capture.timeperframe.denominator = 0;
-        parm.parm.capture.capturemode = 0;
-
-        if (ioctl(fd_v4l, VIDIOC_S_PARM, &parm) < 0)
-        {
-                printf("VIDIOC_S_PARM failed\n");
-                return TFAIL;
-        }
-
-        parm.parm.capture.timeperframe.numerator = 0;
-        parm.parm.capture.timeperframe.denominator = 0;
-
-        if (ioctl(fd_v4l, VIDIOC_G_PARM, &parm) < 0)
-        {
-                printf("get frame rate failed\n");
-                return TFAIL;
-        }
-        g_cap_mode = parm.parm.capture.capturemode;
-        printf("cap_mode is %d\n", parm.parm.capture.capturemode);
         return TPASS;
 }
 
-- 
1.8.0

