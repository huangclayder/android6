From ccecd204b6c053ce5f086919afc2b27b7d5109d8 Mon Sep 17 00:00:00 2001
From: Sammy He <r62914@freescale.com>
Date: Fri, 28 Oct 2011 22:07:29 +0800
Subject: [PATCH 165/280] ENGR00160941 vpu: Get share memory from vmalloced
 memory for i.mx5

We have used vmalloced memory for i.mx6q platform, use the same
solution for i.mx5 platform here.

Signed-off-by: Sammy He <r62914@freescale.com>
---
 vpu/vpu_util.c | 30 ++++--------------------------
 1 file changed, 4 insertions(+), 26 deletions(-)

diff --git a/vpu/vpu_util.c b/vpu/vpu_util.c
index d0c0765..f15ff42 100644
--- a/vpu/vpu_util.c
+++ b/vpu/vpu_util.c
@@ -1124,35 +1124,13 @@ semaphore_t *vpu_semaphore_open(void)
 	char *timeout_env;
 	int i;
 
-	/*
-	 * Currently only mx6q uses vmalloced share memory, mx5x platfrom
-	 * keeps current solution, then it is convenient to do vpu lib
-	 * upgrade, no need to upgrade depenent kernel.
-	 * Will change mx5x solution later.
-	 */
-	if (cpu_is_mx6q()) {
-		semap = (semaphore_t *)IOGetVShareMem(sizeof(semaphore_t));
-		if (!semap) {
-			err_msg("Unable to Get VShare memory\n");
-			return NULL;
-		}
-		goto semap_init;
-	}
-
-	share_mem.size = sizeof(semaphore_t);
-
-	if (IOGetPhyShareMem(&share_mem)) {
-		err_msg("Unable to obtain physical of share memory\n");
-		return NULL;
-	}
-
-	semap = (semaphore_t *)IOGetVirtMem(&share_mem);
-	if (semap == NULL) {
-		err_msg("Unable to map physical of share memory\n");
+	/* Use vmalloced share memory for all platforms */
+	semap = (semaphore_t *)IOGetVShareMem(sizeof(semaphore_t));
+	if (!semap) {
+		err_msg("Unable to Get VShare memory\n");
 		return NULL;
 	}
 
-semap_init:
 	if (!semap->is_initialized) {
 		pthread_mutexattr_init(&psharedm);
 		pthread_mutexattr_setpshared(&psharedm, PTHREAD_PROCESS_SHARED);
-- 
1.8.0

