From c77703ca09096eb9aaa4e9d2e87d031b85132025 Mon Sep 17 00:00:00 2001
From: Sammy He <r62914@freescale.com>
Date: Fri, 11 Nov 2011 21:03:14 +0800
Subject: [PATCH 172/280] ENGR00161954 vpu: Workaround to fix 2-instances
 decoder unstable issue on mx6

System may crash if do clock gating of frame based in two instances
decoding on mx6q, the root cause isn't found yet, so enable vpu clock
in decoding to workaround it.

The patch will be removed after the root cause is found.

Signed-off-by: Sammy He <r62914@freescale.com>
---
 vpu/vpu_lib.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/vpu/vpu_lib.c b/vpu/vpu_lib.c
index f0e0436..1037f37 100644
--- a/vpu/vpu_lib.c
+++ b/vpu/vpu_lib.c
@@ -2316,6 +2316,12 @@ RetCode vpu_DecOpen(DecHandle * pHandle, DecOpenParam * pop)
 	if (!LockVpu(vpu_semap))
 		return RETCODE_FAILURE_TIMEOUT;
 
+	/* Workaround to make vpu clock always on when vpu is in decoding to fix unstable
+	 * issue of mult-instances decoding on mx6q , the clock gated-on here will be
+	 * gated-off in vpuDecClose function */
+	if (cpu_is_mx6q())
+		IOClkGateSet(true);
+
 	ret = GetCodecInstance(&pCodecInst);
 	if (ret == RETCODE_FAILURE) {
 		*pHandle = 0;
@@ -2530,6 +2536,12 @@ dec_out:
 	IOFreePhyMem(&pCodecInst->contextBufMem);
 
 	FreeCodecInstance(pCodecInst);
+
+	/* Gate-off the clock that is enabled in vpuDecOpen for workaround the issue
+	 * of mult-instances decoding on mx6q */
+	if (cpu_is_mx6q())
+                IOClkGateSet(false);
+
 	UnlockVpu(vpu_semap);
 
 	return RETCODE_SUCCESS;
-- 
1.8.0

