From f631f90febf935458f0194a126e5bb021e74df7f Mon Sep 17 00:00:00 2001
From: Liu Ying <Ying.Liu@freescale.com>
Date: Mon, 16 May 2011 15:40:18 +0800
Subject: [PATCH 142/280] ENGR00142551 IPU lib:Support HW triple buffer

This patch supports IPU HW triple buffer.
1) For IC/IRT channels, add the third IPU idmac's
   dummy buffer address to pass building.
2) For show-to-fb case, change the three output
   buffer addresses to align with framebuffer's
   buffer addresses. buf2 is first virtual buffer,
   buf0 is the second virtual buffer and buf1 is
   the third virtual buffer.

Signed-off-by: Liu Ying <Ying.Liu@freescale.com>
(cherry picked from commit 99363f4f7cfb917498fc0b4ac0dfa91767f11284)
---
 ipu/mxc_ipu_hl_lib.c | 24 ++++++++++++++++++++----
 ipu/mxc_ipu_lib.c    |  2 ++
 2 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/ipu/mxc_ipu_hl_lib.c b/ipu/mxc_ipu_hl_lib.c
index ab70e4c..65931a0 100644
--- a/ipu/mxc_ipu_hl_lib.c
+++ b/ipu/mxc_ipu_hl_lib.c
@@ -1342,8 +1342,8 @@ again:
 
 		ipu_priv_handle->output.o_minfo[0].paddr = fb_fix.smem_start +
 			ipu_priv_handle->output.screen_size + offset;
-		ipu_priv_handle->output.o_minfo[1].paddr = fb_fix.smem_start + offset;
-		ipu_priv_handle->output.o_minfo[2].paddr = fb_fix.smem_start
+		ipu_priv_handle->output.o_minfo[2].paddr = fb_fix.smem_start + offset;
+		ipu_priv_handle->output.o_minfo[1].paddr = fb_fix.smem_start
 			+ 2*ipu_priv_handle->output.screen_size + offset;
 
 		ipu_priv_handle->output.fb_mem = mmap(0,
@@ -1726,6 +1726,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 				IPU_ROTATE_NONE,
 				buf0,
 				buf1,
+				0,
 				ipu_priv_handle->i_uoff, ipu_priv_handle->i_voff);
 		if (ret < 0) {
 			ipu_uninit_channel(ipu_priv_handle->output.ic_chan);
@@ -1743,6 +1744,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 					IPU_ROTATE_NONE,
 					buf0_p,
 					buf1_p,
+					0,
 					ipu_priv_handle->i_uoff, ipu_priv_handle->i_voff);
 			if (ret < 0) {
 				ipu_uninit_channel(ipu_priv_handle->output.vdi_ic_p_chan);
@@ -1758,6 +1760,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 					IPU_ROTATE_NONE,
 					buf0_n,
 					buf1_n,
+					0,
 					ipu_priv_handle->i_uoff, ipu_priv_handle->i_voff);
 			if (ret < 0) {
 				ipu_uninit_channel(ipu_priv_handle->output.vdi_ic_n_chan);
@@ -1776,6 +1779,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 					ipu_priv_handle->ov_minfo[0].paddr + ipu_priv_handle->ov_off,
 					ipu_priv_handle->mode & OP_STREAM_MODE ?
 					ipu_priv_handle->ov_minfo[1].paddr + ipu_priv_handle->ov_off : 0,
+					0,
 					ipu_priv_handle->ov_uoff, ipu_priv_handle->ov_voff);
 			if (ret < 0) {
 				ipu_uninit_channel(ipu_priv_handle->output.ic_chan);
@@ -1793,6 +1797,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 						ipu_priv_handle->ov_alpha_minfo[0].paddr + ipu_priv_handle->ov_alpha_off,
 						ipu_priv_handle->mode & OP_STREAM_MODE ?
 						ipu_priv_handle->ov_alpha_minfo[1].paddr + ipu_priv_handle->ov_alpha_off : 0,
+						0,
 						0, 0);
 				if (ret < 0) {
 					ipu_uninit_channel(ipu_priv_handle->output.ic_chan);
@@ -1822,6 +1827,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 				output->rot,
 				buf0,
 				buf1,
+				0,
 				ipu_priv_handle->output.o_uoff, ipu_priv_handle->output.o_voff);
 		if (ret < 0) {
 			ipu_uninit_channel(ipu_priv_handle->output.ic_chan);
@@ -1874,6 +1880,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 				ipu_priv_handle->i_minfo[0].paddr + ipu_priv_handle->i_off,
 				ipu_priv_handle->mode & OP_STREAM_MODE ?
 				ipu_priv_handle->i_minfo[1].paddr + ipu_priv_handle->i_off : 0,
+				0,
 				ipu_priv_handle->i_uoff, ipu_priv_handle->i_voff);
 		if (ret < 0) {
 			ipu_uninit_channel(ipu_priv_handle->output.rot_chan);
@@ -1897,6 +1904,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 				ipu_priv_handle->mode & OP_STREAM_MODE ?
 				ipu_priv_handle->output.o_minfo[1].paddr +
 				ipu_priv_handle->output.o_off : 0,
+				0,
 				ipu_priv_handle->output.o_uoff, ipu_priv_handle->output.o_voff);
 		if (ret < 0) {
 			ipu_uninit_channel(ipu_priv_handle->output.rot_chan);
@@ -2011,6 +2019,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 				IPU_ROTATE_NONE,
 				buf0,
 				buf1,
+				0,
 				ipu_priv_handle->i_uoff, ipu_priv_handle->i_voff);
 		if (ret < 0) {
 			ipu_uninit_channel(ipu_priv_handle->output.ic_chan);
@@ -2028,6 +2037,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 					IPU_ROTATE_NONE,
 					buf0_p,
 					buf1_p,
+					0,
 					ipu_priv_handle->i_uoff, ipu_priv_handle->i_voff);
 			if (ret < 0) {
 				ipu_uninit_channel(ipu_priv_handle->output.vdi_ic_p_chan);
@@ -2043,6 +2053,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 					IPU_ROTATE_NONE,
 					buf0_n,
 					buf1_n,
+					0,
 					ipu_priv_handle->i_uoff, ipu_priv_handle->i_voff);
 			if (ret < 0) {
 				ipu_uninit_channel(ipu_priv_handle->output.vdi_ic_n_chan);
@@ -2061,6 +2072,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 					ipu_priv_handle->ov_minfo[0].paddr + ipu_priv_handle->ov_off,
 					ipu_priv_handle->mode & OP_STREAM_MODE ?
 					ipu_priv_handle->ov_minfo[1].paddr + ipu_priv_handle->ov_off : 0,
+					0,
 					ipu_priv_handle->ov_uoff, ipu_priv_handle->ov_voff);
 			if (ret < 0) {
 				ipu_uninit_channel(ipu_priv_handle->output.ic_chan);
@@ -2078,6 +2090,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 						ipu_priv_handle->ov_alpha_minfo[0].paddr + ipu_priv_handle->ov_alpha_off,
 						ipu_priv_handle->mode & OP_STREAM_MODE ?
 						ipu_priv_handle->ov_alpha_minfo[1].paddr + ipu_priv_handle->ov_alpha_off : 0,
+						0,
 						0, 0);
 				if (ret < 0) {
 					ipu_uninit_channel(ipu_priv_handle->output.ic_chan);
@@ -2096,6 +2109,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 				ipu_priv_handle->output.r_minfo[0].paddr,
 				ipu_priv_handle->mode & OP_STREAM_MODE ?
 				ipu_priv_handle->output.r_minfo[1].paddr : 0,
+				0,
 				0, 0);
 		if (ret < 0) {
 			ipu_uninit_channel(ipu_priv_handle->output.ic_chan);
@@ -2118,6 +2132,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 				ipu_priv_handle->output.r_minfo[0].paddr,
 				ipu_priv_handle->mode & OP_STREAM_MODE ?
 				ipu_priv_handle->output.r_minfo[1].paddr : 0,
+				0,
 				0, 0);
 		if (ret < 0) {
 			ipu_uninit_channel(ipu_priv_handle->output.ic_chan);
@@ -2142,6 +2157,7 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 				ipu_priv_handle->mode & OP_STREAM_MODE ?
 				ipu_priv_handle->output.o_minfo[1].paddr +
 				ipu_priv_handle->output.o_off : 0,
+				0,
 				ipu_priv_handle->output.o_uoff, ipu_priv_handle->output.o_voff);
 		if (ret < 0) {
 			ipu_uninit_channel(ipu_priv_handle->output.ic_chan);
@@ -2939,9 +2955,9 @@ static int pan_display(ipu_lib_priv_handle_t * ipu_priv_handle, int idx)
 	if (idx == 0)
 		fb_var.yoffset = fb_var.yres;
 	else if (idx == 1)
-		fb_var.yoffset = 0;
-	else
 		fb_var.yoffset = 2*fb_var.yres;
+	else
+		fb_var.yoffset = 0;
 
 	if (ioctl(ipu_priv_handle->output.fd_fb, FBIOPAN_DISPLAY, &fb_var) < 0) {
 		dbg(DBG_WARNING, "Set FB pan display failed!\n");
diff --git a/ipu/mxc_ipu_lib.c b/ipu/mxc_ipu_lib.c
index bf3040d..57b78ef 100644
--- a/ipu/mxc_ipu_lib.c
+++ b/ipu/mxc_ipu_lib.c
@@ -63,6 +63,7 @@ int32_t ipu_init_channel_buffer(ipu_channel_t channel, ipu_buffer_t type,
 		uint32_t stride,
 		ipu_rotate_mode_t rot_mode,
 		dma_addr_t phyaddr_0, dma_addr_t phyaddr_1,
+		dma_addr_t phyaddr_2,
 		uint32_t u_offset, uint32_t v_offset)
 {
 	ipu_channel_buf_parm buf_parm;
@@ -75,6 +76,7 @@ int32_t ipu_init_channel_buffer(ipu_channel_t channel, ipu_buffer_t type,
 	buf_parm.rot_mode = rot_mode;
 	buf_parm.phyaddr_0 = phyaddr_0;
 	buf_parm.phyaddr_1 = phyaddr_1;
+	buf_parm.phyaddr_2 = phyaddr_2;
 	buf_parm.u_offset = u_offset;
 	buf_parm.v_offset = v_offset;
 	return ioctl(fd_ipu, IPU_INIT_CHANNEL_BUFFER, &buf_parm);
-- 
1.8.0

