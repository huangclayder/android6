From 1e34435e27ffee75fe2b5c8b7a4146818c96eaab Mon Sep 17 00:00:00 2001
From: Sammy He <r62914@freescale.com>
Date: Tue, 12 Jan 2010 16:06:37 +0800
Subject: [PATCH 091/280] ENGR00119988 VPU: Add UnlockVpu in failure case of
 DecGetInitialInfo

Add UnlockVpu in failure case to avoid vpu lock.

Signed-off-by: Sammy He <r62914@freescale.com>
---
 vpu/vpu_lib.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/vpu/vpu_lib.c b/vpu/vpu_lib.c
index 8cbdbb8..034074f 100644
--- a/vpu/vpu_lib.c
+++ b/vpu/vpu_lib.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2004-2009 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2004-2010 Freescale Semiconductor, Inc. All Rights Reserved.
  *
  * Copyright (c) 2006, Chips & Media.  All rights reserved.
  */
@@ -2028,12 +2028,14 @@ RetCode vpu_DecGetInitialInfo(DecHandle handle, DecInitialInfo * info)
 		ret = IOGetPhyMem(&pDecInfo->userDataBufMem);
 		if (ret) {
 			err_msg("Unable to obtain physical mem\n");
+			UnlockVpu(vpu_semap);
 			return RETCODE_FAILURE;
 		}
 		if (IOGetVirtMem(&pDecInfo->userDataBufMem) <= 0) {
 			IOFreePhyMem(&pDecInfo->userDataBufMem);
 			pDecInfo->userDataBufMem.phy_addr = 0;
 			err_msg("Unable to obtain virtual mem\n");
+			UnlockVpu(vpu_semap);
 			return RETCODE_FAILURE;
 		}
 		VpuWriteReg(CMD_DEC_PIC_USER_DATA_BASE_ADDR, pDecInfo->userDataBufMem.phy_addr);
@@ -2095,12 +2097,16 @@ RetCode vpu_DecGetInitialInfo(DecHandle handle, DecInitialInfo * info)
 	}
 
 	if (pCodecInst->codecMode  == MJPG_DEC) {
-		if (info->picWidth < 16 || info->picHeight < 16)
+		if (info->picWidth < 16 || info->picHeight < 16) {
+			UnlockVpu(vpu_semap);
 			return RETCODE_FAILURE;
+		}
 	}
 	else {
-		if (info->picWidth < 64 || info->picHeight < 64)
+		if (info->picWidth < 64 || info->picHeight < 64) {
+			UnlockVpu(vpu_semap);
 			return RETCODE_FAILURE;
+		}
 	}
 
 	val = VpuReadReg(RET_DEC_SEQ_SRC_F_RATE);
-- 
1.8.0

