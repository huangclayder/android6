From 6d5bbf0a007da286b1e99ef4d2c0b62a945820a5 Mon Sep 17 00:00:00 2001
From: Jason Chen <b02280@freescale.com>
Date: Mon, 8 Feb 2010 15:18:20 +0800
Subject: [PATCH 098/280] ENGR00120845 ipu lib: can not get whole frame data
 for one shot process

ipu lib can not get whole frame data for one shot process for not show
to fb mode, need use OUT_EOF irq replace IN_EOF irq.

Signed-off-by: Jason Chen <b02280@freescale.com>
---
 ipu/mxc_ipu_hl_lib.c | 63 ++++++++++++++++++++++++++++++++++++----------------
 1 file changed, 44 insertions(+), 19 deletions(-)

diff --git a/ipu/mxc_ipu_hl_lib.c b/ipu/mxc_ipu_hl_lib.c
index 38c295d..32dd76e 100644
--- a/ipu/mxc_ipu_hl_lib.c
+++ b/ipu/mxc_ipu_hl_lib.c
@@ -1848,25 +1848,50 @@ static int _ipu_channel_setup(ipu_lib_input_param_t * input,
 	}
 
 	/*only need one irq even for 2 output case*/
-	switch (ipu_priv_handle->output[0].begin_chan) {
-	case MEM_ROT_ENC_MEM:
-		ipu_priv_handle->irq = IPU_IRQ_PRP_ENC_ROT_IN_EOF;
-		break;
-	case MEM_ROT_VF_MEM:
-		ipu_priv_handle->irq = IPU_IRQ_PRP_VF_ROT_IN_EOF;
-		break;
-	case MEM_ROT_PP_MEM:
-		ipu_priv_handle->irq = IPU_IRQ_PP_ROT_IN_EOF;
-		break;
-	case MEM_PRP_ENC_MEM:
-	case MEM_PRP_VF_MEM:
-		ipu_priv_handle->irq = IPU_IRQ_PRP_IN_EOF;
-		break;
-	case MEM_PP_MEM:
-		ipu_priv_handle->irq = IPU_IRQ_PP_IN_EOF;
-		break;
-	default:
-		dbg(DBG_ERR, "Should not be here!\n");
+	if (output->show_to_fb) {
+		switch (ipu_priv_handle->output[0].begin_chan) {
+			case MEM_ROT_ENC_MEM:
+				ipu_priv_handle->irq = IPU_IRQ_PRP_ENC_ROT_IN_EOF;
+				break;
+			case MEM_ROT_VF_MEM:
+				ipu_priv_handle->irq = IPU_IRQ_PRP_VF_ROT_IN_EOF;
+				break;
+			case MEM_ROT_PP_MEM:
+				ipu_priv_handle->irq = IPU_IRQ_PP_ROT_IN_EOF;
+				break;
+			case MEM_PRP_ENC_MEM:
+			case MEM_PRP_VF_MEM:
+				ipu_priv_handle->irq = IPU_IRQ_PRP_IN_EOF;
+				break;
+			case MEM_PP_MEM:
+				ipu_priv_handle->irq = IPU_IRQ_PP_IN_EOF;
+				break;
+			default:
+				dbg(DBG_ERR, "Should not be here!\n");
+		}
+	} else {
+		switch (ipu_priv_handle->output[0].end_chan) {
+			case MEM_ROT_ENC_MEM:
+				ipu_priv_handle->irq = IPU_IRQ_PRP_ENC_ROT_OUT_EOF;
+				break;
+			case MEM_ROT_VF_MEM:
+				ipu_priv_handle->irq = IPU_IRQ_PRP_VF_ROT_OUT_EOF;
+				break;
+			case MEM_ROT_PP_MEM:
+				ipu_priv_handle->irq = IPU_IRQ_PP_ROT_OUT_EOF;
+				break;
+			case MEM_PRP_ENC_MEM:
+				ipu_priv_handle->irq = IPU_IRQ_PRP_ENC_OUT_EOF;
+				break;
+			case MEM_PRP_VF_MEM:
+				ipu_priv_handle->irq = IPU_IRQ_PRP_VF_OUT_EOF;
+				break;
+			case MEM_PP_MEM:
+				ipu_priv_handle->irq = IPU_IRQ_PP_OUT_EOF;
+				break;
+			default:
+				dbg(DBG_ERR, "Should not be here!\n");
+		}
 	}
 done:
 	return ret;
-- 
1.8.0

