From e0b4052817c3793d490b51333cb8aa8d8ce5399b Mon Sep 17 00:00:00 2001
From: Sammy He <r62914@freescale.com>
Date: Tue, 14 Feb 2012 13:48:04 +0800
Subject: [PATCH 196/280] ENGR00174323 vpu: Revert "ENGR00161954 Workaround to
 fix unstable issue"

This reverts commit c77703ca09096eb9aaa4e9d2e87d031b85132025.
The muti-instances codec unstable issue has been fixed with the
patch in kernel, so remove this workaround here.

Signed-off-by: Sammy He <r62914@freescale.com>
---
 vpu/vpu_lib.c | 12 ------------
 vpu/vpu_lib.h |  2 +-
 2 files changed, 1 insertion(+), 13 deletions(-)

diff --git a/vpu/vpu_lib.c b/vpu/vpu_lib.c
index aeca301..5f71a4d 100644
--- a/vpu/vpu_lib.c
+++ b/vpu/vpu_lib.c
@@ -2430,12 +2430,6 @@ RetCode vpu_DecOpen(DecHandle * pHandle, DecOpenParam * pop)
 	if (!LockVpu(vpu_semap))
 		return RETCODE_FAILURE_TIMEOUT;
 
-	/* Workaround to make vpu clock always on when vpu is in decoding to fix unstable
-	 * issue of mult-instances decoding on mx6 , the clock gated-on here will be
-	 * gated-off in vpuDecClose function */
-	if (cpu_is_mx6x())
-		IOClkGateSet(true);
-
 	ret = GetCodecInstance(&pCodecInst);
 	if (ret == RETCODE_FAILURE) {
 		*pHandle = 0;
@@ -2648,12 +2642,6 @@ dec_out:
 	IOFreePhyMem(&pCodecInst->contextBufMem);
 
 	FreeCodecInstance(pCodecInst);
-
-	/* Gate-off the clock that is enabled in vpuDecOpen for workaround the issue
-	 * of mult-instances decoding on mx6 */
-	if (cpu_is_mx6x())
-		IOClkGateSet(false);
-
 	UnlockVpu(vpu_semap);
 
 	return RETCODE_SUCCESS;
diff --git a/vpu/vpu_lib.h b/vpu/vpu_lib.h
index 7724279..a42452b 100644
--- a/vpu/vpu_lib.h
+++ b/vpu/vpu_lib.h
@@ -667,7 +667,7 @@ typedef struct vpu_versioninfo {
  * v4.2.2 [2008.09.03] support encoder on MX51
  * v4.0.2 [2008.08.21] add the IOClkGateSet() for power saving.
  */
-#define VPU_LIB_VERSION_CODE	VPU_LIB_VERSION(5, 4, 0)
+#define VPU_LIB_VERSION_CODE	VPU_LIB_VERSION(5, 4, 1)
 
 extern unsigned int system_rev;
 
-- 
1.8.0

