From d6f819ab18d314a3c1bd5c18217fd33acb383264 Mon Sep 17 00:00:00 2001
From: Sammy He <r62914@freescale.com>
Date: Thu, 16 Oct 2008 17:21:30 +0800
Subject: [PATCH 025/280] ENGR00095484 Support VPU loopback and multi
 encoder/decoder in MX51

Support VPU loopback and multi encoder/decoder in MX51

Signed-off-by: Sammy He <r62914@freescale.com>
---
 vpu/vpu_lib.c | 45 +++++++++++++++++++++++----------------------
 1 file changed, 23 insertions(+), 22 deletions(-)

diff --git a/vpu/vpu_lib.c b/vpu/vpu_lib.c
index 412fe72..4577dc8 100644
--- a/vpu/vpu_lib.c
+++ b/vpu/vpu_lib.c
@@ -185,6 +185,13 @@ RetCode vpu_Init(PhysicalAddress workBuf)
 	if (!cpu_is_mx51())
 		VpuWriteReg(BIT_RESET_CTRL, 0);
 
+	pCodecInst = &codecInstPool[0];
+	for (i = 0; i < MAX_NUM_INSTANCE; ++i, ++pCodecInst) {
+		pCodecInst->instIndex = i;
+		pCodecInst->inUse = 0;
+	}
+	VpuWriteReg(BIT_BIT_STREAM_PARAM, 0);
+
 	if (!cpu_is_mx27()) {
 		if (VpuReadReg(BIT_CUR_PC) != 0) {
 			/* IRQ is disabled during shutdown */
@@ -202,24 +209,19 @@ RetCode vpu_Init(PhysicalAddress workBuf)
 		VpuWriteReg(BIT_CODE_DOWN, (i << 16) | data);
 	}
 
-	if (cpu_is_mx51()) {
-		data = STREAM_ENDIAN;
-		data |= STREAM_FULL_EMPTY_CHECK_DISABLE << 2;
-		data |= BUF_PIC_FLUSH << 3;
-		data |= BUF_PIC_RESET << 4;
-		VpuWriteReg(BIT_BIT_STREAM_CTRL, data);
-		VpuWriteReg(BIT_AXI_SRAM_USE, 0);	/* not use SRAM */
-
-	} else {
-		data = STREAM_FULL_EMPTY_CHECK_DISABLE << 1;
-		data |= STREAM_ENDIAN;
-		data |= 1 << 2;
-		VpuWriteReg(BIT_BIT_STREAM_CTRL, data);
-	}
-
+	data =
+	    STREAM_ENDIAN | STREAM_FULL_EMPTY_CHECK_DISABLE <<
+	    BIT_BUF_CHECK_DIS;
+	data |=
+	    BUF_PIC_FLUSH << BIT_BUF_PIC_FLUSH | BUF_PIC_RESET <<
+	    BIT_BUF_PIC_RESET;
+	VpuWriteReg(BIT_BIT_STREAM_CTRL, data);
 	VpuWriteReg(BIT_FRAME_MEM_CTRL, IMAGE_ENDIAN);
 	VpuWriteReg(BIT_INT_ENABLE, 8);	/* PIC_RUN irq enable */
 
+	if (cpu_is_mx51())
+		VpuWriteReg(BIT_AXI_SRAM_USE, 0);	/* not use SRAM */
+
 	if (cpu_is_mx27()) {
 		ResetVpu();
 	}
@@ -227,12 +229,6 @@ RetCode vpu_Init(PhysicalAddress workBuf)
 	VpuWriteReg(BIT_CODE_RUN, 1);
 	IOClkGateSet(false);
 
-	pCodecInst = &codecInstPool[0];
-	for (i = 0; i < MAX_NUM_INSTANCE; ++i, ++pCodecInst) {
-		pCodecInst->instIndex = i;
-		pCodecInst->inUse = 0;
-	}
-
 	free(bit_code);
 
 	EXIT_FUNC();
@@ -1583,7 +1579,12 @@ RetCode vpu_DecSetEscSeqInit(DecHandle handle, int escape)
 	pDecInfo = &pCodecInst->CodecInfo.decInfo;
 
 	IOClkGateSet(true);
-	VpuWriteReg(CMD_DEC_SEQ_INIT_ESCAPE, (escape & 0x01));
+	if (escape == 0)
+		VpuWriteReg(CMD_DEC_SEQ_INIT_ESCAPE,
+			    VpuReadReg(CMD_DEC_SEQ_INIT_ESCAPE) & ~0x01);
+	else
+		VpuWriteReg(CMD_DEC_SEQ_INIT_ESCAPE,
+			    VpuReadReg(CMD_DEC_SEQ_INIT_ESCAPE) | 0x01);
 	IOClkGateSet(false);
 
 	return RETCODE_SUCCESS;
-- 
1.8.0

