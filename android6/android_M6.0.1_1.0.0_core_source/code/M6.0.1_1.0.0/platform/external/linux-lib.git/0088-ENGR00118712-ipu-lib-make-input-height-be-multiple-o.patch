From d53608ebee40b0cdb1736ccb78bb24abf156ec7e Mon Sep 17 00:00:00 2001
From: Jason Chen <b02280@freescale.com>
Date: Thu, 3 Dec 2009 16:44:23 +0800
Subject: [PATCH 088/280] ENGR00118712 ipu lib: make input height be multiple
 of 8 pixels

Make input height be multiple of 8 pixels.

Signed-off-by: Jason Chen <b02280@freescale.com>
---
 ipu/mxc_ipu_hl_lib.c | 25 ++++++++++++++-----------
 1 file changed, 14 insertions(+), 11 deletions(-)

diff --git a/ipu/mxc_ipu_hl_lib.c b/ipu/mxc_ipu_hl_lib.c
index 918a325..08e7cd4 100644
--- a/ipu/mxc_ipu_hl_lib.c
+++ b/ipu/mxc_ipu_hl_lib.c
@@ -409,6 +409,7 @@ static int _ipu_task_check(ipu_lib_input_param_t * input,
 		ipu_priv_handle->iwidth = input->input_crop_win.win_w;
 		ipu_priv_handle->iwidth = ipu_priv_handle->iwidth  - ipu_priv_handle->iwidth%8;
 		ipu_priv_handle->iheight = input->input_crop_win.win_h;
+		ipu_priv_handle->iheight = ipu_priv_handle->iheight  - ipu_priv_handle->iheight%8;
 
 		if ((ipu_priv_handle->iwidth != input->width) || (ipu_priv_handle->iheight != input->height)) {
 			/* NOTE: u v offset should based on start point of i_off*/
@@ -470,6 +471,7 @@ static int _ipu_task_check(ipu_lib_input_param_t * input,
 			ipu_priv_handle->ovwidth = overlay->ov_crop_win.win_w;
 			ipu_priv_handle->ovwidth = ipu_priv_handle->ovwidth  - ipu_priv_handle->ovwidth%8;
 			ipu_priv_handle->ovheight = overlay->ov_crop_win.win_h;
+			ipu_priv_handle->ovheight = ipu_priv_handle->ovheight  - ipu_priv_handle->ovheight%8;
 
 			if ((ipu_priv_handle->ovwidth != overlay->width) || (ipu_priv_handle->ovheight != overlay->height)) {
 				/* NOTE: u v offset should based on start point of ov_off*/
@@ -1158,6 +1160,14 @@ static void _ipu_mem_free(ipu_lib_handle_t * ipu_handle)
 
 			if (ipu_priv_handle->output[j].fb_mem)
 				munmap(ipu_priv_handle->output[j].fb_mem, 2*ipu_priv_handle->output[j].screen_size);
+
+			if (ipu_priv_handle->output[j].fb_chan == MEM_FG_SYNC) {
+				int blank = FB_BLANK_POWERDOWN;
+				if ( ioctl(ipu_priv_handle->output[j].fd_fb, FBIOBLANK, blank) < 0) {
+					dbg(DBG_ERR, "POWERDOWN FB failed!\n");
+				}
+			}
+
 			close(ipu_priv_handle->output[j].fd_fb);
 		}
 	}
@@ -1970,7 +1980,7 @@ void mxc_ipu_lib_task_uninit(ipu_lib_handle_t * ipu_handle)
 
 	/* if stream mode, wait for latest frame finish */
 	if (ipu_priv_handle->mode & OP_STREAM_MODE) {
-		if (_ipu_wait_for_irq(ipu_priv_handle->irq, 20)) {
+		if (_ipu_wait_for_irq(ipu_priv_handle->irq, 1)) {
 			dbg(DBG_ERR, "wait for irq %d time out!\n", ipu_priv_handle->irq);
 		} else
 			ipu_priv_handle->output_fr_cnt++;
@@ -2004,13 +2014,6 @@ void mxc_ipu_lib_task_uninit(ipu_lib_handle_t * ipu_handle)
 		if (ipu_priv_handle->output[i].show_to_fb) {
 			ipu_unlink_channels(ipu_priv_handle->output[i].end_chan,
 					ipu_priv_handle->output[i].fb_chan);
-
-			if (ipu_priv_handle->output[i].fb_chan == MEM_FG_SYNC) {
-				int blank = FB_BLANK_POWERDOWN;
-				if ( ioctl(ipu_priv_handle->output[i].fd_fb, FBIOBLANK, blank) < 0) {
-					dbg(DBG_ERR, "POWERDOWN FB failed!\n");
-				}
-			}
 		}
 
 		if((ipu_priv_handle->output[i].task_mode & ROT_MODE) &&
@@ -2258,7 +2261,7 @@ int mxc_ipu_lib_task_buf_update(ipu_lib_handle_t * ipu_handle,
 		else
 			ipu_priv_handle->input_fr_cnt = 1;
 
-		if (_ipu_wait_for_irq(ipu_priv_handle->irq, 20)) {
+		if (_ipu_wait_for_irq(ipu_priv_handle->irq, 1)) {
 			dbg(DBG_ERR, "wait for irq %d time out!\n", ipu_priv_handle->irq);
 			return -1;
 		}
@@ -2282,7 +2285,7 @@ int mxc_ipu_lib_task_buf_update(ipu_lib_handle_t * ipu_handle,
 		dbg(DBG_DEBUG, "output pingpang %d\n", ipu_priv_handle->output_bufnum);
 
 		if (ipu_priv_handle->mode & OP_STREAM_MODE) {
-			if (_ipu_wait_for_irq(ipu_priv_handle->irq, 20)) {
+			if (_ipu_wait_for_irq(ipu_priv_handle->irq, 1)) {
 				dbg(DBG_ERR, "wait for irq %d time out!\n", ipu_priv_handle->irq);
 				return -1;
 			}
@@ -2323,7 +2326,7 @@ int mxc_ipu_lib_task_buf_update(ipu_lib_handle_t * ipu_handle,
 		if (ipu_priv_handle->mode & OP_STREAM_MODE)
 			ipu_priv_handle->update_bufnum = ipu_priv_handle->update_bufnum ? 0 : 1;
 		else {
-			if (_ipu_wait_for_irq(ipu_priv_handle->irq, 20)) {
+			if (_ipu_wait_for_irq(ipu_priv_handle->irq, 1)) {
 				dbg(DBG_ERR, "wait for irq %d time out!\n", ipu_priv_handle->irq);
 				return -1;
 			}
-- 
1.8.0

