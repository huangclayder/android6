From 290b8a89790461232e63d19bd4f0fad71d6ddb58 Mon Sep 17 00:00:00 2001
From: Sammy He <r62914@freescale.com>
Date: Fri, 14 Nov 2008 08:26:24 +0800
Subject: [PATCH 030/280] ENGR00098896 fix vpu protection isn't unclocked in
 filling stream failed case

GetOutputInfo may not be called in abnormal case, e.g,filling
stream failed, then mutex is locked always. Make sure GetOutputInfo is
called before DecClose/EncClose.

Signed-off-by: Sammy He <r62914@freescale.com>
---
 vpu/vpu_lib.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/vpu/vpu_lib.c b/vpu/vpu_lib.c
index 1b0ac95..6494463 100644
--- a/vpu/vpu_lib.c
+++ b/vpu/vpu_lib.c
@@ -431,6 +431,10 @@ RetCode vpu_EncClose(EncHandle handle)
 	pCodecInst = handle;
 	pEncInfo = &pCodecInst->CodecInfo.encInfo;
 
+	if (*ppendingInst == pCodecInst) {
+		return RETCODE_FRAME_NOT_COMPLETE;
+	}
+
 	LockVpu(vpu_semap);
 	if (pEncInfo->initialInfoObtained) {
 		BitIssueCommand(pCodecInst->instIndex, pCodecInst->codecMode,
@@ -1498,7 +1502,7 @@ RetCode vpu_DecOpen(DecHandle * pHandle, DecOpenParam * pop)
 	VpuWriteReg(pDecInfo->frameDisplayFlagRegAddr, 0);
 
 	VpuWriteReg(BIT_BIT_STREAM_PARAM,
-		    VpuReadReg(BIT_BIT_STREAM_PARAM) | 1 << (instIdx + 2));
+		    VpuReadReg(BIT_BIT_STREAM_PARAM) & ~(1 << (instIdx + 2)));
 	UnlockVpu(vpu_semap);
 
 	return RETCODE_SUCCESS;
@@ -1529,6 +1533,10 @@ RetCode vpu_DecClose(DecHandle handle)
 	pCodecInst = handle;
 	pDecInfo = &pCodecInst->CodecInfo.decInfo;
 
+	if (*ppendingInst == pCodecInst) {
+		return RETCODE_FRAME_NOT_COMPLETE;
+	}
+
 	LockVpu(vpu_semap);
 	if (pDecInfo->initialInfoObtained) {
 		if (cpu_is_mx51()) {
-- 
1.8.0

