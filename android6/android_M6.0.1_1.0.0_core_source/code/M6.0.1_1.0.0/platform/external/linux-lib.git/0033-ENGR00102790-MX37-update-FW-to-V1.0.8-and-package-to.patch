From 46abe4d19556da9fb9dc415c721bd62061297a70 Mon Sep 17 00:00:00 2001
From: Robby Cai <r63905@freescale.com>
Date: Mon, 22 Dec 2008 22:17:23 +0800
Subject: [PATCH 033/280] ENGR00102790 [MX37] update FW to V1.0.8 and package
 to V1.4.0

*) MPEG4 ASP bug fix
*) MPEG4 deblocking filter enhancement
*) the API IOSystemInit and IOSystemShutdown will not be exposed to the applications in the future, the application should use vpu_Init() and vpu_UnInit() instead. Please see the reference codes.
*) the chromaInterleave should apply for each instance via vpu_DecOpen(), not for whole as before.
*) Add the Frame Buffer Status, Mb Param report, Mv Param report, user data report

Signed-off-by: Robby Cai <r63905@freescale.com>
---
 vpu/vpu_fw/vpu_fw_imx37.bin | Bin 98320 -> 98320 bytes
 vpu/vpu_io.c                |  95 +++++++++++----
 vpu/vpu_io.h                |   7 ++
 vpu/vpu_lib.c               | 291 ++++++++++++++++++++++++++++++++++++++++++--
 vpu/vpu_lib.h               |  72 ++++++++++-
 vpu/vpu_reg.h               |   6 +
 6 files changed, 429 insertions(+), 42 deletions(-)

diff --git a/vpu/vpu_fw/vpu_fw_imx37.bin b/vpu/vpu_fw/vpu_fw_imx37.bin
index 362177dc132cf5379a675ad60d085a7f20827a0f..d2606f55eafbe8b645ddf1340990624e0b99e7f0 100644
GIT binary patch
delta 26735
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
Jy~Uw8{turmqn!W%

delta 20544
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

diff --git a/vpu/vpu_io.c b/vpu/vpu_io.c
index 12bacd0..9400801 100644
--- a/vpu/vpu_io.c
+++ b/vpu/vpu_io.c
@@ -46,6 +46,8 @@ static unsigned long vpu_reg_base;
 unsigned int system_rev;
 semaphore_t *vpu_semap;
 
+int _IOGetPhyMem(int which, vpu_mem_desc *buff);
+
 /*
  * Note: the order does not correspond to the bit order in BIT_AXI_SRAM_USE
  * register, but correspond to the items in use_iram_table array.
@@ -206,7 +208,6 @@ inline unsigned long *reg_map(unsigned long offset)
  */
 int IOSystemInit(void *callback)
 {
-	struct iram_t iram;
 	int ret;
 
 	vpu_semap = vpu_semaphore_open("/dev/shm/vpu.shm");
@@ -246,7 +247,7 @@ int IOSystemInit(void *callback)
 	bit_work_addr.size = WORK_BUF_SIZE + PARA_BUF_SIZE +
 	    					CODE_BUF_SIZE + PARA_BUF2_SIZE;
 
-	if (ioctl(vpu_fd, VPU_IOC_GET_WORK_ADDR, &bit_work_addr) < 0) {
+	if (_IOGetPhyMem(VPU_IOC_GET_WORK_ADDR, &bit_work_addr) < 0) {
 		err_msg("Get bitwork address failed!\n");
 		goto err;
 	}
@@ -254,14 +255,6 @@ int IOSystemInit(void *callback)
 	if (IOGetVirtMem(&bit_work_addr) <= 0)
 		goto err;
 
-	vpu_Init(bit_work_addr.phy_addr);
-	if (cpu_is_mx37()) {
-		IOGetIramBase(&iram);
-		ret = get_iram_setting(iram, use_iram_table, 4);
-		if (ret != -1)
-			set_iram(iram, use_iram_table, 4);
-	}
-
 	UnlockVpu(vpu_semap);
 	return 0;
 
@@ -272,6 +265,19 @@ int IOSystemInit(void *callback)
 	return -1;
 }
 
+void vpu_setting_iram()
+{
+	struct iram_t iram;
+	int ret;
+
+	if (cpu_is_mx37()) {
+		IOGetIramBase(&iram);
+		ret = get_iram_setting(iram, use_iram_table, 4);
+		if (ret != -1)
+			set_iram(iram, use_iram_table, 4);
+	}
+}
+
 /*!
  * @brief IO system shut down.
  *
@@ -290,7 +296,14 @@ int IOSystemInit(void *callback)
 int IOSystemShutdown(void)
 {
 	semaphore_wait(vpu_semap);
+
+	/*
+	 * Do not call IOFreePhyMem/IOFreePhyPicParaMem/IOFreePhyUserDataMem
+	 * to free memory, let kernel do.
+	 */
 	IOFreeVirtMem(&bit_work_addr);
+	IOFreeVirtMem(&pic_para_addr);
+	IOFreeVirtMem(&user_data_addr);
 
 	if (munmap((void *)vpu_reg_base, BIT_REG_MARGIN) != 0)
 		err_msg("munmap failed\n");
@@ -322,25 +335,22 @@ unsigned long VpuReadReg(unsigned long addr)
 
 /*!
  * @brief Allocated buffer of requested size
- * When user wants to get massive memory
- * for the system, they needs to fill the required
- * size in buff structure, and if this function
- * succeeds in allocating memory and returns 0,
- * the returned physical memory is filled in
- * phy_addr of buff structure. If the function fails
- * and return -1,  the phy_addr remains the same as before.
- * memory size is in byte.
+ * When user wants to get massive memory for the system, they needs to fill
+ * the required size in buff structure, and if this function succeeds in
+ * allocating memory and returns 0, the returned physical memory is filled in
+ * phy_addr of buff structure. If the function fails and return -1,
+ * the phy_addr remains the same as before.
  *
- * @param buff	the structure contains the memory information to be got;
+ * @param buff	the structure contains the memory information to be retrieved;
  *
  * @return
- * @li 0	          Allocation memory success.
+ * @li 0		Allocation memory success.
  * @li -1		Allocation memory failure.
  */
 static unsigned int sz_alloc;
-int IOGetPhyMem(vpu_mem_desc * buff)
+int _IOGetPhyMem(int which, vpu_mem_desc *buff)
 {
-	if (ioctl(vpu_fd, VPU_IOC_PHYMEM_ALLOC, buff) < 0) {
+	if (ioctl(vpu_fd, which, buff) < 0) {
 		err_msg("mem allocation failed!\n");
 		buff->phy_addr = 0;
 		buff->cpu_addr = 0;
@@ -353,6 +363,21 @@ int IOGetPhyMem(vpu_mem_desc * buff)
 	return 0;
 }
 
+int IOGetPhyMem(vpu_mem_desc * buff)
+{
+	return _IOGetPhyMem(VPU_IOC_PHYMEM_ALLOC, buff);
+}
+
+int IOGetPhyPicParaMem(vpu_mem_desc * buff)
+{
+	return _IOGetPhyMem(VPU_IOC_GET_PIC_PARA_ADDR, buff);
+}
+
+int IOGetPhyUserDataMem(vpu_mem_desc * buff)
+{
+	return _IOGetPhyMem(VPU_IOC_GET_USER_DATA_ADDR, buff);
+}
+
 /*!
  * @brief Free specified memory
  * When user wants to free massive memory for the system,
@@ -365,18 +390,35 @@ int IOGetPhyMem(vpu_mem_desc * buff)
  * @li 0            Freeing memory success.
  * @li -1		Freeing memory failure.
  */
-int IOFreePhyMem(vpu_mem_desc * buff)
+int _IOFreePhyMem(int which, vpu_mem_desc * buff)
 {
 	if (buff->phy_addr != 0) {
 		dprintf(3, "%s: phy addr = %08lx\n", __func__, buff->phy_addr);
-		ioctl(vpu_fd, VPU_IOC_PHYMEM_FREE, buff);
+		ioctl(vpu_fd, which, buff);
 	}
 
-	buff->phy_addr = 0;
-	buff->cpu_addr = 0;
+	sz_alloc -= buff->size;
+	dprintf(3, "%s: total=%d\n", __func__, sz_alloc);
+	memset(buff, 0, sizeof(*buff));
+
 	return 0;
 }
 
+int IOFreePhyMem(vpu_mem_desc * buff)
+{
+	return _IOFreePhyMem(VPU_IOC_PHYMEM_FREE, buff);
+}
+
+int IOFreePhyPicParaMem(vpu_mem_desc * buff)
+{
+	return _IOFreePhyMem(VPU_IOC_GET_PIC_PARA_ADDR, buff);
+}
+
+int IOFreePhyUserDataMem(vpu_mem_desc * buff)
+{
+	return _IOFreePhyMem(VPU_IOC_GET_USER_DATA_ADDR, buff);
+}
+
 /*!
  * @brief Map physical memory to user space.
  *
@@ -396,6 +438,7 @@ int IOGetVirtMem(vpu_mem_desc * buff)
 	}
 
 	buff->virt_uaddr = va_addr;
+	dprintf(3, "%s: virt addr = %08lx\n", __func__, buff->virt_uaddr);
 	return va_addr;
 }
 
diff --git a/vpu/vpu_io.h b/vpu/vpu_io.h
index 8f47a74..23e03d6 100644
--- a/vpu/vpu_io.h
+++ b/vpu/vpu_io.h
@@ -57,10 +57,15 @@ typedef struct iram_t {
 #define	VPU_IOC_IRAM_BASE	_IO(VPU_IOC_MAGIC, 6)
 #define	VPU_IOC_CLKGATE_SETTING	_IO(VPU_IOC_MAGIC, 7)
 #define VPU_IOC_GET_WORK_ADDR   _IO(VPU_IOC_MAGIC, 8)
+#define VPU_IOC_GET_PIC_PARA_ADDR   _IO(VPU_IOC_MAGIC, 9)
+#define VPU_IOC_GET_USER_DATA_ADDR   _IO(VPU_IOC_MAGIC, 10)
+
 
 typedef void (*vpu_callback) (int status);
 
 vpu_mem_desc bit_work_addr;
+vpu_mem_desc pic_para_addr;
+vpu_mem_desc user_data_addr;
 
 int IOSystemInit(void *callback);
 int IOSystemShutdown(void);
@@ -71,6 +76,8 @@ int IOFreeVirtMem(vpu_mem_desc * buff);
 int IOWaitForInt(int timeout_in_ms);
 int IOGetIramBase(iram_t * iram);
 int IOClkGateSet(int on);
+int IOFreePhyPicParaMem(vpu_mem_desc * buff);
+int IOFreePhyUserDataMem(vpu_mem_desc * buff);
 
 unsigned long VpuWriteReg(unsigned long addr, unsigned int data);
 unsigned long VpuReadReg(unsigned long addr);
diff --git a/vpu/vpu_lib.c b/vpu/vpu_lib.c
index b10fa86..b0487bf 100644
--- a/vpu/vpu_lib.c
+++ b/vpu/vpu_lib.c
@@ -78,8 +78,15 @@ unsigned long *virt_paraBuf;
 unsigned long *virt_paraBuf2;
 
 extern vpu_mem_desc bit_work_addr;
+extern vpu_mem_desc pic_para_addr;
+extern vpu_mem_desc user_data_addr;
 extern semaphore_t *vpu_semap;
+#define PIC_PARA_BUF_SIZE	0x40000
+#define USER_DATA_BUF_SIZE	0x100
 
+extern void vpu_setting_iram();
+extern int IOGetPhyPicParaMem(vpu_mem_desc * buff);
+extern int IOGetPhyUserDataMem(vpu_mem_desc * buff);
 /*!
  * @brief
  * This functure indicate whether processing(encoding/decoding) a frame
@@ -114,15 +121,13 @@ int vpu_WaitForInt(int timeout_in_ms)
  * This function initializes VPU hardware and proper data structures/resources.
  * The user must call this function only once before using VPU codec.
  *
- * @param  workBuf  The physical address of a working space of the codec.
- *  The size of the space must be at least CODE_BUF_SIZE + WORK_BUF_SIZE
- * + PARA_BUF2_SIZE + PARA_BUF_SIZE in KB.
+ * @param  cb  callback function if needed
  *
  * @return  This function always returns RETCODE_SUCCESS.
  */
-RetCode vpu_Init(PhysicalAddress workBuf)
+RetCode vpu_Init(void *cb)
 {
-	int i, size;
+	int i, size, err;
 	volatile Uint32 data;
 	Uint32 virt_codeBuf;
 	CodecInst *pCodecInst;
@@ -131,7 +136,14 @@ RetCode vpu_Init(PhysicalAddress workBuf)
 
 	ENTER_FUNC();
 
-	codeBuffer = workBuf;
+	err = IOSystemInit(cb);
+	if (err) {
+		err_msg("IOSystemInit() failure.\n");
+		return RETCODE_FAILURE;
+	}
+
+	LockVpu(vpu_semap);
+	codeBuffer = bit_work_addr.phy_addr;
 	workBuffer = codeBuffer + CODE_BUF_SIZE;
 	paraBuffer = workBuffer + WORK_BUF_SIZE + PARA_BUF2_SIZE;
 
@@ -232,10 +244,18 @@ RetCode vpu_Init(PhysicalAddress workBuf)
 		free(bit_code);
 	}
 
+	vpu_setting_iram();
+	UnlockVpu(vpu_semap);
+
 	EXIT_FUNC();
 	return RETCODE_SUCCESS;
 }
 
+void vpu_UnInit(void)
+{
+	IOSystemShutdown();
+}
+
 /*!
  * @brief Get VPU Firmware Version.
  */
@@ -998,8 +1018,8 @@ RetCode vpu_EncGetOutputInfo(EncHandle handle, EncOutputInfo * info)
 		return RETCODE_INVALID_HANDLE;
 	}
 
-        /* Clock is gated off when received interrupt in driver, so need to gate on here. */
-        IOClkGateSet(true);
+	/* Clock is gated off when received interrupt in driver, so need to gate on here. */
+	IOClkGateSet(true);
 
 	info->picType = VpuReadReg(RET_ENC_PIC_TYPE);
 
@@ -1488,6 +1508,13 @@ RetCode vpu_DecOpen(DecHandle * pHandle, DecOpenParam * pop)
 	pDecInfo->rotationAngle = 0;
 	pDecInfo->rotatorOutputValid = 0;
 	pDecInfo->rotatorStride = 0;
+	pDecInfo->deringEnable = 0;
+
+#ifdef	IMX37_3STACK
+	pDecInfo->dbkOffset.DbkOffsetEnable = 0;
+	pDecInfo->dbkOffset.DbkOffsetA = 0;
+	pDecInfo->dbkOffset.DbkOffsetB = 0;
+#endif
 
 	pDecInfo->filePlayEnable = pop->filePlayEnable;
 	if (pop->filePlayEnable == 1) {
@@ -1504,8 +1531,12 @@ RetCode vpu_DecOpen(DecHandle * pHandle, DecOpenParam * pop)
 	VpuWriteReg(pDecInfo->streamWrPtrRegAddr, pDecInfo->streamWrPtr);
 	VpuWriteReg(pDecInfo->frameDisplayFlagRegAddr, 0);
 
+	/* Clear stream end flag */
 	VpuWriteReg(BIT_BIT_STREAM_PARAM,
 		    VpuReadReg(BIT_BIT_STREAM_PARAM) & ~(1 << (instIdx + 2)));
+	VpuWriteReg(BIT_FRAME_MEM_CTRL,
+			    VpuReadReg(BIT_FRAME_MEM_CTRL) |
+				(pDecInfo->openParam.chromaInterleave << (instIdx + 1)));
 	UnlockVpu(vpu_semap);
 
 	return RETCODE_SUCCESS;
@@ -1661,10 +1692,6 @@ RetCode vpu_DecGetInitialInfo(DecHandle handle, DecInitialInfo * info)
 		VpuWriteReg(BIT_FRAME_MEM_CTRL,
 			    ((pDecInfo->openParam.chromaInterleave << 2) |
 			     IMAGE_ENDIAN));
-	else
-		VpuWriteReg(BIT_FRAME_MEM_CTRL,
-			    ((pDecInfo->openParam.chromaInterleave << 1) |
-			     IMAGE_ENDIAN));
 
 	if (pCodecInst->codecMode == MJPG_DEC) {
 		VpuWriteReg(CMD_DEC_SEQ_JPG_THUMB_EN,
@@ -1760,6 +1787,21 @@ RetCode vpu_DecGetInitialInfo(DecHandle handle, DecInitialInfo * info)
 			}
 	}
 
+#ifdef	IMX37_3STACK
+	val = VpuReadReg(RET_DEC_SEQ_INFO);
+	info->profile = (val >> 4) & 0xFF;
+	info->level = (val >> 12) & 0xFF;
+	info->interlace = (val >> 20) & 0x0001;
+	info->vc1_psf = (val >>22) & 0x0001;
+
+	val = VpuReadReg(RET_DEC_SEQ_ASPECT);
+	info->aspectRateInfo = val;
+#endif
+	if (cpu_is_mx37())
+		info->streamInfoObtained = 1;
+	else
+		info->streamInfoObtained = 0;
+
 	UnlockVpu(vpu_semap);
 
 	pDecInfo->initialInfo = *info;
@@ -2047,6 +2089,7 @@ RetCode vpu_DecStartOneFrame(DecHandle handle, DecParam * param)
 {
 	CodecInst *pCodecInst;
 	DecInfo *pDecInfo;
+	DecParam *pDecParam;
 	Uint32 rotMir;
 	Uint32 val = 0;
 	RetCode ret;
@@ -2059,6 +2102,9 @@ RetCode vpu_DecStartOneFrame(DecHandle handle, DecParam * param)
 
 	pCodecInst = handle;
 	pDecInfo = &pCodecInst->CodecInfo.decInfo;
+	pDecParam = &pCodecInst->CodecParam.decParam;
+	memcpy(pDecParam, param, sizeof(*pDecParam));
+
 
 	/* This means frame buffers have not been registered. */
 	if (pDecInfo->frameBufPool == 0) {
@@ -2147,7 +2193,70 @@ RetCode vpu_DecStartOneFrame(DecHandle handle, DecParam * param)
 		}
 	}
 
-	/* if iframeSearch is Enable, other bit is ignore; */
+#ifdef	IMX37_3STACK
+	if (param->extParam.mbParamEnable || param->extParam.mvReportEnable ||
+				param->extParam.frameBufStatEnable) {
+		pic_para_addr.size = PIC_PARA_BUF_SIZE;
+		if (IOGetPhyPicParaMem(&pic_para_addr) < 0)
+			return RETCODE_FAILURE;
+
+		if (IOGetVirtMem(&pic_para_addr) < 0) {
+			IOFreePhyPicParaMem(&pic_para_addr);
+			return RETCODE_FAILURE;
+		}
+
+		VpuWriteReg(CMD_DEC_PIC_PARA_BASE_ADDR, pic_para_addr.phy_addr);
+	}
+
+	/* TODO: need re-write after we get the revised schema */
+	if (param->extParam.userDataEnable) {
+		user_data_addr.size = USER_DATA_BUF_SIZE;
+		if (IOGetPhyUserDataMem(&user_data_addr) < 0)
+			return RETCODE_FAILURE;
+
+		if (IOGetVirtMem(&user_data_addr) < 0) {
+			IOFreePhyUserDataMem(&user_data_addr);
+			return RETCODE_FAILURE;
+		}
+#if 0
+		param->extParam.userDataBufAddr = user_data_addr.virt_uaddr;
+		param->extParam.userDataBufSize = user_data_addr.size;
+
+		VpuWriteReg(CMD_DEC_PIC_USER_DATA_BASE_ADDR, user_data_addr.phy_addr);
+		VpuWriteReg(CMD_DEC_PIC_USER_DATA_BUF_SIZE, param->extParam.userDataBufSize);
+#endif
+		VpuWriteReg(CMD_DEC_PIC_USER_DATA_BASE_ADDR, user_data_addr.phy_addr);
+		VpuWriteReg(CMD_DEC_PIC_USER_DATA_BUF_SIZE, user_data_addr.size);
+	}
+#endif
+
+	val = 0;
+	/* if iframeSearch is Enable, other bit is ignored. */
+#ifdef	IMX37_3STACK
+	if (param->iframeSearchEnable == 1) {
+		val |= (pDecInfo->dbkOffset.DbkOffsetEnable << 9);
+		val |= (param->extParam.frameBufStatEnable << 8);
+		val |= (param->extParam.mbParamEnable << 7);
+		val |= (param->extParam.mvReportEnable << 6);
+		val |= ((param->iframeSearchEnable & 0x1) << 2);
+	} else if (param->skipframeMode) {
+		val |= (pDecInfo->dbkOffset.DbkOffsetEnable << 9);
+		val |= (param->extParam.frameBufStatEnable << 8);
+		val |= (param->extParam.mbParamEnable << 7);
+		val |= (param->extParam.mvReportEnable << 6);
+		val |= (param->skipframeMode << 3);
+		val |= (param->prescanMode << 1);
+		val |= (param->prescanEnable);
+	} else {
+		val |= (pDecInfo->dbkOffset.DbkOffsetEnable << 9);
+		val |= (param->extParam.frameBufStatEnable << 8);
+		val |= (param->extParam.mbParamEnable << 7);
+		val |= (param->extParam.mvReportEnable << 6);
+		val |= (param->extParam.userDataEnable << 5);
+		val |= (param->prescanMode << 1);
+		val |= (param->prescanEnable);
+	}
+#else
 	if (param->iframeSearchEnable == 1) {
 		val = (param->iframeSearchEnable << 2) & 0x4;
 	} else {
@@ -2155,8 +2264,15 @@ RetCode vpu_DecStartOneFrame(DecHandle handle, DecParam * param)
 		    (param->iframeSearchEnable << 2) |
 		    (param->prescanMode << 1) | param->prescanEnable;
 	}
+#endif
+
 
 	VpuWriteReg(CMD_DEC_PIC_OPTION, val);
+#ifdef	IMX37_3STACK
+	VpuWriteReg( CMD_DEC_PIC_DBK_OFFSET,
+				 ((pDecInfo->dbkOffset.DbkOffsetA & 31) << 5) |
+				  (pDecInfo->dbkOffset.DbkOffsetB & 31));
+#endif
 	VpuWriteReg(CMD_DEC_PIC_SKIP_NUM, param->skipframeNum);
 
 	if (pCodecInst->codecMode == AVC_DEC) {
@@ -2223,6 +2339,7 @@ RetCode vpu_DecGetOutputInfo(DecHandle handle, DecOutputInfo * info)
 {
 	CodecInst *pCodecInst;
 	DecInfo *pDecInfo;
+	DecExtParam *pDecExtParam;
 	RetCode ret;
 	Uint32 val = 0;
 	PhysicalAddress paraBuffer;
@@ -2243,6 +2360,7 @@ RetCode vpu_DecGetOutputInfo(DecHandle handle, DecOutputInfo * info)
 
 	pCodecInst = handle;
 	pDecInfo = &pCodecInst->CodecInfo.decInfo;
+	pDecExtParam = &pCodecInst->CodecParam.decParam.extParam;
 
 	if (*ppendingInst == 0) {
 		return RETCODE_WRONG_CALL_SEQUENCE;
@@ -2268,10 +2386,143 @@ RetCode vpu_DecGetOutputInfo(DecHandle handle, DecOutputInfo * info)
 		info->mp4PackedPBframe = ((val >> 16) & 0x01);
 	}
 
+#ifdef	IMX37_3STACK
 	val = VpuReadReg(RET_DEC_PIC_TYPE);
 	info->picType = val & 0xff;
 	info->interlacedFrame = (val >> 16) & 0x1;
 
+	val = VpuReadReg(RET_DEC_PIC_TYPE);
+
+	info->interlacedFrame = (val >> 18) & 0x1;
+	info->pictureStructure = (val >> 19) & 0x0003;	/* MbAffFlag[17], FieldPicFlag[16] */
+	info->topFieldFirst = (val >> 21) & 0x0001;	/* TopFieldFirst[18] */
+	info->repeatFirstField = (val >> 22) & 0x0001;
+	info->progressiveFrame = (val >> 23) & 0x0003;
+	info->fieldSequence = (val >> 25) & 0x0007;
+
+	/* Frame Buffer Status */
+	if (pDecExtParam->frameBufStatEnable) {
+		int size, paraInfo, address;
+
+		char tempBuf[8];
+		memset(tempBuf, 0, 8);
+
+		memcpy(tempBuf, (void *)pic_para_addr.virt_uaddr, 8);
+
+		val = ((tempBuf[0]<<24) & 0xFF000000) |
+				((tempBuf[1]<<16) & 0x00FF0000) |
+				((tempBuf[2]<< 8) & 0x0000FF00) |
+				((tempBuf[3]<< 0) & 0x000000FF);
+		address = ((tempBuf[4]<<24) & 0xFF000000) |
+				((tempBuf[5]<<16) & 0x00FF0000) |
+				((tempBuf[6]<< 8) & 0x0000FF00) |
+				((tempBuf[7]<< 0) & 0x000000FF);
+
+		paraInfo = (val >> 24) & 0xFF;
+		size = (val >>  0) & 0xFFFFFF;
+
+		if (paraInfo == PARA_TYPE_FRM_BUF_STATUS) {
+			info->outputExtData.frameBufDataSize = size;
+			info->outputExtData.frameBufStatDataAddr = address +
+					(bit_work_addr.virt_uaddr - bit_work_addr.phy_addr);
+
+		} else {
+			/* VPU does not write data */
+			info->outputExtData.frameBufDataSize = 0;
+			info->outputExtData.frameBufStatDataAddr = 0;
+		}
+	}
+
+	/* Mb Param */
+	if (pDecExtParam->mbParamEnable) {
+		int size, paraInfo, address;
+
+		char tempBuf[8];
+		memset(tempBuf, 0, 8);
+
+		memcpy(tempBuf, (void *)(pic_para_addr.virt_uaddr + 8), 8);
+
+		val =	((tempBuf[0]<<24) & 0xFF000000) |
+				((tempBuf[1]<<16) & 0x00FF0000) |
+				((tempBuf[2]<< 8) & 0x0000FF00) |
+				((tempBuf[3]<< 0) & 0x000000FF);
+		address = ((tempBuf[4]<<24) & 0xFF000000) |
+				((tempBuf[5]<<16) & 0x00FF0000) |
+				((tempBuf[6]<< 8) & 0x0000FF00) |
+				((tempBuf[7]<< 0) & 0x000000FF);
+
+		paraInfo = (val >> 24) & 0xFF;
+		size = (val >>  0) & 0x00FFFF;
+
+		if (paraInfo == PARA_TYPE_MB_PARA) {
+			info->outputExtData.mbParamDataSize = size;
+			info->outputExtData.mbParamDataAddr = address +
+					(bit_work_addr.virt_uaddr - bit_work_addr.phy_addr);
+		} else {
+			/* VPU does not write data */
+			info->outputExtData.mbParamDataSize = 0;
+			info->outputExtData.mbParamDataAddr = 0;
+		}
+	}
+
+	/* Motion Vector */
+	if (pDecExtParam->mvReportEnable) {
+		int size, paraInfo, address, mvNumPerMb;
+
+		char tempBuf[8];
+		memset(tempBuf, 0, 8);
+
+		memcpy(tempBuf, (void *)(pic_para_addr.virt_uaddr + 16), 8);
+
+		val =	((tempBuf[0]<<24) & 0xFF000000) |
+				((tempBuf[1]<<16) & 0x00FF0000) |
+				((tempBuf[2]<< 8) & 0x0000FF00) |
+				((tempBuf[3]<< 0) & 0x000000FF);
+		address = ((tempBuf[4]<<24) & 0xFF000000) |
+				((tempBuf[5]<<16) & 0x00FF0000) |
+				((tempBuf[6]<< 8) & 0x0000FF00) |
+				((tempBuf[7]<< 0) & 0x000000FF);
+
+		paraInfo	= (val >> 24) & 0xFF;
+		mvNumPerMb	= (val >> 16) & 0xFF;
+		size		= (val >>  0) & 0xFFFF;
+
+		if (paraInfo == PARA_TYPE_MV) {
+			info->outputExtData.mvDataSize = size;
+			info->outputExtData.mvNumPerMb = mvNumPerMb;
+			info->outputExtData.mvDataAddr = address +
+					(bit_work_addr.virt_uaddr - bit_work_addr.phy_addr);
+		} else {
+			/* VPU does not write data */
+			info->outputExtData.mvNumPerMb = 0;
+			info->outputExtData.mvDataAddr = 0;
+		}
+	}
+
+	/* User Data */
+	if (pDecExtParam->userDataEnable) {
+		int userDataNum;
+		int userDataSize;
+		char tempBuf[8];
+		memset(tempBuf, 0, 8);
+
+		memcpy(tempBuf, (void *)user_data_addr.virt_uaddr, 8);
+
+		val = ((tempBuf[0]<<24) & 0xFF000000) |
+				((tempBuf[1]<<16) & 0x00FF0000) |
+				((tempBuf[2]<< 8) & 0x0000FF00) |
+				((tempBuf[3]<< 0) & 0x000000FF);
+
+		userDataNum = (val >> 16) & 0xFFFF;
+		userDataSize = (val >> 0) & 0xFFFF;
+		if (userDataNum == 0)
+			userDataSize = 0;
+
+		info->outputExtData.userDataNum = userDataNum;
+		info->outputExtData.userDataSize = userDataSize;
+	}
+#endif
+
 	info->numOfErrMBs[0] = VpuReadReg(RET_DEC_PIC_ERR_MB);
 	info->prescanresult = VpuReadReg(RET_DEC_PIC_OPTION);
 
@@ -2627,6 +2878,20 @@ RetCode vpu_DecGiveCommand(DecHandle handle, CodecCommand cmd, void *param)
 			break;
 		}
 
+	case SET_DBK_OFFSET :
+		{
+			DbkOffset dbkOffset;
+			dbkOffset = *(DbkOffset *)param;
+
+			pDecInfo->dbkOffset.DbkOffsetA = dbkOffset.DbkOffsetA;
+			pDecInfo->dbkOffset.DbkOffsetB = dbkOffset.DbkOffsetB;
+
+			pDecInfo->dbkOffset.DbkOffsetEnable =
+					((pDecInfo->dbkOffset.DbkOffsetA !=0 ) &&
+						(pDecInfo->dbkOffset.DbkOffsetB != 0));
+			break;
+		}
+
 	default:
 		return RETCODE_INVALID_COMMAND;
 	}
diff --git a/vpu/vpu_lib.h b/vpu/vpu_lib.h
index 7e46509..b8ed070 100644
--- a/vpu/vpu_lib.h
+++ b/vpu/vpu_lib.h
@@ -28,6 +28,7 @@ typedef unsigned char Uint8;
 typedef unsigned long Uint32;
 typedef unsigned short Uint16;
 typedef Uint32 PhysicalAddress;
+typedef Uint32 VirtualAddress;
 
 #define STREAM_FULL_EMPTY_CHECK_DISABLE 0
 #define BUF_PIC_FLUSH			1
@@ -106,7 +107,8 @@ typedef enum {
 	ENC_SET_GOP_NUMBER,
 	ENC_SET_INTRA_QP,
 	ENC_SET_BITRATE,
-	ENC_SET_FRAME_RATE
+	ENC_SET_FRAME_RATE,
+	SET_DBK_OFFSET
 } CodecCommand;
 
 typedef struct {
@@ -130,6 +132,12 @@ typedef enum {
 	MIRDIR_HOR_VER
 } MirrorDirection;
 
+typedef struct {
+	int DbkOffsetA;
+	int DbkOffsetB;
+	int DbkOffsetEnable;
+} DbkOffset;
+
 /* Decode struct and definition */
 typedef struct CodecInst DecInst;
 typedef DecInst *DecHandle;
@@ -170,6 +178,15 @@ typedef struct {
 	int worstSliceSize;
 	int mjpg_thumbNailEnable;
 	int mjpg_sourceFormat;
+
+	int streamInfoObtained;
+	int profile;
+	int level;
+	int interlace;
+	/*int vc1_pulldown;*/
+	int vc1_psf;
+
+	int aspectRateInfo;
 } DecInitialInfo;
 
 typedef struct {
@@ -187,6 +204,23 @@ typedef struct {
 	DecAvcSliceBufInfo avcSliceBufInfo;
 } DecBufInfo;
 
+typedef enum {
+	PARA_TYPE_FRM_BUF_STATUS = 1,
+	PARA_TYPE_MB_PARA = 2,
+	PARA_TYPE_MV = 4,
+} ExtParaType;
+
+typedef struct {
+//	PhysicalAddress picParaBaseAddr;
+
+	int frameBufStatEnable;		/* Frame Buffer Status */
+	int mbParamEnable;		/* Mb Param for Error Concealment */
+	int mvReportEnable;		/* Motion vector */
+	int userDataEnable;		/* User Data */
+//	int userDataBufSize;
+//	VirtualAddress userDataBufAddr;
+} DecExtParam;
+
 typedef struct {
 	int prescanEnable;
 	int prescanMode;
@@ -198,9 +232,26 @@ typedef struct {
 	int chunkSize;
 	int picStartByteOffset;
 	PhysicalAddress picStreamBufferAddr;
+
+	DecExtParam extParam;
 } DecParam;
 
 typedef struct {
+	int frameBufDataSize;			/* Frame Buffer Status */
+	VirtualAddress frameBufStatDataAddr;
+
+	int mbParamDataSize;			/* Mb Param for Error Concealment */
+	VirtualAddress mbParamDataAddr;
+
+	int mvDataSize;				/* Motion vector */
+	int mvNumPerMb;
+	VirtualAddress mvDataAddr;
+
+	int userDataNum;			/* User Data */
+	int userDataSize;
+} DecoderOutputExtParam;
+
+typedef struct {
 	int indexFrameDisplay;
 	int indexFrameDecoded[2];
 	int picType;
@@ -216,6 +267,14 @@ typedef struct {
 	int interlacedFrame;
 	int mp4PackedPBframe;
 	int mp4PackedMode;
+
+	int pictureStructure;
+	int topFieldFirst;
+	int repeatFirstField;
+	int progressiveFrame;
+	int fieldSequence;
+
+	DecoderOutputExtParam outputExtData;
 } DecOutputInfo;
 
 typedef struct {
@@ -420,6 +479,8 @@ typedef struct {
 	int picSrcSize;
 	int dynamicAllocEnable;
 	int vc1BframeDisplayValid;
+
+	DbkOffset dbkOffset;
 } DecInfo;
 
 typedef struct CodecInst {
@@ -430,6 +491,10 @@ typedef struct CodecInst {
 		EncInfo encInfo;
 		DecInfo decInfo;
 	} CodecInfo;
+	union {
+		EncParam encParam;
+		DecParam decParam;
+	} CodecParam;
 } CodecInst;
 
 /*
@@ -462,7 +527,7 @@ typedef struct vpu_versioninfo {
  * v4.1.2 [2008.08.22] update MX37 VPU firmware to V1.0.5
  * v4.0.2 [2008.08.21] add the IOClkGateSet() for power saving.
  */
-#define VPU_LIB_VERSION_CODE	VPU_LIB_VERSION(4, 3, 2)
+#define VPU_LIB_VERSION_CODE	VPU_LIB_VERSION(4, 4, 2)
 
 extern unsigned int system_rev;
 
@@ -491,7 +556,8 @@ MXC_REV(cpu_is_mx32);
 MXC_REV(cpu_is_mx37);
 MXC_REV(cpu_is_mx51);
 
-RetCode vpu_Init(PhysicalAddress workBuf);
+RetCode vpu_Init(void *);
+void vpu_UnInit();
 RetCode vpu_GetVersionInfo(vpu_versioninfo * verinfo);
 
 RetCode vpu_EncOpen(EncHandle *, EncOpenParam *);
diff --git a/vpu/vpu_reg.h b/vpu/vpu_reg.h
index d0844b8..f251f4b 100644
--- a/vpu/vpu_reg.h
+++ b/vpu/vpu_reg.h
@@ -114,6 +114,7 @@
 
 #define CMD_DEC_SEQ_INIT_ESCAPE		0x114
 
+#define RET_DEC_SEQ_ASPECT		0x1B0
 #define RET_DEC_SEQ_SUCCESS		0x1C0
 #define RET_DEC_SEQ_SRC_FMT		0x1C4
 #define RET_DEC_SEQ_SRC_SIZE		0x1C4
@@ -201,6 +202,10 @@
 #define CMD_DEC_PIC_CHUNK_SIZE		0x1A8
 #define CMD_DEC_PIC_BB_START		0x1AC
 #define CMD_DEC_PIC_START_BYTE		0x1B0
+#define CMD_DEC_PIC_PARA_BASE_ADDR	0x1B4
+#define CMD_DEC_PIC_USER_DATA_BASE_ADDR	0x1B8
+#define CMD_DEC_PIC_USER_DATA_BUF_SIZE	0x1BC
+
 #else
 #define CMD_DEC_PIC_ROT_STRIDE		0x190
 #define CMD_DEC_PIC_OPTION		0x194
@@ -210,6 +215,7 @@
 #define CMD_DEC_PIC_START_BYTE		0x1A4
 #endif
 
+#define CMD_DEC_PIC_DBK_OFFSET		0x1C0
 #define RET_DEC_PIC_FRAME_NUM		0x1C0
 #define RET_DEC_PIC_FRAME_IDX		0x1C4
 #define RET_DEC_PIC_ERR_MB		0x1C8
-- 
1.8.0

