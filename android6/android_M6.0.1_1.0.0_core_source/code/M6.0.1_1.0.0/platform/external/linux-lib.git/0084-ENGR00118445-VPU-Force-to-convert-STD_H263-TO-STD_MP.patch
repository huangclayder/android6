From d5dc8873230c5908d2b1d3f12dd116e9c76f2f3c Mon Sep 17 00:00:00 2001
From: Sammy He <r62914@freescale.com>
Date: Mon, 16 Nov 2009 09:42:19 +0800
Subject: [PATCH 084/280] ENGR00118445 VPU: Force to convert STD_H263 TO
 STD_MPEG4 in decoder

Workaround for STD_H263 support: Force to convert STD_H263
to STD_MPEG4 since VPU treats all H263 as MPEG4 in decoder

Signed-off-by: Sammy He <r62914@freescale.com>
---
 vpu/vpu_lib.c  |  3 +--
 vpu/vpu_util.c | 15 +++++++--------
 2 files changed, 8 insertions(+), 10 deletions(-)

diff --git a/vpu/vpu_lib.c b/vpu/vpu_lib.c
index 84d0f75..850898b 100644
--- a/vpu/vpu_lib.c
+++ b/vpu/vpu_lib.c
@@ -1742,8 +1742,7 @@ RetCode vpu_DecOpen(DecHandle * pHandle, DecOpenParam * pop)
 		pCodecInst->codecMode =
 		    pop->bitstreamFormat == STD_AVC ? AVC_DEC : MP4_DEC;
 	} else {
-		if (pop->bitstreamFormat == STD_MPEG4 ||
-		    pop->bitstreamFormat == STD_H263) {
+		if (pop->bitstreamFormat == STD_MPEG4) {
 			pCodecInst->codecMode = MP4_DEC;
 		} else if (pop->bitstreamFormat == STD_AVC) {
 			pCodecInst->codecMode = AVC_DEC;
diff --git a/vpu/vpu_util.c b/vpu/vpu_util.c
index 9ca448f..5112a07 100644
--- a/vpu/vpu_util.c
+++ b/vpu/vpu_util.c
@@ -516,20 +516,23 @@ RetCode CheckDecOpenParam(DecOpenParam * pop)
 	    pop->bitstreamBufferSize > 16383 * 1024) {
 		return RETCODE_INVALID_PARAM;
 	}
+
+	/* Workaround for STD_H263 support: Force to convert STD_H263
+           to STD_MPEG4 since VPU treats all H263 as MPEG4 in decoder*/
+	if (pop->bitstreamFormat == STD_H263)
+		pop->bitstreamFormat = STD_MPEG4;
+
 	if (cpu_is_mx27()) {
 		if (pop->bitstreamFormat != STD_MPEG4 &&
-		    pop->bitstreamFormat != STD_H263 &&
 		    pop->bitstreamFormat != STD_AVC)
 			return RETCODE_INVALID_PARAM;
 	} else if (cpu_is_mx32()) {
 		if (pop->bitstreamFormat != STD_MPEG4 &&
-		    pop->bitstreamFormat != STD_H263 &&
 		    pop->bitstreamFormat != STD_AVC &&
 		    pop->bitstreamFormat != STD_VC1)
 			return RETCODE_INVALID_PARAM;
 	} else if (cpu_is_mx37()) {
 		if (pop->bitstreamFormat != STD_MPEG4 &&
-		    pop->bitstreamFormat != STD_H263 &&
 		    pop->bitstreamFormat != STD_AVC &&
 		    pop->bitstreamFormat != STD_VC1 &&
 		    pop->bitstreamFormat != STD_MPEG2 &&
@@ -537,7 +540,6 @@ RetCode CheckDecOpenParam(DecOpenParam * pop)
 			return RETCODE_INVALID_PARAM;
 	} else if (cpu_is_mx51()) {
 		if (pop->bitstreamFormat != STD_MPEG4 &&
-		    pop->bitstreamFormat != STD_H263 &&
 		    pop->bitstreamFormat != STD_AVC &&
 		    pop->bitstreamFormat != STD_VC1 &&
 		    pop->bitstreamFormat != STD_MPEG2 &&
@@ -547,8 +549,7 @@ RetCode CheckDecOpenParam(DecOpenParam * pop)
 			return RETCODE_INVALID_PARAM;
 	}
 	if (cpu_is_mx27()) {
-		if (pop->bitstreamFormat == STD_MPEG4 ||
-		    pop->bitstreamFormat == STD_H263) {
+		if (pop->bitstreamFormat == STD_MPEG4) {
 			if (pop->qpReport != 0 && pop->qpReport != 1) {
 				return RETCODE_INVALID_PARAM;
 			}
@@ -557,8 +558,6 @@ RetCode CheckDecOpenParam(DecOpenParam * pop)
 		if (pop->mp4DeblkEnable == 1 && !(pop->bitstreamFormat ==
 						  STD_MPEG4
 						  || pop->bitstreamFormat ==
-						  STD_H263
-						  || pop->bitstreamFormat ==
 						  STD_MPEG2
 						  || pop->bitstreamFormat ==
 						  STD_DIV3)) {
-- 
1.8.0

