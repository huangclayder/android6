From 37ef1d08862287c1fd1831246376da381fcc8878 Mon Sep 17 00:00:00 2001
From: Wang Haoran <b50027@freescale.com>
Date: Wed, 20 Aug 2014 17:09:55 +0800
Subject: [PATCH 02/22] ENGR00326131-2 Porting Realtek RTL8821AS wifi card

Updated codes from Realtek_wpa_supplicant_20140818.
Improved and fixed the connection of P2p.

Signed-off-by: Wang Haoran <b50027@freescale.com>

Conflicts:
	wpa_supplicant/p2p_supplicant.c
---
 src/p2p/p2p.c                   | 10 ++++++++++
 src/p2p/p2p_dev_disc.c          | 10 ++++++++--
 src/p2p/p2p_invitation.c        |  6 +++++-
 src/p2p/p2p_pd.c                |  2 +-
 wpa_supplicant/ctrl_iface.c     | 15 +++++++++++++++
 wpa_supplicant/p2p_supplicant.c | 40 ++++++++++++++++++++++++++++++++++++++--
 wpa_supplicant/wpa_supplicant.c | 13 ++++++++++---
 7 files changed, 87 insertions(+), 9 deletions(-)

diff --git a/src/p2p/p2p.c b/src/p2p/p2p.c
index b87ff96..780d757 100644
--- a/src/p2p/p2p.c
+++ b/src/p2p/p2p.c
@@ -95,6 +95,16 @@ static void p2p_expire_peers(struct p2p_data *p2p)
 			continue;
 		}
 
+#ifdef ANDROID_P2P
+		/* If Connection is in progress, don't expire the peer
+		*/
+		if (p2p_connection_in_progress(p2p))
+			continue;
+#endif
+#ifdef REALTEK_WIFI_VENDOR
+               if (dev->req_config_methods != 0)
+                       continue;
+#endif
 		p2p_dbg(p2p, "Expiring old peer entry " MACSTR,
 			MAC2STR(dev->info.p2p_device_addr));
 		dl_list_del(&dev->list);
diff --git a/src/p2p/p2p_dev_disc.c b/src/p2p/p2p_dev_disc.c
index 98805fe..0fcc59f 100644
--- a/src/p2p/p2p_dev_disc.c
+++ b/src/p2p/p2p_dev_disc.c
@@ -20,12 +20,18 @@ static struct wpabuf * p2p_build_dev_disc_req(struct p2p_data *p2p,
 {
 	struct wpabuf *buf;
 	u8 *len;
-
+#ifdef REALTEK_WIFI_VENDOR
+    static u8 diatkn_inc = 0;
+#endif
 	buf = wpabuf_alloc(100);
 	if (buf == NULL)
 		return NULL;
-
+#ifdef REALTEK_WIFI_VENDOR
+    if  (!(diatkn_inc++ % 2))
+        go->dialog_token++;
+#else
 	go->dialog_token++;
+#endif
 	if (go->dialog_token == 0)
 		go->dialog_token = 1;
 	p2p_buf_add_public_action_hdr(buf, P2P_DEV_DISC_REQ, go->dialog_token);
diff --git a/src/p2p/p2p_invitation.c b/src/p2p/p2p_invitation.c
index f5454f7..e134d54 100644
--- a/src/p2p/p2p_invitation.c
+++ b/src/p2p/p2p_invitation.c
@@ -212,7 +212,11 @@ void p2p_process_invitation_req(struct p2p_data *p2p, const u8 *sa,
 			goto fail;
 		}
 	}
-
+#ifdef REALTEK_WIFI_VENDOR
+      else {
+               p2p_add_dev_info(p2p, sa, dev, &msg);
+       }
+#endif
 	if (!msg.group_id || !msg.channel_list) {
 		p2p_dbg(p2p, "Mandatory attribute missing in Invitation Request from "
 			MACSTR, MAC2STR(sa));
diff --git a/src/p2p/p2p_pd.c b/src/p2p/p2p_pd.c
index 86558f7..f2b3549 100644
--- a/src/p2p/p2p_pd.c
+++ b/src/p2p/p2p_pd.c
@@ -20,7 +20,7 @@
  * Number of retries to attempt for provision discovery requests
  * in case the peer is not listening.
  */
-#define MAX_PROV_DISC_REQ_RETRIES 120
+#define MAX_PROV_DISC_REQ_RETRIES 10
 
 
 static void p2p_build_wps_ie_config_methods(struct wpabuf *buf,
diff --git a/wpa_supplicant/ctrl_iface.c b/wpa_supplicant/ctrl_iface.c
index bab10ad..1cde5da 100644
--- a/wpa_supplicant/ctrl_iface.c
+++ b/wpa_supplicant/ctrl_iface.c
@@ -6782,6 +6782,14 @@ static int wpas_ctrl_radio_work_show(struct wpa_supplicant *wpa_s,
 	struct wpa_radio_work *work;
 	char *pos, *end;
 	struct os_reltime now, diff;
+	char *reply;
+	const int reply_size = 4096;
+	int ctrl_rsp = 0;
+	int reply_len;
+#ifdef REALTEK_WIFI_VENDOR
+    if(os_strncmp(buf, "PING", 4) != 0)
+        wpa_printf(MSG_INFO, "[CTRL_IFACE]%s: %s", wpa_s->ifname, buf);
+#endif
 
 	pos = buf;
 	end = buf + buflen;
@@ -8575,6 +8583,8 @@ char * wpa_supplicant_ctrl_iface_process(struct wpa_supplicant *wpa_s,
 #endif /* CONFIG_AUTOSCAN */
 #ifdef ANDROID
 	} else if (os_strncmp(buf, "DRIVER ", 7) == 0) {
+        if (os_strncasecmp(buf + 7, "P2P_DISABLE", 11) == 0)
+            wpas_p2p_stop_find(wpa_s);
 		reply_len = wpa_supplicant_driver_cmd(wpa_s, buf + 7, reply,
 						      reply_size);
 #endif /* ANDROID */
@@ -9148,6 +9158,11 @@ char * wpa_supplicant_global_ctrl_iface_process(struct wpa_global *global,
 	if (reply)
 		return reply;
 
+#ifdef REALTEK_WIFI_VENDOR
+       if(os_strncmp(buf, "PING", 4) != 0)
+               wpa_printf(MSG_INFO, "[CTRL_IFACE_G]%s", buf);
+#endif
+
 	if (os_strcmp(buf, "PING") == 0)
 		level = MSG_EXCESSIVE;
 	wpa_hexdump_ascii(level, "RX global ctrl_iface",
diff --git a/wpa_supplicant/p2p_supplicant.c b/wpa_supplicant/p2p_supplicant.c
index b9ebd38..a92e357 100644
--- a/wpa_supplicant/p2p_supplicant.c
+++ b/wpa_supplicant/p2p_supplicant.c
@@ -996,7 +996,13 @@ static int wpas_p2p_persistent_group(struct wpa_supplicant *wpa_s,
 		wpa_hexdump(MSG_DEBUG, "P2P: Beacon IEs",
 			    ((u8 *) bss + 1) + bss->ie_len,
 			    bss->beacon_ie_len);
-		return 0;
+#ifdef REALTEK_WIFI_VENDOR
+               wpa_printf(MSG_INFO, "Aries IOT patch : forcing be persistent and bssid " MACSTR " as go_dev_addr!! \n\n", MAC2STR(bssid));
+               memcpy(go_dev_addr, bssid, ETH_ALEN);
+               return 1;
+#else
+               return 0;
+#endif
 	}
 
 	group_capab = p2p_get_group_capab(p2p);
@@ -2793,6 +2799,15 @@ static void wpas_invitation_received(void *ctx, const u8 *sa, const u8 *bssid,
 		wpa_printf(MSG_DEBUG, "P2P: Invitation from peer " MACSTR
 			   " was accepted; op_freq=%d MHz, SSID=%s",
 			   MAC2STR(sa), op_freq, wpa_ssid_txt(ssid, ssid_len));
+#ifdef REALTEK_WIFI_VENDOR
+            // clear previous wpa_s->go_params because it is out of data.
+             if (wpa_s->go_params) {
+                        wpa_printf(MSG_INFO, "%s() free go_params \n", __func__);
+                            os_free(wpa_s->go_params);
+                          wpa_s->go_params = NULL;
+          }
+
+#endif
 		if (s) {
 			int go = s->mode == WPAS_MODE_P2P_GO;
 			wpas_p2p_group_add_persistent(
@@ -5577,8 +5592,12 @@ int wpas_p2p_group_add_persistent(struct wpa_supplicant *wpa_s,
 				freq = 0;
 		}
 
+
+	if (ssid->mode == WPAS_MODE_INFRA) {
+        os_sleep(0, 500000);
 		return wpas_start_p2p_client(wpa_s, ssid, addr_allocated, freq);
-	} else {
+    }
+	if (ssid->mode != WPAS_MODE_P2P_GO)
 		return -1;
 	}
 
@@ -6399,6 +6418,22 @@ static void wpas_p2p_set_group_idle_timeout(struct wpa_supplicant *wpa_s)
 			return;
 	}
 
+#ifdef REALTEK_WIFI_VENDOR
+
+    timeout = P2P_MAX_CLIENT_IDLE;
+
+    if (wpa_s->current_ssid->mode == WPAS_MODE_INFRA) {
+        if (wpa_s->show_group_started) {
+             wpa_printf(MSG_INFO, "P2P: set P2P group idle timeout to 20s "
+                       "while waiting for initial 4-way handshake to "
+                       "complete");
+             timeout = P2P_MAX_CLIENT_IDLE;
+         } else {
+             timeout = 0;
+         }
+    }
+
+#else //REALTEK_WIFI_VENDOR
 	if (wpa_s->p2p_in_provisioning) {
 		/*
 		 * Use the normal group formation timeout during the
@@ -6409,6 +6444,7 @@ static void wpas_p2p_set_group_idle_timeout(struct wpa_supplicant *wpa_s)
 			   "during provisioning");
 		return;
 	}
+#endif
 
 	if (wpa_s->show_group_started) {
 		/*
diff --git a/wpa_supplicant/wpa_supplicant.c b/wpa_supplicant/wpa_supplicant.c
index 722294d..1d78ebf 100644
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -2537,7 +2537,11 @@ static void wpa_supplicant_enable_one_network(struct wpa_supplicant *wpa_s,
 	 * Try to reassociate since there is no current configuration and a new
 	 * network was made available.
 	 */
-	if (!wpa_s->current_ssid && !wpa_s->disconnected)
+#ifdef REALTEK_WIFI_VENDOR
+	if (!wpa_s->current_ssid)
+#else
+    if (!wpa_s->current_ssid && !wpa_s->disconnected)
+#endif
 		wpa_s->reassociate = 1;
 }
 
@@ -2557,8 +2561,11 @@ void wpa_supplicant_enable_network(struct wpa_supplicant *wpa_s,
 			wpa_supplicant_enable_one_network(wpa_s, ssid);
 	} else
 		wpa_supplicant_enable_one_network(wpa_s, ssid);
-
-	if (wpa_s->reassociate && !wpa_s->disconnected) {
+#ifdef REALTEK_WIFI_VENDOR
+	if (wpa_s->reassociate) {
+#else
+    if (wpa_s->reassociate && !wpa_s->disconnected) {
+#endif
 		if (wpa_s->sched_scanning) {
 			wpa_printf(MSG_DEBUG, "Stop ongoing sched_scan to add "
 				   "new network to scan filters");
-- 
1.8.0

