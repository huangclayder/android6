From b4b0cc9fbc53ad7dbe6dfff121ae00a08e028579 Mon Sep 17 00:00:00 2001
From: Xinyu Chen <xinyu.chen@freescale.com>
Date: Thu, 22 Nov 2012 16:01:14 +0800
Subject: [PATCH 5/8] ENGR00234042 Fix file over 2G size can not be written

The off_t in bionic is defined as int which is 32bits.
But in ntfs-3g, the off_t is required to define as
off64_t or loff_t 64bits.
Before this change, the fuse file write operation
with 32bit offset will failed when it's exceed 2G:
0x80000000. As signed integer it will be take as a
negtive value, after convert it to s64 in ntfs_fuse_write(),
the s64 offset param value will be 0xFFFFFFFFFF80000000.
Then causes offset over boundary and write failed.

Signed-off-by: Xinyu Chen <xinyu.chen@freescale.com>
---
 config.h | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/config.h b/config.h
index 19942cc..36e8ff0 100644
--- a/config.h
+++ b/config.h
@@ -359,7 +359,10 @@
 #endif
 
 /* Define to `long int' if <sys/types.h> does not define. */
-/* #undef off_t */
+#ifndef _OFF_T_DEFINED_
+#define _OFF_T_DEFINED_
+typedef long long off_t;
+#endif
 
 /* Define to `unsigned int' if <sys/types.h> does not define. */
 /* #undef size_t */
-- 
1.8.0

