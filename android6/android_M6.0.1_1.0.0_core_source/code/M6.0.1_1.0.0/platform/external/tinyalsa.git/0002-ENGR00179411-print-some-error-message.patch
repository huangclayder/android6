From 7f87c8c5ba7faa8fb98b284f60b8c1521bbb5a58 Mon Sep 17 00:00:00 2001
From: b02247 <b02247@freescale.com>
Date: Mon, 21 May 2012 09:55:08 +0800
Subject: [PATCH 02/13] ENGR00179411 print some error message

output some error message

Signed-off-by: b02247 <b02247@freescale.com>
---
 include/tinyalsa/asoundlib.h |  2 +-
 pcm.c                        | 14 +++++++++++---
 2 files changed, 12 insertions(+), 4 deletions(-)

diff --git a/include/tinyalsa/asoundlib.h b/include/tinyalsa/asoundlib.h
index fbfb711..e83867e 100644
--- a/include/tinyalsa/asoundlib.h
+++ b/include/tinyalsa/asoundlib.h
@@ -254,7 +254,7 @@ int pcm_get_poll_fd(struct pcm *pcm);
  * Only accepted if opened with PCM_MMAP and PCM_NOIRQ flags
  */
 int pcm_set_avail_min(struct pcm *pcm, int avail_min);
-
+int pcm_drain(struct pcm *pcm);
 /*
  * MIXER API
  */
diff --git a/pcm.c b/pcm.c
index 488ea0c..ade3b2a 100644
--- a/pcm.c
+++ b/pcm.c
@@ -1200,7 +1200,7 @@ int pcm_mmap_transfer(struct pcm *pcm, const void *buffer, unsigned int bytes)
         /* get the available space for writing new frames */
         avail = pcm_avail_update(pcm);
         if (avail < 0) {
-            fprintf(stderr, "cannot determine available mmap frames");
+            oops(pcm, err, "cannot determine available mmap frames");
             return err;
         }
 
@@ -1208,7 +1208,7 @@ int pcm_mmap_transfer(struct pcm *pcm, const void *buffer, unsigned int bytes)
 	    if (!pcm->running &&
             (pcm->buffer_size - avail) >= pcm->config.start_threshold) {
             if (pcm_start(pcm) < 0) {
-               fprintf(stderr, "start error: hw 0x%x app 0x%x avail 0x%x\n",
+               oops(pcm, -errno, "start error: hw 0x%x app 0x%x avail 0x%x\n",
                     (unsigned int)pcm->mmap_status->hw_ptr,
                     (unsigned int)pcm->mmap_control->appl_ptr,
                     avail);
@@ -1259,7 +1259,7 @@ int pcm_mmap_transfer(struct pcm *pcm, const void *buffer, unsigned int bytes)
         /* copy frames from buffer */
         frames = pcm_mmap_transfer_areas(pcm, (void *)buffer, offset, frames);
         if (frames < 0) {
-            fprintf(stderr, "write error: hw 0x%x app 0x%x avail 0x%x\n",
+            oops(pcm, frames, "write error: hw 0x%x app 0x%x avail 0x%x\n",
                     (unsigned int)pcm->mmap_status->hw_ptr,
                     (unsigned int)pcm->mmap_control->appl_ptr,
                     avail);
@@ -1303,3 +1303,11 @@ int pcm_ioctl(struct pcm *pcm, int request, ...)
 
     return ioctl(pcm->fd, request, arg);
 }
+
+int pcm_drain(struct pcm *pcm)
+{
+    if (ioctl(pcm->fd, SNDRV_PCM_IOCTL_DRAIN) < 0)
+        return oops(pcm, errno, "drain failed");
+
+    return 0;
+}
-- 
1.8.0

