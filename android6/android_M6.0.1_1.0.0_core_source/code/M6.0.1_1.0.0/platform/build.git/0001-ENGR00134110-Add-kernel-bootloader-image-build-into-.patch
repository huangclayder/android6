From d6d88eb3f9913168f28d92629475a85c99445da3 Mon Sep 17 00:00:00 2001
From: Xinyu Chen <xinyu.chen@freescale.com>
Date: Mon, 29 Nov 2010 14:35:31 +0800
Subject: [PATCH 01/34] ENGR00134110 Add kernel&bootloader image build into JB
 build system

Add Freescale bootloader target and kernel target with the
arm-eabi-4.6 toolchain

Change-Id: Ic536ca863bf9914cc90e9ab7866c8a01a7881e20
Signed-off-by: guoyin.chen <guoyin.chen@freescale.com>
---
 core/Makefile | 56 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 core/main.mk  |  4 +++-
 2 files changed, 59 insertions(+), 1 deletion(-)

diff --git a/core/Makefile b/core/Makefile
index 07d1c94..04a8bf8 100644
--- a/core/Makefile
+++ b/core/Makefile
@@ -923,6 +923,62 @@ else
 RECOVERY_RESOURCE_ZIP :=
 endif
 
+.PHONY: bootloader
+ifneq ($(strip $(TARGET_BOOTLOADER_CONFIG)),)
+BOOTLOADER_CROSS_TOOLCHAIN := `pwd`/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6/bin/arm-eabi-
+BOOTLOADER_ENV := ARCH=arm CROSS_COMPILE=$(BOOTLOADER_CROSS_TOOLCHAIN)
+HOST_PROCESSOR := $(shell cat /proc/cpuinfo | grep processor | wc -l)
+TARGET_BOOTLOADER_IMAGE := $(PRODUCT_OUT)/u-boot.bin
+
+BOOTLOADER_PATH := bootable/bootloader/uboot-imx/
+BOOTLOADER_CONFIG_FILE := $(BOOTLOADER_PATH)/include/config.h
+
+bootloader: $(TARGET_BOOTLOADER_IMAGE)
+
+$(TARGET_BOOTLOADER_IMAGE):
+	@for ubootplat in $(TARGET_BOOTLOADER_CONFIG); do \
+		UBOOT_PLATFORM=`echo $$ubootplat | cut -d':' -f1`; \
+		UBOOT_CONFIG=`echo $$ubootplat | cut -d':' -f2`; \
+		$(MAKE) -C bootable/bootloader/uboot-imx/ distclean; \
+		$(MAKE) -C bootable/bootloader/uboot-imx/ $$UBOOT_CONFIG $(BOOTLOADER_ENV); \
+		$(MAKE) -C bootable/bootloader/uboot-imx/ $(BOOTLOADER_ENV); \
+		install -D bootable/bootloader/uboot-imx/u-boot.bin $(PRODUCT_OUT)/u-boot-$$UBOOT_PLATFORM.bin; \
+		install -D bootable/bootloader/uboot-imx/u-boot.bin $@; \
+	done
+else
+bootloader:
+endif
+
+.PHONY: kernelimage
+ifneq ($(strip $(TARGET_NO_KERNEL)),true)
+KERNEL_CROSS_TOOLCHAIN := `pwd`/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6/bin/arm-eabi-
+KERNEL_ENV := ARCH=arm CROSS_COMPILE=$(KERNEL_CROSS_TOOLCHAIN)
+HOST_PROCESSOR := $(shell cat /proc/cpuinfo | grep processor | wc -l)
+INSTALLED_KERNEL_TARGET := $(PRODUCT_OUT)/kernel
+TARGET_PREBUILT_KERNEL := $(PRODUCT_OUT)/kernel
+KERNEL_CONFIGURE := kernel_imx/.config
+KERNEL_OUT := $(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ
+KERNEL_HEADERS_INSTALL := $(KERNEL_OUT)/usr
+
+.PHONY: $(TARGET_PREBUILT_KERNEL)
+kernelimage: $(TARGET_PREBUILT_KERNEL)
+
+$(KERNEL_CONFIGURE): kernel_imx/arch/arm/configs/$(TARGET_KERNEL_DEFCONF)
+	$(MAKE) -C kernel_imx $(TARGET_KERNEL_DEFCONF) $(KERNEL_ENV)
+
+$(KERNEL_HEADERS_INSTALL): $(KERNEL_CONFIGURE)
+	install -d $(KERNEL_OUT)
+	$(MAKE) -C kernel_imx -j$(HOST_PROCESSOR) O=../$(KERNEL_OUT) $(KERNEL_ENV) headers_install
+
+$(TARGET_PREBUILT_KERNEL): $(KERNEL_CONFIGURE)
+	$(MAKE) -C kernel_imx -j$(HOST_PROCESSOR) uImage $(KERNEL_ENV)
+	install -D kernel_imx/arch/arm/boot/uImage $(PRODUCT_OUT)/uImage
+	install -D kernel_imx/arch/arm/boot/zImage $(PRODUCT_OUT)/kernel
+
+else
+kernelimage:
+endif
+
 .PHONY: recoveryimage
 recoveryimage: $(INSTALLED_RECOVERYIMAGE_TARGET) $(RECOVERY_RESOURCE_ZIP)
 
diff --git a/core/main.mk b/core/main.mk
index 5b6e1e9..fe10b65 100644
--- a/core/main.mk
+++ b/core/main.mk
@@ -875,7 +875,9 @@ endif
 
 # Build files and then package it into the rom formats
 .PHONY: droidcore
-droidcore: files \
+droidcore: kernelimage \
+	bootloader \
+	files \
 	systemimage \
 	$(INSTALLED_BOOTIMAGE_TARGET) \
 	$(INSTALLED_RECOVERYIMAGE_TARGET) \
-- 
1.8.0

